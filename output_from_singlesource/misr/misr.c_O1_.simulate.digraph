digraph "CFG for 'simulate' function" {
	label="CFG for 'simulate' function";

	Node0x2279bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%4:\l  %5 = load i32, i32* @reg_len, align 4, !tbaa !5\l  %6 = add nsw i32 %5, -1\l  %7 = sdiv i32 %6, 31\l  %8 = srem i32 %6, 31\l  %9 = icmp sgt i32 %0, 0\l  br i1 %9, label %10, label %20\l|{<s0>T|<s1>F}}"];
	Node0x2279bd0:s0 -> Node0x2279cc0;
	Node0x2279bd0:s1 -> Node0x2279d60;
	Node0x2279cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%10:\l10:                                               \l  %11 = icmp sgt i32 %5, 31\l  %12 = icmp sgt i32 %8, 0\l  %13 = mul nsw i32 %7, 31\l  %14 = call i32 @llvm.smax.i32(i32 %7, i32 1)\l  %15 = sext i32 %13 to i64\l  %16 = zext i32 %14 to i64\l  %17 = zext i32 %8 to i64\l  br label %18\l}"];
	Node0x2279cc0 -> Node0x2279d10;
	Node0x2279d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%18:\l18:                                               \l  %19 = phi i32 [ 0, %10 ], [ %164, %146 ]\l  br i1 %11, label %23, label %78\l|{<s0>T|<s1>F}}"];
	Node0x2279d10:s0 -> Node0x2279db0;
	Node0x2279d10:s1 -> Node0x2279f40;
	Node0x2279d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%20:\l20:                                               \l  %21 = load i32, i32* @reg_len, align 4, !tbaa !5\l  %22 = icmp sgt i32 %21, 0\l  br i1 %22, label %166, label %180\l|{<s0>T|<s1>F}}"];
	Node0x2279d60:s0 -> Node0x227a170;
	Node0x2279d60:s1 -> Node0x227a1c0;
	Node0x2279db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%23:\l23:                                               \l  %24 = phi i64 [ %76, %75 ], [ 0, %18 ]\l  %25 = phi %struct.cells* [ %65, %75 ], [ %1, %18 ]\l  %26 = phi i32 [ %49, %75 ], [ 0, %18 ]\l  %27 = phi i32 [ %48, %75 ], [ 0, %18 ]\l  %28 = call i64 @lrand48() #13\l  %29 = mul nuw nsw i64 %24, 31\l  br label %30\l}"];
	Node0x2279db0 -> Node0x2279e00;
	Node0x2279e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i64 [ 0, %23 ], [ %73, %47 ]\l  %32 = phi i64 [ %28, %23 ], [ %72, %47 ]\l  %33 = phi %struct.cells* [ %25, %23 ], [ %65, %47 ]\l  %34 = phi i32 [ %26, %23 ], [ %49, %47 ]\l  %35 = phi i32 [ %27, %23 ], [ %48, %47 ]\l  %36 = add nuw nsw i64 %31, %29\l  %37 = getelementptr inbounds i8, i8* %3, i64 %36\l  %38 = load i8, i8* %37, align 1, !tbaa !9\l  %39 = icmp eq i8 %38, 49\l  br i1 %39, label %40, label %47\l|{<s0>T|<s1>F}}"];
	Node0x2279e00:s0 -> Node0x2279e50;
	Node0x2279e00:s1 -> Node0x2279ea0;
	Node0x2279e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds %struct.cells, %struct.cells* %33, i64 0, i32 0\l  %42 = load i32, i32* %41, align 8, !tbaa !10\l  %43 = add nsw i32 %42, %35\l  %44 = getelementptr inbounds %struct.cells, %struct.cells* %33, i64 0, i32 1\l  %45 = load i32, i32* %44, align 4, !tbaa !13\l  %46 = add nsw i32 %45, %34\l  br label %47\l}"];
	Node0x2279e50 -> Node0x2279ea0;
	Node0x2279ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %43, %40 ], [ %35, %30 ]\l  %49 = phi i32 [ %46, %40 ], [ %34, %30 ]\l  %50 = getelementptr inbounds %struct.cells, %struct.cells* %33, i64 0, i32 2\l  %51 = load %struct.cells*, %struct.cells** %50, align 8, !tbaa !14\l  %52 = getelementptr inbounds %struct.cells, %struct.cells* %51, i64 0, i32 0\l  %53 = load i32, i32* %52, align 8, !tbaa !10\l  %54 = trunc i64 %32 to i32\l  %55 = add i32 %53, %54\l  %56 = and i32 %55, 1\l  %57 = getelementptr inbounds %struct.cells, %struct.cells* %33, i64 0, i32 0\l  store i32 %56, i32* %57, align 8, !tbaa !10\l  %58 = call i64 @lrand48() #13\l  %59 = srem i64 %58, 1000\l  %60 = sitofp i64 %59 to double\l  %61 = fdiv double %60, 1.000000e+03\l  %62 = fcmp olt double %61, %2\l  %63 = zext i1 %62 to i64\l  %64 = xor i64 %32, %63\l  %65 = load %struct.cells*, %struct.cells** %50, align 8, !tbaa !14\l  %66 = getelementptr inbounds %struct.cells, %struct.cells* %65, i64 0, i32 1\l  %67 = load i32, i32* %66, align 4, !tbaa !13\l  %68 = trunc i64 %64 to i32\l  %69 = add i32 %67, %68\l  %70 = and i32 %69, 1\l  %71 = getelementptr inbounds %struct.cells, %struct.cells* %33, i64 0, i32 1\l  store i32 %70, i32* %71, align 4, !tbaa !13\l  %72 = ashr i64 %32, 1\l  %73 = add nuw nsw i64 %31, 1\l  %74 = icmp eq i64 %73, 31\l  br i1 %74, label %75, label %30, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x2279ea0:s0 -> Node0x2279ef0;
	Node0x2279ea0:s1 -> Node0x2279e00;
	Node0x2279ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%75:\l75:                                               \l  %76 = add nuw nsw i64 %24, 1\l  %77 = icmp eq i64 %76, %16\l  br i1 %77, label %78, label %23, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x2279ef0:s0 -> Node0x2279f40;
	Node0x2279ef0:s1 -> Node0x2279db0;
	Node0x2279f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%78:\l78:                                               \l  %79 = phi i32 [ 0, %18 ], [ %48, %75 ]\l  %80 = phi i32 [ 0, %18 ], [ %49, %75 ]\l  %81 = phi %struct.cells* [ %1, %18 ], [ %65, %75 ]\l  %82 = call i64 @lrand48() #13\l  br i1 %12, label %83, label %128\l|{<s0>T|<s1>F}}"];
	Node0x2279f40:s0 -> Node0x2279f90;
	Node0x2279f40:s1 -> Node0x227a080;
	Node0x2279f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%83:\l83:                                               \l  %84 = phi i64 [ %126, %100 ], [ 0, %78 ]\l  %85 = phi i64 [ %125, %100 ], [ %82, %78 ]\l  %86 = phi %struct.cells* [ %118, %100 ], [ %81, %78 ]\l  %87 = phi i32 [ %102, %100 ], [ %80, %78 ]\l  %88 = phi i32 [ %101, %100 ], [ %79, %78 ]\l  %89 = add nsw i64 %84, %15\l  %90 = getelementptr inbounds i8, i8* %3, i64 %89\l  %91 = load i8, i8* %90, align 1, !tbaa !9\l  %92 = icmp eq i8 %91, 49\l  br i1 %92, label %93, label %100\l|{<s0>T|<s1>F}}"];
	Node0x2279f90:s0 -> Node0x2279fe0;
	Node0x2279f90:s1 -> Node0x227a030;
	Node0x2279fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%93:\l93:                                               \l  %94 = getelementptr inbounds %struct.cells, %struct.cells* %86, i64 0, i32 0\l  %95 = load i32, i32* %94, align 8, !tbaa !10\l  %96 = add nsw i32 %95, %88\l  %97 = getelementptr inbounds %struct.cells, %struct.cells* %86, i64 0, i32 1\l  %98 = load i32, i32* %97, align 4, !tbaa !13\l  %99 = add nsw i32 %98, %87\l  br label %100\l}"];
	Node0x2279fe0 -> Node0x227a030;
	Node0x227a030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%100:\l100:                                              \l  %101 = phi i32 [ %96, %93 ], [ %88, %83 ]\l  %102 = phi i32 [ %99, %93 ], [ %87, %83 ]\l  %103 = getelementptr inbounds %struct.cells, %struct.cells* %86, i64 0, i32 2\l  %104 = load %struct.cells*, %struct.cells** %103, align 8, !tbaa !14\l  %105 = getelementptr inbounds %struct.cells, %struct.cells* %104, i64 0, i32\l... 0\l  %106 = load i32, i32* %105, align 8, !tbaa !10\l  %107 = trunc i64 %85 to i32\l  %108 = add i32 %106, %107\l  %109 = and i32 %108, 1\l  %110 = getelementptr inbounds %struct.cells, %struct.cells* %86, i64 0, i32 0\l  store i32 %109, i32* %110, align 8, !tbaa !10\l  %111 = call i64 @lrand48() #13\l  %112 = srem i64 %111, 1000\l  %113 = sitofp i64 %112 to double\l  %114 = fdiv double %113, 1.000000e+03\l  %115 = fcmp olt double %114, %2\l  %116 = zext i1 %115 to i64\l  %117 = xor i64 %85, %116\l  %118 = load %struct.cells*, %struct.cells** %103, align 8, !tbaa !14\l  %119 = getelementptr inbounds %struct.cells, %struct.cells* %118, i64 0, i32\l... 1\l  %120 = load i32, i32* %119, align 4, !tbaa !13\l  %121 = trunc i64 %117 to i32\l  %122 = add i32 %120, %121\l  %123 = and i32 %122, 1\l  %124 = getelementptr inbounds %struct.cells, %struct.cells* %86, i64 0, i32 1\l  store i32 %123, i32* %124, align 4, !tbaa !13\l  %125 = ashr i64 %85, 1\l  %126 = add nuw nsw i64 %84, 1\l  %127 = icmp eq i64 %126, %17\l  br i1 %127, label %128, label %83, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x227a030:s0 -> Node0x227a080;
	Node0x227a030:s1 -> Node0x2279f90;
	Node0x227a080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%128:\l128:                                              \l  %129 = phi i32 [ %79, %78 ], [ %101, %100 ]\l  %130 = phi i32 [ %80, %78 ], [ %102, %100 ]\l  %131 = phi %struct.cells* [ %81, %78 ], [ %118, %100 ]\l  %132 = call i64 @lrand48() #13\l  %133 = load i32, i32* @reg_len, align 4, !tbaa !5\l  %134 = add nsw i32 %133, -1\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds i8, i8* %3, i64 %135\l  %137 = load i8, i8* %136, align 1, !tbaa !9\l  %138 = icmp eq i8 %137, 49\l  br i1 %138, label %139, label %146\l|{<s0>T|<s1>F}}"];
	Node0x227a080:s0 -> Node0x227a0d0;
	Node0x227a080:s1 -> Node0x227a120;
	Node0x227a0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%139:\l139:                                              \l  %140 = getelementptr inbounds %struct.cells, %struct.cells* %131, i64 0, i32\l... 0\l  %141 = load i32, i32* %140, align 8, !tbaa !10\l  %142 = add nsw i32 %141, %129\l  %143 = getelementptr inbounds %struct.cells, %struct.cells* %131, i64 0, i32\l... 1\l  %144 = load i32, i32* %143, align 4, !tbaa !13\l  %145 = add nsw i32 %144, %130\l  br label %146\l}"];
	Node0x227a0d0 -> Node0x227a120;
	Node0x227a120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%146:\l146:                                              \l  %147 = phi i32 [ %142, %139 ], [ %129, %128 ]\l  %148 = phi i32 [ %145, %139 ], [ %130, %128 ]\l  %149 = trunc i64 %132 to i32\l  %150 = add i32 %147, %149\l  %151 = and i32 %150, 1\l  %152 = getelementptr inbounds %struct.cells, %struct.cells* %131, i64 0, i32\l... 0\l  store i32 %151, i32* %152, align 8, !tbaa !10\l  %153 = call i64 @lrand48() #13\l  %154 = srem i64 %153, 10000\l  %155 = sitofp i64 %154 to double\l  %156 = fdiv double %155, 1.000000e+04\l  %157 = fcmp olt double %156, %2\l  %158 = zext i1 %157 to i64\l  %159 = xor i64 %132, %158\l  %160 = trunc i64 %159 to i32\l  %161 = add i32 %148, %160\l  %162 = and i32 %161, 1\l  %163 = getelementptr inbounds %struct.cells, %struct.cells* %131, i64 0, i32\l... 1\l  store i32 %162, i32* %163, align 4, !tbaa !13\l  %164 = add nuw nsw i32 %19, 1\l  %165 = icmp eq i32 %164, %0\l  br i1 %165, label %20, label %18, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x227a120:s0 -> Node0x2279d60;
	Node0x227a120:s1 -> Node0x2279d10;
	Node0x227a170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%166:\l166:                                              \l  %167 = phi i32 [ %178, %166 ], [ 0, %20 ]\l  %168 = phi %struct.cells* [ %177, %166 ], [ %1, %20 ]\l  %169 = phi i32 [ %175, %166 ], [ 0, %20 ]\l  %170 = getelementptr inbounds %struct.cells, %struct.cells* %168, i64 0, i32\l... 0\l  %171 = load i32, i32* %170, align 8, !tbaa !10\l  %172 = getelementptr inbounds %struct.cells, %struct.cells* %168, i64 0, i32\l... 1\l  %173 = load i32, i32* %172, align 4, !tbaa !13\l  %174 = icmp eq i32 %171, %173\l  %175 = select i1 %174, i32 %169, i32 1\l  %176 = getelementptr inbounds %struct.cells, %struct.cells* %168, i64 0, i32\l... 2\l  %177 = load %struct.cells*, %struct.cells** %176, align 8, !tbaa !14\l  %178 = add nuw nsw i32 %167, 1\l  %179 = icmp eq i32 %178, %21\l  br i1 %179, label %180, label %166, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x227a170:s0 -> Node0x227a1c0;
	Node0x227a170:s1 -> Node0x227a170;
	Node0x227a1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%180:\l180:                                              \l  %181 = phi i32 [ 0, %20 ], [ %175, %166 ]\l  ret i32 %181\l}"];
}

digraph "CFG for 'make_wanted' function" {
	label="CFG for 'make_wanted' function";

	Node0x888d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%1:\l  %2 = call noalias dereferenceable_or_null(16) i8* @malloc(i64 noundef 16) #11\l  %3 = bitcast i8* %2 to %struct._list*\l  %4 = getelementptr inbounds %struct._list, %struct._list* %3, i64 0, i32 1\l  store %struct._list* null, %struct._list** %4, align 8, !tbaa !5\l  %5 = load i32, i32* @nrow, align 4, !tbaa !10\l  %6 = icmp eq i32 %5, 0\l  br i1 %6, label %104, label %7\l|{<s0>T|<s1>F}}"];
	Node0x888d40:s0 -> Node0x8894e0;
	Node0x888d40:s1 -> Node0x888e50;
	Node0x888e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%7:\l7:                                                \l  %8 = load i32, i32* @ncol, align 4, !tbaa !10\l  %9 = icmp eq i32 %8, 0\l  %10 = sext i32 %8 to i64\l  %11 = shl nsw i64 %10, 2\l  %12 = zext i32 %8 to i64\l  %13 = add nsw i32 %5, -1\l  %14 = add nsw i32 %8, -1\l  %15 = add i32 %8, -1\l  %16 = sext i32 %15 to i64\l  %17 = zext i32 %15 to i64\l  %18 = sub nsw i64 %16, %17\l  %19 = shl nsw i64 %18, 2\l  %20 = zext i32 %8 to i64\l  %21 = shl nuw nsw i64 %20, 2\l  br label %22\l}"];
	Node0x888e50 -> Node0x888ea0;
	Node0x888ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%22:\l22:                                               \l  %23 = phi %struct._list* [ %3, %7 ], [ %101, %99 ]\l  %24 = phi i32 [ 0, %7 ], [ %102, %99 ]\l  br i1 %9, label %99, label %25\l|{<s0>T|<s1>F}}"];
	Node0x888ea0:s0 -> Node0x889490;
	Node0x888ea0:s1 -> Node0x888ef0;
	Node0x888ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%25:\l25:                                               \l  %26 = phi %struct._list* [ %96, %93 ], [ %23, %22 ]\l  %27 = phi i32 [ %95, %93 ], [ %24, %22 ]\l  %28 = phi i32 [ %97, %93 ], [ 0, %22 ]\l  %29 = call noalias i8* @malloc(i64 noundef %11) #11\l  %30 = bitcast i8* %29 to i32*\l  %31 = icmp eq i32 %28, 0\l  br i1 %31, label %36, label %32\l|{<s0>T|<s1>F}}"];
	Node0x888ef0:s0 -> Node0x888fe0;
	Node0x888ef0:s1 -> Node0x888f40;
	Node0x888f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%32:\l32:                                               \l  %33 = zext i32 %28 to i64\l  br label %41\l}"];
	Node0x888f40 -> Node0x889080;
	Node0x888f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%34:\l34:                                               \l  %35 = trunc i64 %44 to i32\l  br label %36\l}"];
	Node0x888f90 -> Node0x888fe0;
	Node0x888fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%36:\l36:                                               \l  %37 = phi i32 [ 0, %25 ], [ %35, %34 ]\l  %38 = icmp eq i32 %37, %8\l  br i1 %38, label %51, label %39\l|{<s0>T|<s1>F}}"];
	Node0x888fe0:s0 -> Node0x889120;
	Node0x888fe0:s1 -> Node0x889030;
	Node0x889030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%39:\l39:                                               \l  %40 = zext i32 %37 to i64\l  br label %46\l}"];
	Node0x889030 -> Node0x8890d0;
	Node0x889080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%41:\l41:                                               \l  %42 = phi i64 [ 0, %32 ], [ %44, %41 ]\l  %43 = getelementptr inbounds i32, i32* %30, i64 %42\l  store i32 %5, i32* %43, align 4, !tbaa !10\l  %44 = add nuw nsw i64 %42, 1\l  %45 = icmp eq i64 %44, %33\l  br i1 %45, label %34, label %41, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x889080:s0 -> Node0x888f90;
	Node0x889080:s1 -> Node0x889080;
	Node0x8890d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%46:\l46:                                               \l  %47 = phi i64 [ %40, %39 ], [ %49, %46 ]\l  %48 = getelementptr inbounds i32, i32* %30, i64 %47\l  store i32 %27, i32* %48, align 4, !tbaa !10\l  %49 = add nuw nsw i64 %47, 1\l  %50 = icmp eq i64 %49, %12\l  br i1 %50, label %51, label %46, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x8890d0:s0 -> Node0x889120;
	Node0x8890d0:s1 -> Node0x8890d0;
	Node0x889120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%51:\l51:                                               \l  br label %52\l}"];
	Node0x889120 -> Node0x889170;
	Node0x889170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i64 [ %54, %61 ], [ %10, %51 ]\l  %54 = add nsw i64 %53, -1\l  %55 = getelementptr inbounds i32, i32* %30, i64 %54\l  %56 = load i32, i32* %55, align 4, !tbaa !10\l  %57 = getelementptr inbounds i32, i32* %0, i64 %54\l  %58 = load i32, i32* %57, align 4, !tbaa !10\l  %59 = icmp sgt i32 %56, %58\l  br i1 %59, label %60, label %61\l|{<s0>T|<s1>F}}"];
	Node0x889170:s0 -> Node0x8891c0;
	Node0x889170:s1 -> Node0x889210;
	Node0x8891c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%60:\l60:                                               \l  store i32 %58, i32* %55, align 4, !tbaa !10\l  br label %61\l}"];
	Node0x8891c0 -> Node0x889210;
	Node0x889210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = trunc i64 %54 to i32\l  %63 = icmp eq i32 %62, 0\l  br i1 %63, label %64, label %52, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x889210:s0 -> Node0x889260;
	Node0x889210:s1 -> Node0x889170;
	Node0x889260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%64:\l64:                                               \l  %65 = phi i64 [ %66, %68 ], [ %10, %61 ]\l  %66 = add nsw i64 %65, -1\l  %67 = icmp eq i64 %65, 0\l  br i1 %67, label %76, label %68\l|{<s0>T|<s1>F}}"];
	Node0x889260:s0 -> Node0x889350;
	Node0x889260:s1 -> Node0x8892b0;
	Node0x8892b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%68:\l68:                                               \l  %69 = getelementptr inbounds i32, i32* %30, i64 %66\l  %70 = load i32, i32* %69, align 4, !tbaa !10\l  %71 = getelementptr inbounds i32, i32* %0, i64 %66\l  %72 = load i32, i32* %71, align 4, !tbaa !10\l  %73 = icmp eq i32 %70, %72\l  br i1 %73, label %64, label %74, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x8892b0:s0 -> Node0x889260;
	Node0x8892b0:s1 -> Node0x889300;
	Node0x889300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%74:\l74:                                               \l  %75 = trunc i64 %65 to i32\l  br label %76\l}"];
	Node0x889300 -> Node0x889350;
	Node0x889350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%76:\l76:                                               \l  %77 = phi i32 [ %75, %74 ], [ 0, %64 ]\l  %78 = icmp sgt i32 %77, 0\l  br i1 %78, label %79, label %91\l|{<s0>T|<s1>F}}"];
	Node0x889350:s0 -> Node0x8893a0;
	Node0x889350:s1 -> Node0x8893f0;
	Node0x8893a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%79:\l79:                                               \l  %80 = call noalias dereferenceable_or_null(16) i8* @malloc(i64 noundef 16)\l... #11\l  %81 = getelementptr inbounds %struct._list, %struct._list* %26, i64 0, i32 1\l  %82 = bitcast %struct._list** %81 to i8**\l  store i8* %80, i8** %82, align 8, !tbaa !5\l  %83 = call noalias i8* @malloc(i64 noundef %11) #11\l  %84 = getelementptr i8, i8* %83, i64 %19\l  %85 = getelementptr i32, i32* %30, i64 %18\l  %86 = bitcast i32* %85 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %86, i64\l... %21, i1 false) #11, !tbaa !10\l  %87 = bitcast i8* %80 to %struct._list*\l  %88 = bitcast i8* %80 to i8**\l  store i8* %83, i8** %88, align 8, !tbaa !18\l  %89 = getelementptr inbounds %struct._list, %struct._list* %87, i64 0, i32 1\l  store %struct._list* null, %struct._list** %89, align 8, !tbaa !5\l  %90 = load %struct._list*, %struct._list** %81, align 8, !tbaa !5\l  br label %93\l}"];
	Node0x8893a0 -> Node0x889440;
	Node0x8893f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%91:\l91:                                               \l  %92 = select i1 %31, i32 %13, i32 %27\l  br label %93\l}"];
	Node0x8893f0 -> Node0x889440;
	Node0x889440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%93:\l93:                                               \l  %94 = phi i32 [ %14, %91 ], [ %28, %79 ]\l  %95 = phi i32 [ %92, %91 ], [ %27, %79 ]\l  %96 = phi %struct._list* [ %26, %91 ], [ %90, %79 ]\l  call void @free(i8* noundef %29) #11\l  %97 = add nsw i32 %94, 1\l  %98 = icmp eq i32 %97, %8\l  br i1 %98, label %99, label %25, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x889440:s0 -> Node0x889490;
	Node0x889440:s1 -> Node0x888ef0;
	Node0x889490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%99:\l99:                                               \l  %100 = phi i32 [ %24, %22 ], [ %95, %93 ]\l  %101 = phi %struct._list* [ %23, %22 ], [ %96, %93 ]\l  %102 = add nsw i32 %100, 1\l  %103 = icmp eq i32 %102, %5\l  br i1 %103, label %104, label %22, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x889490:s0 -> Node0x8894e0;
	Node0x889490:s1 -> Node0x888ea0;
	Node0x8894e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%104:\l104:                                              \l  %105 = load %struct._list*, %struct._list** %4, align 8, !tbaa !5\l  call void @free(i8* noundef %2) #11\l  store %struct._list* %105, %struct._list** @wanted, align 8, !tbaa !21\l  ret void\l}"];
}

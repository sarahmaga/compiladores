digraph "CFG for 'make_list' function" {
	label="CFG for 'make_list' function";

	Node0x873ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%3:\l  store i32 1, i32* %1, align 4, !tbaa !5\l  %4 = call noalias dereferenceable_or_null(16) i8* @malloc(i64 noundef 16) #11\l  %5 = bitcast i8* %4 to %struct._list*\l  %6 = getelementptr inbounds %struct._list, %struct._list* %5, i64 0, i32 1\l  store %struct._list* null, %struct._list** %6, align 8, !tbaa !9\l  %7 = load i32, i32* @nrow, align 4, !tbaa !5\l  %8 = icmp eq i32 %7, 0\l  br i1 %8, label %179, label %9\l|{<s0>T|<s1>F}}"];
	Node0x873ba0:s0 -> Node0x877170;
	Node0x873ba0:s1 -> Node0x876380;
	Node0x876380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%9:\l9:                                                \l  %10 = phi %struct._list* [ %175, %173 ], [ %5, %3 ]\l  %11 = phi i32 [ %176, %173 ], [ 0, %3 ]\l  %12 = load i32, i32* @ncol, align 4, !tbaa !5\l  %13 = icmp eq i32 %12, 0\l  br i1 %13, label %173, label %14\l|{<s0>T|<s1>F}}"];
	Node0x876380:s0 -> Node0x877120;
	Node0x876380:s1 -> Node0x876540;
	Node0x876540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%14:\l14:                                               \l  %15 = phi i32 [ %171, %166 ], [ %12, %9 ]\l  %16 = phi %struct._list* [ %169, %166 ], [ %10, %9 ]\l  %17 = phi i32 [ %168, %166 ], [ %11, %9 ]\l  %18 = phi i32 [ %170, %166 ], [ 0, %9 ]\l  %19 = sext i32 %15 to i64\l  %20 = shl nsw i64 %19, 2\l  %21 = call noalias i8* @malloc(i64 noundef %20) #11\l  %22 = bitcast i8* %21 to i32*\l  %23 = icmp eq i32 %18, 0\l  br i1 %23, label %29, label %24\l|{<s0>T|<s1>F}}"];
	Node0x876540:s0 -> Node0x876630;
	Node0x876540:s1 -> Node0x876590;
	Node0x876590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%24:\l24:                                               \l  %25 = load i32, i32* @nrow, align 4, !tbaa !5\l  %26 = zext i32 %18 to i64\l  br label %35\l}"];
	Node0x876590 -> Node0x8766d0;
	Node0x8765e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%27:\l27:                                               \l  %28 = trunc i64 %38 to i32\l  br label %29\l}"];
	Node0x8765e0 -> Node0x876630;
	Node0x876630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%29:\l29:                                               \l  %30 = phi i32 [ 0, %14 ], [ %28, %27 ]\l  %31 = icmp eq i32 %30, %15\l  br i1 %31, label %45, label %32\l|{<s0>T|<s1>F}}"];
	Node0x876630:s0 -> Node0x876770;
	Node0x876630:s1 -> Node0x876680;
	Node0x876680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%32:\l32:                                               \l  %33 = zext i32 %30 to i64\l  %34 = zext i32 %15 to i64\l  br label %40\l}"];
	Node0x876680 -> Node0x876720;
	Node0x8766d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = phi i64 [ 0, %24 ], [ %38, %35 ]\l  %37 = getelementptr inbounds i32, i32* %22, i64 %36\l  store i32 %25, i32* %37, align 4, !tbaa !5\l  %38 = add nuw nsw i64 %36, 1\l  %39 = icmp eq i64 %38, %26\l  br i1 %39, label %27, label %35, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x8766d0:s0 -> Node0x8765e0;
	Node0x8766d0:s1 -> Node0x8766d0;
	Node0x876720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%40:\l40:                                               \l  %41 = phi i64 [ %33, %32 ], [ %43, %40 ]\l  %42 = getelementptr inbounds i32, i32* %22, i64 %41\l  store i32 %17, i32* %42, align 4, !tbaa !5\l  %43 = add nuw nsw i64 %41, 1\l  %44 = icmp eq i64 %43, %34\l  br i1 %44, label %45, label %40, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x876720:s0 -> Node0x876770;
	Node0x876720:s1 -> Node0x876720;
	Node0x876770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%45:\l45:                                               \l  %46 = icmp eq i32 %15, 0\l  br i1 %46, label %59, label %47\l|{<s0>T|<s1>F}}"];
	Node0x876770:s0 -> Node0x8768b0;
	Node0x876770:s1 -> Node0x8767c0;
	Node0x8767c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%47:\l47:                                               \l  %48 = phi i64 [ %49, %56 ], [ %19, %45 ]\l  %49 = add nsw i64 %48, -1\l  %50 = getelementptr inbounds i32, i32* %22, i64 %49\l  %51 = load i32, i32* %50, align 4, !tbaa !5\l  %52 = getelementptr inbounds i32, i32* %0, i64 %49\l  %53 = load i32, i32* %52, align 4, !tbaa !5\l  %54 = icmp sgt i32 %51, %53\l  br i1 %54, label %55, label %56\l|{<s0>T|<s1>F}}"];
	Node0x8767c0:s0 -> Node0x876810;
	Node0x8767c0:s1 -> Node0x876860;
	Node0x876810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%55:\l55:                                               \l  store i32 %53, i32* %50, align 4, !tbaa !5\l  br label %56\l}"];
	Node0x876810 -> Node0x876860;
	Node0x876860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%56:\l56:                                               \l  %57 = trunc i64 %49 to i32\l  %58 = icmp eq i32 %57, 0\l  br i1 %58, label %59, label %47, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x876860:s0 -> Node0x8768b0;
	Node0x876860:s1 -> Node0x8767c0;
	Node0x8768b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%59:\l59:                                               \l  br label %60\l}"];
	Node0x8768b0 -> Node0x876900;
	Node0x876900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%60:\l60:                                               \l  %61 = phi i64 [ %62, %64 ], [ %19, %59 ]\l  %62 = add nsw i64 %61, -1\l  %63 = icmp eq i64 %61, 0\l  br i1 %63, label %72, label %64\l|{<s0>T|<s1>F}}"];
	Node0x876900:s0 -> Node0x8769f0;
	Node0x876900:s1 -> Node0x876950;
	Node0x876950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%64:\l64:                                               \l  %65 = getelementptr inbounds i32, i32* %22, i64 %62\l  %66 = load i32, i32* %65, align 4, !tbaa !5\l  %67 = getelementptr inbounds i32, i32* %0, i64 %62\l  %68 = load i32, i32* %67, align 4, !tbaa !5\l  %69 = icmp eq i32 %66, %68\l  br i1 %69, label %60, label %70, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x876950:s0 -> Node0x876900;
	Node0x876950:s1 -> Node0x8769a0;
	Node0x8769a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%70:\l70:                                               \l  %71 = trunc i64 %61 to i32\l  br label %72\l}"];
	Node0x8769a0 -> Node0x8769f0;
	Node0x8769f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%72:\l72:                                               \l  %73 = phi i32 [ %71, %70 ], [ 0, %60 ]\l  %74 = icmp sgt i32 %73, 0\l  br i1 %74, label %75, label %161\l|{<s0>T|<s1>F}}"];
	Node0x8769f0:s0 -> Node0x876a40;
	Node0x8769f0:s1 -> Node0x877080;
	Node0x876a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%75:\l75:                                               \l  %76 = call noalias dereferenceable_or_null(16) i8* @malloc(i64 noundef 16)\l... #11\l  %77 = getelementptr inbounds %struct._list, %struct._list* %16, i64 0, i32 1\l  %78 = bitcast %struct._list** %77 to i8**\l  store i8* %76, i8** %78, align 8, !tbaa !9\l  %79 = call noalias i8* @malloc(i64 noundef %20) #11\l  br i1 %46, label %91, label %80\l|{<s0>T|<s1>F}}"];
	Node0x876a40:s0 -> Node0x876ae0;
	Node0x876a40:s1 -> Node0x876a90;
	Node0x876a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%80:\l80:                                               \l  %81 = add i32 %15, -1\l  %82 = sext i32 %81 to i64\l  %83 = zext i32 %81 to i64\l  %84 = sub nsw i64 %82, %83\l  %85 = shl nsw i64 %84, 2\l  %86 = getelementptr i8, i8* %79, i64 %85\l  %87 = getelementptr i32, i32* %22, i64 %84\l  %88 = bitcast i32* %87 to i8*\l  %89 = zext i32 %15 to i64\l  %90 = shl nuw nsw i64 %89, 2\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %88, i64\l... %90, i1 false) #11, !tbaa !5\l  br label %91\l}"];
	Node0x876a90 -> Node0x876ae0;
	Node0x876ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%91:\l91:                                               \l  %92 = load %struct._list*, %struct._list** %77, align 8, !tbaa !9\l  %93 = bitcast %struct._list* %92 to i8**\l  store i8* %79, i8** %93, align 8, !tbaa !18\l  %94 = getelementptr inbounds %struct._list, %struct._list* %92, i64 0, i32 1\l  store %struct._list* null, %struct._list** %94, align 8, !tbaa !9\l  %95 = load %struct._list*, %struct._list** %77, align 8, !tbaa !9\l  %96 = load i32, i32* %1, align 4, !tbaa !5\l  %97 = icmp eq i32 %96, 1\l  br i1 %97, label %98, label %122\l|{<s0>T|<s1>F}}"];
	Node0x876ae0:s0 -> Node0x876b30;
	Node0x876ae0:s1 -> Node0x876d10;
	Node0x876b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%98:\l98:                                               \l  %99 = phi %struct._play** [ %118, %115 ], [ @game_tree, %91 ]\l  %100 = load %struct._play*, %struct._play** %99, align 8, !tbaa !19\l  %101 = getelementptr inbounds %struct._play, %struct._play* %100, i64 0, i32\l... 1\l  %102 = load i32*, i32** %101, align 8, !tbaa !20\l  br label %103\l}"];
	Node0x876b30 -> Node0x876b80;
	Node0x876b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%103:\l103:                                              \l  %104 = phi i64 [ %105, %107 ], [ %19, %98 ]\l  %105 = add nsw i64 %104, -1\l  %106 = icmp eq i64 %104, 0\l  br i1 %106, label %115, label %107\l|{<s0>T|<s1>F}}"];
	Node0x876b80:s0 -> Node0x876c70;
	Node0x876b80:s1 -> Node0x876bd0;
	Node0x876bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = getelementptr inbounds i32, i32* %102, i64 %105\l  %109 = load i32, i32* %108, align 4, !tbaa !5\l  %110 = getelementptr inbounds i32, i32* %22, i64 %105\l  %111 = load i32, i32* %110, align 4, !tbaa !5\l  %112 = icmp eq i32 %109, %111\l  br i1 %112, label %103, label %113, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x876bd0:s0 -> Node0x876b80;
	Node0x876bd0:s1 -> Node0x876c20;
	Node0x876c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%113:\l113:                                              \l  %114 = trunc i64 %104 to i32\l  br label %115\l}"];
	Node0x876c20 -> Node0x876c70;
	Node0x876c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%115:\l115:                                              \l  %116 = phi i32 [ %114, %113 ], [ 0, %103 ]\l  %117 = icmp sgt i32 %116, 0\l  %118 = getelementptr inbounds %struct._play, %struct._play* %100, i64 0, i32\l... 3\l  br i1 %117, label %98, label %119, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x876c70:s0 -> Node0x876b30;
	Node0x876c70:s1 -> Node0x876cc0;
	Node0x876cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%119:\l119:                                              \l  %120 = getelementptr inbounds %struct._play, %struct._play* %100, i64 0, i32\l... 0\l  %121 = load i32, i32* %120, align 8, !tbaa !23\l  store i32 %121, i32* %1, align 4, !tbaa !5\l  br label %122\l}"];
	Node0x876cc0 -> Node0x876d10;
	Node0x876d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%122:\l122:                                              \l  %123 = load i32, i32* %2, align 4, !tbaa !5\l  %124 = icmp eq i32 %123, 0\l  br i1 %124, label %125, label %166\l|{<s0>T|<s1>F}}"];
	Node0x876d10:s0 -> Node0x876d60;
	Node0x876d10:s1 -> Node0x8770d0;
	Node0x876d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%125:\l125:                                              \l  %126 = load i32, i32* %1, align 4, !tbaa !5\l  %127 = icmp eq i32 %126, 0\l  br i1 %127, label %128, label %166\l|{<s0>T|<s1>F}}"];
	Node0x876d60:s0 -> Node0x876db0;
	Node0x876d60:s1 -> Node0x8770d0;
	Node0x876db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%128:\l128:                                              \l  %129 = load i32, i32* @ncol, align 4, !tbaa !5\l  %130 = add nsw i32 %129, -1\l  %131 = load i32, i32* @nrow, align 4, !tbaa !5\l  %132 = add nsw i32 %131, -1\l  %133 = load %struct._list*, %struct._list** @wanted, align 8, !tbaa !19\l  %134 = icmp eq %struct._list* %133, null\l  br i1 %134, label %166, label %135\l|{<s0>T|<s1>F}}"];
	Node0x876db0:s0 -> Node0x8770d0;
	Node0x876db0:s1 -> Node0x876e00;
	Node0x876e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%135:\l135:                                              \l  %136 = sext i32 %129 to i64\l  br label %141\l}"];
	Node0x876e00 -> Node0x876ea0;
	Node0x876e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%137:\l137:                                              \l  %138 = getelementptr inbounds %struct._list, %struct._list* %142, i64 0, i32\l... 1\l  %139 = load %struct._list*, %struct._list** %138, align 8, !tbaa !19\l  %140 = icmp eq %struct._list* %139, null\l  br i1 %140, label %166, label %141, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x876e50:s0 -> Node0x8770d0;
	Node0x876e50:s1 -> Node0x876ea0;
	Node0x876ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%141:\l141:                                              \l  %142 = phi %struct._list* [ %133, %135 ], [ %139, %137 ]\l  %143 = getelementptr inbounds %struct._list, %struct._list* %142, i64 0, i32\l... 0\l  %144 = load i32*, i32** %143, align 8, !tbaa !18\l  br label %145\l}"];
	Node0x876ea0 -> Node0x876ef0;
	Node0x876ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%145:\l145:                                              \l  %146 = phi i64 [ %147, %149 ], [ %136, %141 ]\l  %147 = add nsw i64 %146, -1\l  %148 = icmp eq i64 %146, 0\l  br i1 %148, label %157, label %149\l|{<s0>T|<s1>F}}"];
	Node0x876ef0:s0 -> Node0x876fe0;
	Node0x876ef0:s1 -> Node0x876f40;
	Node0x876f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%149:\l149:                                              \l  %150 = getelementptr inbounds i32, i32* %144, i64 %147\l  %151 = load i32, i32* %150, align 4, !tbaa !5\l  %152 = getelementptr inbounds i32, i32* %22, i64 %147\l  %153 = load i32, i32* %152, align 4, !tbaa !5\l  %154 = icmp eq i32 %151, %153\l  br i1 %154, label %145, label %155, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x876f40:s0 -> Node0x876ef0;
	Node0x876f40:s1 -> Node0x876f90;
	Node0x876f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%155:\l155:                                              \l  %156 = trunc i64 %146 to i32\l  br label %157\l}"];
	Node0x876f90 -> Node0x876fe0;
	Node0x876fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%157:\l157:                                              \l  %158 = phi i32 [ %156, %155 ], [ 0, %145 ]\l  %159 = icmp sgt i32 %158, 0\l  br i1 %159, label %137, label %160\l|{<s0>T|<s1>F}}"];
	Node0x876fe0:s0 -> Node0x876e50;
	Node0x876fe0:s1 -> Node0x877030;
	Node0x877030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%160:\l160:                                              \l  store i32 2, i32* %2, align 4, !tbaa !5\l  br label %166\l}"];
	Node0x877030 -> Node0x8770d0;
	Node0x877080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%161:\l161:                                              \l  %162 = load i32, i32* @nrow, align 4\l  %163 = add nsw i32 %162, -1\l  %164 = select i1 %23, i32 %163, i32 %17\l  %165 = add nsw i32 %15, -1\l  br label %166\l}"];
	Node0x877080 -> Node0x8770d0;
	Node0x8770d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%166:\l166:                                              \l  %167 = phi i32 [ %165, %161 ], [ %18, %122 ], [ %130, %160 ], [ %18, %125 ],\l... [ %130, %128 ], [ %130, %137 ]\l  %168 = phi i32 [ %164, %161 ], [ %17, %122 ], [ %132, %160 ], [ %17, %125 ],\l... [ %132, %128 ], [ %132, %137 ]\l  %169 = phi %struct._list* [ %16, %161 ], [ %95, %122 ], [ %95, %160 ], [\l... %95, %125 ], [ %95, %128 ], [ %95, %137 ]\l  call void @free(i8* noundef %21) #11\l  %170 = add nsw i32 %167, 1\l  %171 = load i32, i32* @ncol, align 4, !tbaa !5\l  %172 = icmp eq i32 %170, %171\l  br i1 %172, label %173, label %14, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x8770d0:s0 -> Node0x877120;
	Node0x8770d0:s1 -> Node0x876540;
	Node0x877120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%173:\l173:                                              \l  %174 = phi i32 [ %11, %9 ], [ %168, %166 ]\l  %175 = phi %struct._list* [ %10, %9 ], [ %169, %166 ]\l  %176 = add nsw i32 %174, 1\l  %177 = load i32, i32* @nrow, align 4, !tbaa !5\l  %178 = icmp eq i32 %176, %177\l  br i1 %178, label %179, label %9, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x877120:s0 -> Node0x877170;
	Node0x877120:s1 -> Node0x876380;
	Node0x877170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%179:\l179:                                              \l  %180 = load %struct._list*, %struct._list** %6, align 8, !tbaa !9\l  call void @free(i8* noundef %4) #11\l  %181 = icmp eq %struct._list* %180, null\l  br i1 %181, label %185, label %182\l|{<s0>T|<s1>F}}"];
	Node0x877170:s0 -> Node0x877210;
	Node0x877170:s1 -> Node0x8771c0;
	Node0x8771c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%182:\l182:                                              \l  %183 = load i32, i32* %1, align 4, !tbaa !5\l  %184 = sub nsw i32 1, %183\l  store i32 %184, i32* %1, align 4, !tbaa !5\l  br label %185\l}"];
	Node0x8771c0 -> Node0x877210;
	Node0x877210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%185:\l185:                                              \l  ret %struct._list* %180\l}"];
}

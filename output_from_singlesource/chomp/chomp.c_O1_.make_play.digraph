digraph "CFG for 'make_play' function" {
	label="CFG for 'make_play' function";

	Node0x8816b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%1:\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  store i32 %0, i32* %2, align 4, !tbaa !5\l  %4 = bitcast i32* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11\l  %5 = call noalias dereferenceable_or_null(32) i8* @malloc(i64 noundef 32) #11\l  %6 = bitcast i8* %5 to %struct._play*\l  store %struct._play* null, %struct._play** @game_tree, align 8, !tbaa !9\l  %7 = load i32, i32* @ncol, align 4, !tbaa !5\l  %8 = sext i32 %7 to i64\l  %9 = shl nsw i64 %8, 2\l  %10 = call noalias i8* @malloc(i64 noundef %9) #11\l  %11 = bitcast i8* %10 to i32*\l  %12 = icmp eq i32 %7, 0\l  br i1 %12, label %16, label %13\l|{<s0>T|<s1>F}}"];
	Node0x8816b0:s0 -> Node0x86e9b0;
	Node0x8816b0:s1 -> Node0x86e960;
	Node0x86e960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%13:\l13:                                               \l  %14 = zext i32 %7 to i64\l  %15 = shl nuw nsw i64 %14, 2\l  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 %15, i1 false),\l... !tbaa !5\l  br label %16\l}"];
	Node0x86e960 -> Node0x86e9b0;
	Node0x86e9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%16:\l16:                                               \l  %17 = load i32, i32* %11, align 4, !tbaa !5\l  %18 = add nsw i32 %17, -1\l  store i32 %18, i32* %11, align 4, !tbaa !5\l  br label %19\l}"];
	Node0x86e9b0 -> Node0x86ea00;
	Node0x86ea00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%19:\l19:                                               \l  %20 = phi i32* [ %11, %16 ], [ %111, %120 ]\l  %21 = phi %struct._play* [ %6, %16 ], [ %101, %120 ]\l  br label %22\l}"];
	Node0x86ea00 -> Node0x86ea50;
	Node0x86ea50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%22:\l22:                                               \l  %23 = phi %struct._play* [ %21, %19 ], [ %101, %91 ]\l  %24 = load i32, i32* @ncol, align 4, !tbaa !5\l  %25 = icmp eq i32 %24, 0\l  %26 = load i32, i32* @nrow, align 4\l  %27 = load i32, i32* @ncol, align 4\l  %28 = load i32, i32* @ncol, align 4\l  %29 = icmp eq i32 %28, 0\l  %30 = load i32, i32* @nrow, align 4\l  %31 = zext i32 %28 to i64\l  br label %32\l}"];
	Node0x86ea50 -> Node0x86eaa0;
	Node0x86eaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%32:\l32:                                               \l  br i1 %25, label %50, label %33\l|{<s0>T|<s1>F}}"];
	Node0x86eaa0:s0 -> Node0x86ec30;
	Node0x86eaa0:s1 -> Node0x86eaf0;
	Node0x86eaf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %46, %44 ], [ 0, %32 ]\l  %35 = phi i32 [ %45, %44 ], [ 0, %32 ]\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32* %20, i64 %36\l  %38 = load i32, i32* %37, align 4, !tbaa !5\l  %39 = icmp eq i32 %38, %26\l  br i1 %39, label %40, label %42\l|{<s0>T|<s1>F}}"];
	Node0x86eaf0:s0 -> Node0x86eb40;
	Node0x86eaf0:s1 -> Node0x86eb90;
	Node0x86eb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%40:\l40:                                               \l  store i32 0, i32* %37, align 4, !tbaa !5\l  %41 = add nsw i32 %35, 1\l  br label %44\l}"];
	Node0x86eb40 -> Node0x86ebe0;
	Node0x86eb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%42:\l42:                                               \l  %43 = add nsw i32 %38, 1\l  store i32 %43, i32* %37, align 4, !tbaa !5\l  br label %44\l}"];
	Node0x86eb90 -> Node0x86ebe0;
	Node0x86ebe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i32 [ %41, %40 ], [ %35, %42 ]\l  %46 = phi i32 [ %34, %40 ], [ 1, %42 ]\l  %47 = icmp ne i32 %45, %27\l  %48 = icmp eq i32 %46, 0\l  %49 = select i1 %47, i1 %48, i1 false\l  br i1 %49, label %33, label %50, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x86ebe0:s0 -> Node0x86eaf0;
	Node0x86ebe0:s1 -> Node0x86ec30;
	Node0x86ec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%50:\l50:                                               \l  %51 = phi i32 [ 0, %32 ], [ %46, %44 ]\l  %52 = icmp eq i32 %51, 0\l  br i1 %52, label %134, label %53\l|{<s0>T|<s1>F}}"];
	Node0x86ec30:s0 -> Node0x86f270;
	Node0x86ec30:s1 -> Node0x86ec80;
	Node0x86ec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%53:\l53:                                               \l  br i1 %29, label %67, label %54\l|{<s0>T|<s1>F}}"];
	Node0x86ec80:s0 -> Node0x86ee10;
	Node0x86ec80:s1 -> Node0x86ecd0;
	Node0x86ecd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%54:\l54:                                               \l  %55 = load i32, i32* %20, align 4, !tbaa !5\l  %56 = icmp sgt i32 %55, %30\l  br i1 %56, label %57, label %58\l|{<s0>T|<s1>F}}"];
	Node0x86ecd0:s0 -> Node0x86ed20;
	Node0x86ecd0:s1 -> Node0x86ed70;
	Node0x86ed20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%57:\l57:                                               \l  br label %32, !llvm.loop !14\l}"];
	Node0x86ed20 -> Node0x86eaa0;
	Node0x86ed70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%58:\l58:                                               \l  %59 = phi i64 [ %66, %62 ], [ 1, %54 ]\l  %60 = phi i32 [ %64, %62 ], [ %55, %54 ]\l  %61 = icmp eq i64 %59, %31\l  br i1 %61, label %67, label %62, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x86ed70:s0 -> Node0x86ee10;
	Node0x86ed70:s1 -> Node0x86edc0;
	Node0x86edc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds i32, i32* %20, i64 %59\l  %64 = load i32, i32* %63, align 4, !tbaa !5\l  %65 = icmp sgt i32 %64, %60\l  %66 = add nuw nsw i64 %59, 1\l  br i1 %65, label %67, label %58, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x86edc0:s0 -> Node0x86ee10;
	Node0x86edc0:s1 -> Node0x86ed70;
	Node0x86ee10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%67:\l67:                                               \l  %68 = phi i1 [ %29, %53 ], [ %61, %58 ], [ %61, %62 ]\l  br i1 %68, label %69, label %57\l|{<s0>T|<s1>F}}"];
	Node0x86ee10:s0 -> Node0x86ee60;
	Node0x86ee10:s1 -> Node0x86ed20;
	Node0x86ee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%69:\l69:                                               \l  %70 = call noalias dereferenceable_or_null(32) i8* @malloc(i64 noundef 32)\l... #11\l  %71 = getelementptr inbounds %struct._play, %struct._play* %23, i64 0, i32 3\l  %72 = bitcast %struct._play** %71 to i8**\l  store i8* %70, i8** %72, align 8, !tbaa !16\l  %73 = load %struct._play*, %struct._play** @game_tree, align 8, !tbaa !9\l  %74 = icmp eq %struct._play* %73, null\l  br i1 %74, label %75, label %76\l|{<s0>T|<s1>F}}"];
	Node0x86ee60:s0 -> Node0x86eeb0;
	Node0x86ee60:s1 -> Node0x86ef00;
	Node0x86eeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%75:\l75:                                               \l  store i8* %70, i8** bitcast (%struct._play** @game_tree to i8**), align 8,\l... !tbaa !9\l  br label %76\l}"];
	Node0x86eeb0 -> Node0x86ef00;
	Node0x86ef00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%76:\l76:                                               \l  %77 = sext i32 %28 to i64\l  %78 = shl nsw i64 %77, 2\l  %79 = call noalias i8* @malloc(i64 noundef %78) #11\l  br i1 %29, label %91, label %80\l|{<s0>T|<s1>F}}"];
	Node0x86ef00:s0 -> Node0x86efa0;
	Node0x86ef00:s1 -> Node0x86ef50;
	Node0x86ef50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%80:\l80:                                               \l  %81 = add i32 %28, -1\l  %82 = sext i32 %81 to i64\l  %83 = zext i32 %81 to i64\l  %84 = sub nsw i64 %82, %83\l  %85 = shl nsw i64 %84, 2\l  %86 = getelementptr i8, i8* %79, i64 %85\l  %87 = getelementptr i32, i32* %20, i64 %84\l  %88 = bitcast i32* %87 to i8*\l  %89 = zext i32 %28 to i64\l  %90 = shl nuw nsw i64 %89, 2\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %88, i64\l... %90, i1 false) #11, !tbaa !5\l  br label %91\l}"];
	Node0x86ef50 -> Node0x86efa0;
	Node0x86efa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%91:\l91:                                               \l  %92 = load %struct._play*, %struct._play** %71, align 8, !tbaa !16\l  %93 = getelementptr inbounds %struct._play, %struct._play* %92, i64 0, i32 1\l  %94 = bitcast i32** %93 to i8**\l  store i8* %79, i8** %94, align 8, !tbaa !18\l  %95 = call %struct._list* @make_list(i32* noundef %20, i32* noundef nonnull\l... %3, i32* noundef nonnull %2)\l  %96 = load %struct._play*, %struct._play** %71, align 8, !tbaa !16\l  %97 = getelementptr inbounds %struct._play, %struct._play* %96, i64 0, i32 2\l  store %struct._list* %95, %struct._list** %97, align 8, !tbaa !19\l  %98 = load i32, i32* %3, align 4, !tbaa !5\l  %99 = getelementptr inbounds %struct._play, %struct._play* %96, i64 0, i32 0\l  store i32 %98, i32* %99, align 8, !tbaa !20\l  %100 = getelementptr inbounds %struct._play, %struct._play* %96, i64 0, i32 3\l  store %struct._play* null, %struct._play** %100, align 8, !tbaa !16\l  %101 = load %struct._play*, %struct._play** %71, align 8, !tbaa !16\l  %102 = load i32, i32* %2, align 4, !tbaa !5\l  %103 = icmp eq i32 %102, 2\l  br i1 %103, label %104, label %22, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x86efa0:s0 -> Node0x86eff0;
	Node0x86efa0:s1 -> Node0x86ea50;
	Node0x86eff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%104:\l104:                                              \l  %105 = bitcast i32* %20 to i8*\l  call void @free(i8* noundef %105) #11\l  %106 = load i32, i32* @nrow, align 4, !tbaa !5\l  %107 = load i32, i32* @ncol, align 4, !tbaa !5\l  %108 = sext i32 %107 to i64\l  %109 = shl nsw i64 %108, 2\l  %110 = call noalias i8* @malloc(i64 noundef %109) #11\l  %111 = bitcast i8* %110 to i32*\l  %112 = icmp eq i32 %107, 0\l  br i1 %112, label %117, label %113\l|{<s0>T|<s1>F}}"];
	Node0x86eff0:s0 -> Node0x86f0e0;
	Node0x86eff0:s1 -> Node0x86f040;
	Node0x86f040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%113:\l113:                                              \l  %114 = zext i32 %107 to i64\l  br label %124\l}"];
	Node0x86f040 -> Node0x86f1d0;
	Node0x86f090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%115:\l115:                                              \l  %116 = trunc i64 %127 to i32\l  br label %117\l}"];
	Node0x86f090 -> Node0x86f0e0;
	Node0x86f0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%117:\l117:                                              \l  %118 = phi i32 [ 0, %104 ], [ %116, %115 ]\l  %119 = icmp eq i32 %118, %107\l  br i1 %119, label %120, label %121\l|{<s0>T|<s1>F}}"];
	Node0x86f0e0:s0 -> Node0x86f130;
	Node0x86f0e0:s1 -> Node0x86f180;
	Node0x86f130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%120:\l120:                                              \l  br label %19, !llvm.loop !14\l}"];
	Node0x86f130 -> Node0x86ea00;
	Node0x86f180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%121:\l121:                                              \l  %122 = zext i32 %118 to i64\l  %123 = zext i32 %107 to i64\l  br label %129\l}"];
	Node0x86f180 -> Node0x86f220;
	Node0x86f1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%124:\l124:                                              \l  %125 = phi i64 [ 0, %113 ], [ %127, %124 ]\l  %126 = getelementptr inbounds i32, i32* %111, i64 %125\l  store i32 %106, i32* %126, align 4, !tbaa !5\l  %127 = add nuw nsw i64 %125, 1\l  %128 = icmp eq i64 %127, %114\l  br i1 %128, label %115, label %124, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x86f1d0:s0 -> Node0x86f090;
	Node0x86f1d0:s1 -> Node0x86f1d0;
	Node0x86f220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%129:\l129:                                              \l  %130 = phi i64 [ %122, %121 ], [ %132, %129 ]\l  %131 = getelementptr inbounds i32, i32* %111, i64 %130\l  store i32 %106, i32* %131, align 4, !tbaa !5\l  %132 = add nuw nsw i64 %130, 1\l  %133 = icmp eq i64 %132, %123\l  br i1 %133, label %120, label %129, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x86f220:s0 -> Node0x86f130;
	Node0x86f220:s1 -> Node0x86f220;
	Node0x86f270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%134:\l134:                                              \l  %135 = getelementptr inbounds %struct._play, %struct._play* %6, i64 0, i32 3\l  %136 = load %struct._play*, %struct._play** %135, align 8, !tbaa !16\l  call void @free(i8* noundef %5) #11\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11\l  ret %struct._play* %136\l}"];
}

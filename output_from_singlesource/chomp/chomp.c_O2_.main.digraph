digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x203a820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%0:\l  %1 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr\l... inbounds ([33 x i8], [33 x i8]* @str.20, i64 0, i64 0))\l  %2 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr\l... inbounds ([24 x i8], [24 x i8]* @str.21, i64 0, i64 0))\l  %3 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr\l... inbounds ([27 x i8], [27 x i8]* @str.22, i64 0, i64 0))\l  %4 = tail call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))\l  %5 = tail call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0))\l  store i32 7, i32* @ncol, align 4, !tbaa !5\l  %6 = tail call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0))\l  store i32 8, i32* @nrow, align 4, !tbaa !5\l  %7 = tail call %struct._play* @make_play(i32 noundef 1)\l  %8 = load i32, i32* @nrow, align 4, !tbaa !5\l  %9 = load i32, i32* @ncol, align 4, !tbaa !5\l  %10 = sext i32 %9 to i64\l  %11 = shl nsw i64 %10, 2\l  %12 = tail call noalias i8* @malloc(i64 noundef %11) #11\l  %13 = bitcast i8* %12 to i32*\l  %14 = icmp eq i32 %9, 0\l  br i1 %14, label %98, label %15\l|{<s0>T|<s1>F}}"];
	Node0x203a820:s0 -> Node0x203ab40;
	Node0x203a820:s1 -> Node0x203a870;
	Node0x203a870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%15:\l15:                                               \l  %16 = zext i32 %9 to i64\l  %17 = icmp ult i32 %9, 8\l  br i1 %17, label %91, label %18\l|{<s0>T|<s1>F}}"];
	Node0x203a870:s0 -> Node0x203aaa0;
	Node0x203a870:s1 -> Node0x203a8c0;
	Node0x203a8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%18:\l18:                                               \l  %19 = and i64 %16, 4294967288\l  %20 = insertelement \<4 x i32\> poison, i32 %8, i64 0\l  %21 = shufflevector \<4 x i32\> %20, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %22 = insertelement \<4 x i32\> poison, i32 %8, i64 0\l  %23 = shufflevector \<4 x i32\> %22, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %24 = add nsw i64 %19, -8\l  %25 = lshr exact i64 %24, 3\l  %26 = add nuw nsw i64 %25, 1\l  %27 = and i64 %26, 7\l  %28 = icmp ult i64 %24, 56\l  br i1 %28, label %76, label %29\l|{<s0>T|<s1>F}}"];
	Node0x203a8c0:s0 -> Node0x203a9b0;
	Node0x203a8c0:s1 -> Node0x203a910;
	Node0x203a910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%29:\l29:                                               \l  %30 = and i64 %26, 4611686018427387896\l  br label %31\l}"];
	Node0x203a910 -> Node0x203a960;
	Node0x203a960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%31:\l31:                                               \l  %32 = phi i64 [ 0, %29 ], [ %73, %31 ]\l  %33 = phi i64 [ 0, %29 ], [ %74, %31 ]\l  %34 = getelementptr inbounds i32, i32* %13, i64 %32\l  %35 = bitcast i32* %34 to \<4 x i32\>*\l  store \<4 x i32\> %21, \<4 x i32\>* %35, align 4, !tbaa !5\l  %36 = getelementptr inbounds i32, i32* %34, i64 4\l  %37 = bitcast i32* %36 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %37, align 4, !tbaa !5\l  %38 = or i64 %32, 8\l  %39 = getelementptr inbounds i32, i32* %13, i64 %38\l  %40 = bitcast i32* %39 to \<4 x i32\>*\l  store \<4 x i32\> %21, \<4 x i32\>* %40, align 4, !tbaa !5\l  %41 = getelementptr inbounds i32, i32* %39, i64 4\l  %42 = bitcast i32* %41 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %42, align 4, !tbaa !5\l  %43 = or i64 %32, 16\l  %44 = getelementptr inbounds i32, i32* %13, i64 %43\l  %45 = bitcast i32* %44 to \<4 x i32\>*\l  store \<4 x i32\> %21, \<4 x i32\>* %45, align 4, !tbaa !5\l  %46 = getelementptr inbounds i32, i32* %44, i64 4\l  %47 = bitcast i32* %46 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %47, align 4, !tbaa !5\l  %48 = or i64 %32, 24\l  %49 = getelementptr inbounds i32, i32* %13, i64 %48\l  %50 = bitcast i32* %49 to \<4 x i32\>*\l  store \<4 x i32\> %21, \<4 x i32\>* %50, align 4, !tbaa !5\l  %51 = getelementptr inbounds i32, i32* %49, i64 4\l  %52 = bitcast i32* %51 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %52, align 4, !tbaa !5\l  %53 = or i64 %32, 32\l  %54 = getelementptr inbounds i32, i32* %13, i64 %53\l  %55 = bitcast i32* %54 to \<4 x i32\>*\l  store \<4 x i32\> %21, \<4 x i32\>* %55, align 4, !tbaa !5\l  %56 = getelementptr inbounds i32, i32* %54, i64 4\l  %57 = bitcast i32* %56 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %57, align 4, !tbaa !5\l  %58 = or i64 %32, 40\l  %59 = getelementptr inbounds i32, i32* %13, i64 %58\l  %60 = bitcast i32* %59 to \<4 x i32\>*\l  store \<4 x i32\> %21, \<4 x i32\>* %60, align 4, !tbaa !5\l  %61 = getelementptr inbounds i32, i32* %59, i64 4\l  %62 = bitcast i32* %61 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %62, align 4, !tbaa !5\l  %63 = or i64 %32, 48\l  %64 = getelementptr inbounds i32, i32* %13, i64 %63\l  %65 = bitcast i32* %64 to \<4 x i32\>*\l  store \<4 x i32\> %21, \<4 x i32\>* %65, align 4, !tbaa !5\l  %66 = getelementptr inbounds i32, i32* %64, i64 4\l  %67 = bitcast i32* %66 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %67, align 4, !tbaa !5\l  %68 = or i64 %32, 56\l  %69 = getelementptr inbounds i32, i32* %13, i64 %68\l  %70 = bitcast i32* %69 to \<4 x i32\>*\l  store \<4 x i32\> %21, \<4 x i32\>* %70, align 4, !tbaa !5\l  %71 = getelementptr inbounds i32, i32* %69, i64 4\l  %72 = bitcast i32* %71 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %72, align 4, !tbaa !5\l  %73 = add nuw i64 %32, 64\l  %74 = add nuw i64 %33, 8\l  %75 = icmp eq i64 %74, %30\l  br i1 %75, label %76, label %31, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x203a960:s0 -> Node0x203a9b0;
	Node0x203a960:s1 -> Node0x203a960;
	Node0x203a9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%76:\l76:                                               \l  %77 = phi i64 [ 0, %18 ], [ %73, %31 ]\l  %78 = icmp eq i64 %27, 0\l  br i1 %78, label %89, label %79\l|{<s0>T|<s1>F}}"];
	Node0x203a9b0:s0 -> Node0x203aa50;
	Node0x203a9b0:s1 -> Node0x203aa00;
	Node0x203aa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%79:\l79:                                               \l  %80 = phi i64 [ %86, %79 ], [ %77, %76 ]\l  %81 = phi i64 [ %87, %79 ], [ 0, %76 ]\l  %82 = getelementptr inbounds i32, i32* %13, i64 %80\l  %83 = bitcast i32* %82 to \<4 x i32\>*\l  store \<4 x i32\> %21, \<4 x i32\>* %83, align 4, !tbaa !5\l  %84 = getelementptr inbounds i32, i32* %82, i64 4\l  %85 = bitcast i32* %84 to \<4 x i32\>*\l  store \<4 x i32\> %23, \<4 x i32\>* %85, align 4, !tbaa !5\l  %86 = add nuw i64 %80, 8\l  %87 = add i64 %81, 1\l  %88 = icmp eq i64 %87, %27\l  br i1 %88, label %89, label %79, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x203aa00:s0 -> Node0x203aa50;
	Node0x203aa00:s1 -> Node0x203aa00;
	Node0x203aa50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%89:\l89:                                               \l  %90 = icmp eq i64 %19, %16\l  br i1 %90, label %100, label %91\l|{<s0>T|<s1>F}}"];
	Node0x203aa50:s0 -> Node0x203ab90;
	Node0x203aa50:s1 -> Node0x203aaa0;
	Node0x203aaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%91:\l91:                                               \l  %92 = phi i64 [ 0, %15 ], [ %19, %89 ]\l  br label %93\l}"];
	Node0x203aaa0 -> Node0x203aaf0;
	Node0x203aaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%93:\l93:                                               \l  %94 = phi i64 [ %96, %93 ], [ %92, %91 ]\l  %95 = getelementptr inbounds i32, i32* %13, i64 %94\l  store i32 %8, i32* %95, align 4, !tbaa !5\l  %96 = add nuw nsw i64 %94, 1\l  %97 = icmp eq i64 %96, %16\l  br i1 %97, label %100, label %93, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x203aaf0:s0 -> Node0x203ab90;
	Node0x203aaf0:s1 -> Node0x203aaf0;
	Node0x203ab40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%98:\l98:                                               \l  %99 = icmp eq i8* %12, null\l  br i1 %99, label %193, label %100\l|{<s0>T|<s1>F}}"];
	Node0x203ab40:s0 -> Node0x203b1d0;
	Node0x203ab40:s1 -> Node0x203ab90;
	Node0x203ab90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%100:\l100:                                              \l  br label %101\l}"];
	Node0x203ab90 -> Node0x203abe0;
	Node0x203abe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%101:\l101:                                              \l  %102 = phi i32 [ %192, %187 ], [ %9, %100 ]\l  %103 = phi i32 [ %190, %187 ], [ 0, %100 ]\l  %104 = phi i32* [ %177, %187 ], [ %13, %100 ]\l  %105 = sext i32 %102 to i64\l  br label %106\l}"];
	Node0x203abe0 -> Node0x203ac30;
	Node0x203ac30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%106:\l106:                                              \l  %107 = phi %struct._play* [ %7, %101 ], [ %125, %123 ]\l  %108 = getelementptr inbounds %struct._play, %struct._play* %107, i64 0, i32\l... 1\l  %109 = load i32*, i32** %108, align 8, !tbaa !16\l  br label %110\l}"];
	Node0x203ac30 -> Node0x203ac80;
	Node0x203ac80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%110:\l110:                                              \l  %111 = phi i64 [ %112, %114 ], [ %105, %106 ]\l  %112 = add nsw i64 %111, -1\l  %113 = icmp eq i64 %111, 0\l  br i1 %113, label %126, label %114\l|{<s0>T|<s1>F}}"];
	Node0x203ac80:s0 -> Node0x203adc0;
	Node0x203ac80:s1 -> Node0x203acd0;
	Node0x203acd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%114:\l114:                                              \l  %115 = getelementptr inbounds i32, i32* %109, i64 %112\l  %116 = load i32, i32* %115, align 4, !tbaa !5\l  %117 = getelementptr inbounds i32, i32* %104, i64 %112\l  %118 = load i32, i32* %117, align 4, !tbaa !5\l  %119 = icmp eq i32 %116, %118\l  br i1 %119, label %110, label %120, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x203acd0:s0 -> Node0x203ac80;
	Node0x203acd0:s1 -> Node0x203ad20;
	Node0x203ad20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%120:\l120:                                              \l  %121 = trunc i64 %111 to i32\l  %122 = icmp sgt i32 %121, 0\l  br i1 %122, label %123, label %126\l|{<s0>T|<s1>F}}"];
	Node0x203ad20:s0 -> Node0x203ad70;
	Node0x203ad20:s1 -> Node0x203adc0;
	Node0x203ad70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%123:\l123:                                              \l  %124 = getelementptr inbounds %struct._play, %struct._play* %107, i64 0, i32\l... 3\l  %125 = load %struct._play*, %struct._play** %124, align 8, !tbaa !20\l  br label %106, !llvm.loop !21\l}"];
	Node0x203ad70 -> Node0x203ac30;
	Node0x203adc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%126:\l126:                                              \l  %127 = getelementptr inbounds %struct._play, %struct._play* %107, i64 0, i32\l... 2\l  %128 = load %struct._list*, %struct._list** %127, align 8, !tbaa !22\l  %129 = icmp eq %struct._list* %128, null\l  br i1 %129, label %193, label %130\l|{<s0>T|<s1>F}}"];
	Node0x203adc0:s0 -> Node0x203b1d0;
	Node0x203adc0:s1 -> Node0x203ae10;
	Node0x203ae10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%130:\l130:                                              \l  %131 = phi %struct._list* [ %133, %157 ], [ %128, %126 ]\l  %132 = getelementptr inbounds %struct._list, %struct._list* %131, i64 0, i32\l... 1\l  %133 = load %struct._list*, %struct._list** %132, align 8, !tbaa !23\l  %134 = icmp eq %struct._list* %133, null\l  %135 = getelementptr inbounds %struct._list, %struct._list* %131, i64 0, i32\l... 0\l  %136 = load i32*, i32** %135, align 8, !tbaa !25\l  br i1 %134, label %161, label %137\l|{<s0>T|<s1>F}}"];
	Node0x203ae10:s0 -> Node0x203b040;
	Node0x203ae10:s1 -> Node0x203ae60;
	Node0x203ae60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%137:\l137:                                              \l  %138 = phi %struct._play** [ %156, %155 ], [ @game_tree, %130 ]\l  %139 = load %struct._play*, %struct._play** %138, align 8, !tbaa !26\l  %140 = getelementptr inbounds %struct._play, %struct._play* %139, i64 0, i32\l... 1\l  %141 = load i32*, i32** %140, align 8, !tbaa !16\l  br label %142\l}"];
	Node0x203ae60 -> Node0x203aeb0;
	Node0x203aeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%142:\l142:                                              \l  %143 = phi i64 [ %144, %146 ], [ %105, %137 ]\l  %144 = add nsw i64 %143, -1\l  %145 = icmp eq i64 %143, 0\l  br i1 %145, label %157, label %146\l|{<s0>T|<s1>F}}"];
	Node0x203aeb0:s0 -> Node0x203aff0;
	Node0x203aeb0:s1 -> Node0x203af00;
	Node0x203af00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%146:\l146:                                              \l  %147 = getelementptr inbounds i32, i32* %141, i64 %144\l  %148 = load i32, i32* %147, align 4, !tbaa !5\l  %149 = getelementptr inbounds i32, i32* %136, i64 %144\l  %150 = load i32, i32* %149, align 4, !tbaa !5\l  %151 = icmp eq i32 %148, %150\l  br i1 %151, label %142, label %152, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x203af00:s0 -> Node0x203aeb0;
	Node0x203af00:s1 -> Node0x203af50;
	Node0x203af50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%152:\l152:                                              \l  %153 = trunc i64 %143 to i32\l  %154 = icmp sgt i32 %153, 0\l  br i1 %154, label %155, label %157\l|{<s0>T|<s1>F}}"];
	Node0x203af50:s0 -> Node0x203afa0;
	Node0x203af50:s1 -> Node0x203aff0;
	Node0x203afa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%155:\l155:                                              \l  %156 = getelementptr inbounds %struct._play, %struct._play* %139, i64 0, i32\l... 3\l  br label %137, !llvm.loop !27\l}"];
	Node0x203afa0 -> Node0x203ae60;
	Node0x203aff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%157:\l157:                                              \l  %158 = getelementptr inbounds %struct._play, %struct._play* %139, i64 0, i32\l... 0\l  %159 = load i32, i32* %158, align 8, !tbaa !28\l  %160 = icmp eq i32 %159, 0\l  br i1 %160, label %161, label %130, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x203aff0:s0 -> Node0x203b040;
	Node0x203aff0:s1 -> Node0x203ae10;
	Node0x203b040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%161:\l161:                                              \l  %162 = shl nsw i64 %105, 2\l  %163 = tail call noalias i8* @malloc(i64 noundef %162) #11\l  %164 = icmp eq i32 %102, 0\l  br i1 %164, label %176, label %165\l|{<s0>T|<s1>F}}"];
	Node0x203b040:s0 -> Node0x203b0e0;
	Node0x203b040:s1 -> Node0x203b090;
	Node0x203b090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%165:\l165:                                              \l  %166 = add i32 %102, -1\l  %167 = sext i32 %166 to i64\l  %168 = zext i32 %166 to i64\l  %169 = sub nsw i64 %167, %168\l  %170 = shl nsw i64 %169, 2\l  %171 = getelementptr i8, i8* %163, i64 %170\l  %172 = getelementptr i32, i32* %136, i64 %169\l  %173 = bitcast i32* %172 to i8*\l  %174 = zext i32 %102 to i64\l  %175 = shl nuw nsw i64 %174, 2\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4\l... %173, i64 %175, i1 false) #11, !tbaa !5\l  br label %176\l}"];
	Node0x203b090 -> Node0x203b0e0;
	Node0x203b0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%176:\l176:                                              \l  %177 = bitcast i8* %163 to i32*\l  %178 = icmp eq i8* %163, null\l  br i1 %178, label %193, label %179\l|{<s0>T|<s1>F}}"];
	Node0x203b0e0:s0 -> Node0x203b1d0;
	Node0x203b0e0:s1 -> Node0x203b130;
	Node0x203b130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%179:\l179:                                              \l  %180 = phi i64 [ %186, %179 ], [ 0, %176 ]\l  %181 = getelementptr inbounds i32, i32* %177, i64 %180\l  %182 = load i32, i32* %181, align 4, !tbaa !5\l  %183 = getelementptr inbounds i32, i32* %104, i64 %180\l  %184 = load i32, i32* %183, align 4, !tbaa !5\l  %185 = icmp eq i32 %182, %184\l  %186 = add nuw i64 %180, 1\l  br i1 %185, label %179, label %187, !llvm.loop !30\l|{<s0>T|<s1>F}}"];
	Node0x203b130:s0 -> Node0x203b130;
	Node0x203b130:s1 -> Node0x203b180;
	Node0x203b180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%187:\l187:                                              \l  %188 = trunc i64 %180 to i32\l  %189 = tail call i32 (i8*, ...) @printf(i8* noundef nonnull\l... dereferenceable(1) getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15,\l... i64 0, i64 0), i32 noundef %103, i32 noundef %182, i32 noundef %188)\l  %190 = sub nsw i32 1, %103\l  %191 = bitcast i32* %104 to i8*\l  tail call void @free(i8* noundef %191) #11\l  %192 = load i32, i32* @ncol, align 4, !tbaa !5\l  br label %101\l}"];
	Node0x203b180 -> Node0x203abe0;
	Node0x203b1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%193:\l193:                                              \l  %194 = phi i32 [ 0, %98 ], [ %103, %176 ], [ %103, %126 ]\l  tail call void @dump_play(%struct._play* noundef %7)\l  %195 = sub nsw i32 1, %194\l  %196 = tail call i32 (i8*, ...) @printf(i8* noundef nonnull\l... dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16,\l... i64 0, i64 0), i32 noundef %195)\l  ret i32 0\l}"];
}

digraph "CFG for 'seqmerge' function" {
	label="CFG for 'seqmerge' function";

	Node0x167cd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = icmp ult i64* %0, %1\l  %7 = icmp ult i64* %2, %3\l  %8 = and i1 %6, %7\l  br i1 %8, label %9, label %30\l|{<s0>T|<s1>F}}"];
	Node0x167cd90:s0 -> Node0x167dc80;
	Node0x167cd90:s1 -> Node0x167de10;
	Node0x167dc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%9:\l9:                                                \l  %10 = load i64, i64* %0, align 8, !tbaa !5\l  br label %11\l}"];
	Node0x167dc80 -> Node0x167dcd0;
	Node0x167dcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%11:\l11:                                               \l  %12 = phi i64* [ %28, %27 ], [ %2, %9 ]\l  %13 = phi i64* [ %18, %27 ], [ %0, %9 ]\l  %14 = phi i64* [ %22, %27 ], [ %4, %9 ]\l  %15 = phi i64 [ %20, %27 ], [ %10, %9 ]\l  %16 = load i64, i64* %12, align 8, !tbaa !5\l  br label %17\l}"];
	Node0x167dcd0 -> Node0x167dd20;
	Node0x167dd20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i64* [ %24, %23 ], [ %13, %11 ]\l  %19 = phi i64* [ %22, %23 ], [ %14, %11 ]\l  %20 = phi i64 [ %25, %23 ], [ %15, %11 ]\l  %21 = icmp slt i64 %20, %16\l  %22 = getelementptr inbounds i64, i64* %19, i64 1\l  br i1 %21, label %23, label %27\l|{<s0>T|<s1>F}}"];
	Node0x167dd20:s0 -> Node0x167dd70;
	Node0x167dd20:s1 -> Node0x167ddc0;
	Node0x167dd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%23:\l23:                                               \l  store i64 %20, i64* %19, align 8, !tbaa !5\l  %24 = getelementptr inbounds i64, i64* %18, i64 1\l  %25 = load i64, i64* %24, align 8, !tbaa !5\l  %26 = icmp ult i64* %24, %1\l  br i1 %26, label %17, label %30\l|{<s0>T|<s1>F}}"];
	Node0x167dd70:s0 -> Node0x167dd20;
	Node0x167dd70:s1 -> Node0x167de10;
	Node0x167ddc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%27:\l27:                                               \l  store i64 %16, i64* %19, align 8, !tbaa !5\l  %28 = getelementptr inbounds i64, i64* %12, i64 1\l  %29 = icmp ult i64* %28, %3\l  br i1 %29, label %11, label %30\l|{<s0>T|<s1>F}}"];
	Node0x167ddc0:s0 -> Node0x167dcd0;
	Node0x167ddc0:s1 -> Node0x167de10;
	Node0x167de10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%30:\l30:                                               \l  %31 = phi i64* [ %2, %5 ], [ %12, %23 ], [ %28, %27 ]\l  %32 = phi i64* [ %0, %5 ], [ %24, %23 ], [ %18, %27 ]\l  %33 = phi i64* [ %4, %5 ], [ %22, %27 ], [ %22, %23 ]\l  %34 = icmp ugt i64* %32, %1\l  %35 = icmp ugt i64* %31, %3\l  %36 = or i1 %34, %35\l  br i1 %36, label %59, label %37\l|{<s0>T|<s1>F}}"];
	Node0x167de10:s0 -> Node0x167e040;
	Node0x167de10:s1 -> Node0x167de60;
	Node0x167de60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%37:\l37:                                               \l  %38 = load i64, i64* %32, align 8, !tbaa !5\l  br label %39\l}"];
	Node0x167de60 -> Node0x167deb0;
	Node0x167deb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%39:\l39:                                               \l  %40 = phi i64* [ %31, %37 ], [ %57, %56 ]\l  %41 = phi i64* [ %32, %37 ], [ %46, %56 ]\l  %42 = phi i64* [ %33, %37 ], [ %50, %56 ]\l  %43 = phi i64 [ %38, %37 ], [ %48, %56 ]\l  %44 = load i64, i64* %40, align 8, !tbaa !5\l  br label %45\l}"];
	Node0x167deb0 -> Node0x167df00;
	Node0x167df00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = phi i64* [ %52, %54 ], [ %41, %39 ]\l  %47 = phi i64* [ %50, %54 ], [ %42, %39 ]\l  %48 = phi i64 [ %55, %54 ], [ %43, %39 ]\l  %49 = icmp slt i64 %48, %44\l  %50 = getelementptr inbounds i64, i64* %47, i64 1\l  br i1 %49, label %51, label %56\l|{<s0>T|<s1>F}}"];
	Node0x167df00:s0 -> Node0x167df50;
	Node0x167df00:s1 -> Node0x167dff0;
	Node0x167df50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%51:\l51:                                               \l  store i64 %48, i64* %47, align 8, !tbaa !5\l  %52 = getelementptr inbounds i64, i64* %46, i64 1\l  %53 = icmp ugt i64* %52, %1\l  br i1 %53, label %59, label %54\l|{<s0>T|<s1>F}}"];
	Node0x167df50:s0 -> Node0x167e040;
	Node0x167df50:s1 -> Node0x167dfa0;
	Node0x167dfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%54:\l54:                                               \l  %55 = load i64, i64* %52, align 8, !tbaa !5\l  br label %45\l}"];
	Node0x167dfa0 -> Node0x167df00;
	Node0x167dff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%56:\l56:                                               \l  store i64 %44, i64* %47, align 8, !tbaa !5\l  %57 = getelementptr inbounds i64, i64* %40, i64 1\l  %58 = icmp ugt i64* %57, %3\l  br i1 %58, label %59, label %39\l|{<s0>T|<s1>F}}"];
	Node0x167dff0:s0 -> Node0x167e040;
	Node0x167dff0:s1 -> Node0x167deb0;
	Node0x167e040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%59:\l59:                                               \l  %60 = phi i64* [ %31, %30 ], [ %40, %51 ], [ %57, %56 ]\l  %61 = phi i64* [ %32, %30 ], [ %52, %51 ], [ %46, %56 ]\l  %62 = phi i64* [ %33, %30 ], [ %50, %56 ], [ %50, %51 ]\l  %63 = icmp ugt i64* %61, %1\l  %64 = bitcast i64* %62 to i8*\l  %65 = select i1 %63, i64* %60, i64* %61\l  %66 = select i1 %63, i64* %3, i64* %1\l  %67 = bitcast i64* %65 to i8*\l  %68 = ptrtoint i64* %66 to i64\l  %69 = ptrtoint i64* %65 to i64\l  %70 = add i64 %68, 8\l  %71 = sub i64 %70, %69\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %67,\l... i64 %71, i1 false)\l  ret void\l}"];
}

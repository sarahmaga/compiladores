digraph "CFG for 'sort_init' function" {
	label="CFG for 'sort_init' function";

	Node0xf9a180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1:\l  %2 = shl i64 %0, 3\l  %3 = tail call noalias i8* @malloc(i64 noundef %2) #9\l  store i8* %3, i8** bitcast (i64** @array to i8**), align 8, !tbaa !5\l  %4 = tail call noalias i8* @malloc(i64 noundef %2) #9\l  store i8* %4, i8** bitcast (i64** @tmp to i8**), align 8, !tbaa !5\l  store i64 1, i64* @rand_nxt, align 8, !tbaa !9\l  %5 = icmp eq i64 %0, 0\l  %6 = bitcast i8* %3 to i64*\l  br i1 %5, label %121, label %7\l|{<s0>T|<s1>F}}"];
	Node0xf9a180:s0 -> Node0xf9a770;
	Node0xf9a180:s1 -> Node0xf9a270;
	Node0xf9a270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%7:\l7:                                                \l  %8 = icmp ult i64 %0, 4\l  br i1 %8, label %71, label %9\l|{<s0>T|<s1>F}}"];
	Node0xf9a270:s0 -> Node0xf9a4a0;
	Node0xf9a270:s1 -> Node0xf9a2c0;
	Node0xf9a2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%9:\l9:                                                \l  %10 = and i64 %0, -4\l  %11 = add i64 %10, -4\l  %12 = lshr exact i64 %11, 2\l  %13 = add nuw nsw i64 %12, 1\l  %14 = and i64 %13, 3\l  %15 = icmp ult i64 %11, 12\l  br i1 %15, label %52, label %16\l|{<s0>T|<s1>F}}"];
	Node0xf9a2c0:s0 -> Node0xf9a3b0;
	Node0xf9a2c0:s1 -> Node0xf9a310;
	Node0xf9a310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%16:\l16:                                               \l  %17 = and i64 %13, 9223372036854775804\l  br label %18\l}"];
	Node0xf9a310 -> Node0xf9a360;
	Node0xf9a360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%18:\l18:                                               \l  %19 = phi i64 [ 0, %16 ], [ %48, %18 ]\l  %20 = phi \<2 x i64\> [ \<i64 0, i64 1\>, %16 ], [ %49, %18 ]\l  %21 = phi i64 [ 0, %16 ], [ %50, %18 ]\l  %22 = add \<2 x i64\> %20, \<i64 2, i64 2\>\l  %23 = getelementptr inbounds i64, i64* %6, i64 %19\l  %24 = bitcast i64* %23 to \<2 x i64\>*\l  store \<2 x i64\> %20, \<2 x i64\>* %24, align 8, !tbaa !9\l  %25 = getelementptr inbounds i64, i64* %23, i64 2\l  %26 = bitcast i64* %25 to \<2 x i64\>*\l  store \<2 x i64\> %22, \<2 x i64\>* %26, align 8, !tbaa !9\l  %27 = or i64 %19, 4\l  %28 = add \<2 x i64\> %20, \<i64 4, i64 4\>\l  %29 = add \<2 x i64\> %20, \<i64 6, i64 6\>\l  %30 = getelementptr inbounds i64, i64* %6, i64 %27\l  %31 = bitcast i64* %30 to \<2 x i64\>*\l  store \<2 x i64\> %28, \<2 x i64\>* %31, align 8, !tbaa !9\l  %32 = getelementptr inbounds i64, i64* %30, i64 2\l  %33 = bitcast i64* %32 to \<2 x i64\>*\l  store \<2 x i64\> %29, \<2 x i64\>* %33, align 8, !tbaa !9\l  %34 = or i64 %19, 8\l  %35 = add \<2 x i64\> %20, \<i64 8, i64 8\>\l  %36 = add \<2 x i64\> %20, \<i64 10, i64 10\>\l  %37 = getelementptr inbounds i64, i64* %6, i64 %34\l  %38 = bitcast i64* %37 to \<2 x i64\>*\l  store \<2 x i64\> %35, \<2 x i64\>* %38, align 8, !tbaa !9\l  %39 = getelementptr inbounds i64, i64* %37, i64 2\l  %40 = bitcast i64* %39 to \<2 x i64\>*\l  store \<2 x i64\> %36, \<2 x i64\>* %40, align 8, !tbaa !9\l  %41 = or i64 %19, 12\l  %42 = add \<2 x i64\> %20, \<i64 12, i64 12\>\l  %43 = add \<2 x i64\> %20, \<i64 14, i64 14\>\l  %44 = getelementptr inbounds i64, i64* %6, i64 %41\l  %45 = bitcast i64* %44 to \<2 x i64\>*\l  store \<2 x i64\> %42, \<2 x i64\>* %45, align 8, !tbaa !9\l  %46 = getelementptr inbounds i64, i64* %44, i64 2\l  %47 = bitcast i64* %46 to \<2 x i64\>*\l  store \<2 x i64\> %43, \<2 x i64\>* %47, align 8, !tbaa !9\l  %48 = add nuw i64 %19, 16\l  %49 = add \<2 x i64\> %20, \<i64 16, i64 16\>\l  %50 = add nuw i64 %21, 4\l  %51 = icmp eq i64 %50, %17\l  br i1 %51, label %52, label %18, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0xf9a360:s0 -> Node0xf9a3b0;
	Node0xf9a360:s1 -> Node0xf9a360;
	Node0xf9a3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%52:\l52:                                               \l  %53 = phi i64 [ 0, %9 ], [ %48, %18 ]\l  %54 = phi \<2 x i64\> [ \<i64 0, i64 1\>, %9 ], [ %49, %18 ]\l  %55 = icmp eq i64 %14, 0\l  br i1 %55, label %69, label %56\l|{<s0>T|<s1>F}}"];
	Node0xf9a3b0:s0 -> Node0xf9a450;
	Node0xf9a3b0:s1 -> Node0xf9a400;
	Node0xf9a400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%56:\l56:                                               \l  %57 = phi i64 [ %65, %56 ], [ %53, %52 ]\l  %58 = phi \<2 x i64\> [ %66, %56 ], [ %54, %52 ]\l  %59 = phi i64 [ %67, %56 ], [ 0, %52 ]\l  %60 = add \<2 x i64\> %58, \<i64 2, i64 2\>\l  %61 = getelementptr inbounds i64, i64* %6, i64 %57\l  %62 = bitcast i64* %61 to \<2 x i64\>*\l  store \<2 x i64\> %58, \<2 x i64\>* %62, align 8, !tbaa !9\l  %63 = getelementptr inbounds i64, i64* %61, i64 2\l  %64 = bitcast i64* %63 to \<2 x i64\>*\l  store \<2 x i64\> %60, \<2 x i64\>* %64, align 8, !tbaa !9\l  %65 = add nuw i64 %57, 4\l  %66 = add \<2 x i64\> %58, \<i64 4, i64 4\>\l  %67 = add i64 %59, 1\l  %68 = icmp eq i64 %67, %14\l  br i1 %68, label %69, label %56, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0xf9a400:s0 -> Node0xf9a450;
	Node0xf9a400:s1 -> Node0xf9a400;
	Node0xf9a450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%69:\l69:                                               \l  %70 = icmp eq i64 %10, %0\l  br i1 %70, label %78, label %71\l|{<s0>T|<s1>F}}"];
	Node0xf9a450:s0 -> Node0xf9a540;
	Node0xf9a450:s1 -> Node0xf9a4a0;
	Node0xf9a4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%71:\l71:                                               \l  %72 = phi i64 [ 0, %7 ], [ %10, %69 ]\l  br label %73\l}"];
	Node0xf9a4a0 -> Node0xf9a4f0;
	Node0xf9a4f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi i64 [ %76, %73 ], [ %72, %71 ]\l  %75 = getelementptr inbounds i64, i64* %6, i64 %74\l  store i64 %74, i64* %75, align 8, !tbaa !9\l  %76 = add nuw i64 %74, 1\l  %77 = icmp eq i64 %76, %0\l  br i1 %77, label %78, label %73, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0xf9a4f0:s0 -> Node0xf9a540;
	Node0xf9a4f0:s1 -> Node0xf9a4f0;
	Node0xf9a540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%78:\l78:                                               \l  %79 = and i64 %0, 1\l  %80 = icmp eq i64 %0, 1\l  br i1 %80, label %108, label %81\l|{<s0>T|<s1>F}}"];
	Node0xf9a540:s0 -> Node0xf9a680;
	Node0xf9a540:s1 -> Node0xf9a590;
	Node0xf9a590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%81:\l81:                                               \l  %82 = and i64 %0, -2\l  br label %83\l}"];
	Node0xf9a590 -> Node0xf9a5e0;
	Node0xf9a5e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%83:\l83:                                               \l  %84 = phi i64 [ 0, %81 ], [ %102, %83 ]\l  %85 = phi i64 [ 1, %81 ], [ %96, %83 ]\l  %86 = phi i64 [ 0, %81 ], [ %103, %83 ]\l  %87 = mul i64 %85, 1103515245\l  %88 = add i64 %87, 12345\l  %89 = urem i64 %88, %0\l  %90 = getelementptr inbounds i64, i64* %6, i64 %84\l  %91 = load i64, i64* %90, align 8, !tbaa !9\l  %92 = getelementptr inbounds i64, i64* %6, i64 %89\l  %93 = load i64, i64* %92, align 8, !tbaa !9\l  store i64 %93, i64* %90, align 8, !tbaa !9\l  store i64 %91, i64* %92, align 8, !tbaa !9\l  %94 = or i64 %84, 1\l  %95 = mul i64 %88, 1103515245\l  %96 = add i64 %95, 12345\l  %97 = urem i64 %96, %0\l  %98 = getelementptr inbounds i64, i64* %6, i64 %94\l  %99 = load i64, i64* %98, align 8, !tbaa !9\l  %100 = getelementptr inbounds i64, i64* %6, i64 %97\l  %101 = load i64, i64* %100, align 8, !tbaa !9\l  store i64 %101, i64* %98, align 8, !tbaa !9\l  store i64 %99, i64* %100, align 8, !tbaa !9\l  %102 = add nuw i64 %84, 2\l  %103 = add i64 %86, 2\l  %104 = icmp eq i64 %103, %82\l  br i1 %104, label %105, label %83, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0xf9a5e0:s0 -> Node0xf9a630;
	Node0xf9a5e0:s1 -> Node0xf9a5e0;
	Node0xf9a630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%105:\l105:                                              \l  %106 = mul i64 %96, 1103515245\l  %107 = add i64 %106, 12345\l  br label %108\l}"];
	Node0xf9a630 -> Node0xf9a680;
	Node0xf9a680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%108:\l108:                                              \l  %109 = phi i64 [ undef, %78 ], [ %96, %105 ]\l  %110 = phi i64 [ 0, %78 ], [ %102, %105 ]\l  %111 = phi i64 [ 1103527590, %78 ], [ %107, %105 ]\l  %112 = icmp eq i64 %79, 0\l  br i1 %112, label %119, label %113\l|{<s0>T|<s1>F}}"];
	Node0xf9a680:s0 -> Node0xf9a720;
	Node0xf9a680:s1 -> Node0xf9a6d0;
	Node0xf9a6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%113:\l113:                                              \l  %114 = urem i64 %111, %0\l  %115 = getelementptr inbounds i64, i64* %6, i64 %110\l  %116 = load i64, i64* %115, align 8, !tbaa !9\l  %117 = getelementptr inbounds i64, i64* %6, i64 %114\l  %118 = load i64, i64* %117, align 8, !tbaa !9\l  store i64 %118, i64* %115, align 8, !tbaa !9\l  store i64 %116, i64* %117, align 8, !tbaa !9\l  br label %119\l}"];
	Node0xf9a6d0 -> Node0xf9a720;
	Node0xf9a720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%119:\l119:                                              \l  %120 = phi i64 [ %109, %108 ], [ %111, %113 ]\l  store i64 %120, i64* @rand_nxt, align 8, !tbaa !9\l  br label %121\l}"];
	Node0xf9a720 -> Node0xf9a770;
	Node0xf9a770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%121:\l121:                                              \l  ret void\l}"];
}

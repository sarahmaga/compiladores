digraph "CFG for 'seqquick' function" {
	label="CFG for 'seqquick' function";

	Node0x1d18750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%2:\l  %3 = ptrtoint i64* %1 to i64\l  %4 = ptrtoint i64* %0 to i64\l  %5 = sub i64 %3, %4\l  %6 = icmp sgt i64 %5, 8184\l  br i1 %6, label %7, label %52\l|{<s0>T|<s1>F}}"];
	Node0x1d18750:s0 -> Node0x1d1d270;
	Node0x1d18750:s1 -> Node0x1d1d630;
	Node0x1d1d270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%7:\l7:                                                \l  %8 = phi i64 [ %50, %44 ], [ %5, %2 ]\l  %9 = phi i64* [ %48, %44 ], [ %0, %2 ]\l  %10 = load i64, i64* %9, align 8, !tbaa !5\l  %11 = load i64, i64* %1, align 8, !tbaa !5\l  %12 = lshr i64 %8, 4\l  %13 = getelementptr inbounds i64, i64* %9, i64 %12\l  %14 = load i64, i64* %13, align 8, !tbaa !5\l  %15 = icmp slt i64 %10, %11\l  br i1 %15, label %16, label %21\l|{<s0>T|<s1>F}}"];
	Node0x1d1d270:s0 -> Node0x1d1d2c0;
	Node0x1d1d270:s1 -> Node0x1d1d360;
	Node0x1d1d2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%16:\l16:                                               \l  %17 = icmp slt i64 %11, %14\l  br i1 %17, label %26, label %18\l|{<s0>T|<s1>F}}"];
	Node0x1d1d2c0:s0 -> Node0x1d1d400;
	Node0x1d1d2c0:s1 -> Node0x1d1d310;
	Node0x1d1d310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%18:\l18:                                               \l  %19 = icmp slt i64 %10, %14\l  %20 = select i1 %19, i64 %14, i64 %10\l  br label %26\l}"];
	Node0x1d1d310 -> Node0x1d1d400;
	Node0x1d1d360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%21:\l21:                                               \l  %22 = icmp sgt i64 %11, %14\l  br i1 %22, label %26, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1d1d360:s0 -> Node0x1d1d400;
	Node0x1d1d360:s1 -> Node0x1d1d3b0;
	Node0x1d1d3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%23:\l23:                                               \l  %24 = icmp sgt i64 %10, %14\l  %25 = select i1 %24, i64 %14, i64 %10\l  br label %26\l}"];
	Node0x1d1d3b0 -> Node0x1d1d400;
	Node0x1d1d400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%26:\l26:                                               \l  %27 = phi i64 [ %11, %16 ], [ %20, %18 ], [ %11, %21 ], [ %25, %23 ]\l  br label %28\l}"];
	Node0x1d1d400 -> Node0x1d1d450;
	Node0x1d1d450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%28:\l28:                                               \l  %29 = phi i64* [ %9, %26 ], [ %40, %43 ]\l  %30 = phi i64* [ %1, %26 ], [ %35, %43 ]\l  br label %31\l}"];
	Node0x1d1d450 -> Node0x1d1d4a0;
	Node0x1d1d4a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i64* [ %30, %28 ], [ %35, %31 ]\l  %33 = load i64, i64* %32, align 8, !tbaa !5\l  %34 = icmp sgt i64 %33, %27\l  %35 = getelementptr inbounds i64, i64* %32, i64 -1\l  br i1 %34, label %31, label %36, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x1d1d4a0:s0 -> Node0x1d1d4a0;
	Node0x1d1d4a0:s1 -> Node0x1d1d4f0;
	Node0x1d1d4f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i64* [ %40, %36 ], [ %29, %31 ]\l  %38 = load i64, i64* %37, align 8, !tbaa !5\l  %39 = icmp slt i64 %38, %27\l  %40 = getelementptr inbounds i64, i64* %37, i64 1\l  br i1 %39, label %36, label %41, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x1d1d4f0:s0 -> Node0x1d1d4f0;
	Node0x1d1d4f0:s1 -> Node0x1d1d540;
	Node0x1d1d540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%41:\l41:                                               \l  %42 = icmp ult i64* %37, %32\l  br i1 %42, label %43, label %44\l|{<s0>T|<s1>F}}"];
	Node0x1d1d540:s0 -> Node0x1d1d590;
	Node0x1d1d540:s1 -> Node0x1d1d5e0;
	Node0x1d1d590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%43:\l43:                                               \l  store i64 %38, i64* %32, align 8, !tbaa !5\l  store i64 %33, i64* %37, align 8, !tbaa !5\l  br label %28\l}"];
	Node0x1d1d590 -> Node0x1d1d450;
	Node0x1d1d5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%44:\l44:                                               \l  %45 = icmp uge i64* %32, %1\l  %46 = sext i1 %45 to i64\l  %47 = getelementptr i64, i64* %32, i64 %46\l  tail call void @seqquick(i64* noundef nonnull %9, i64* noundef %47)\l  %48 = getelementptr inbounds i64, i64* %47, i64 1\l  %49 = ptrtoint i64* %48 to i64\l  %50 = sub i64 %3, %49\l  %51 = icmp sgt i64 %50, 8184\l  br i1 %51, label %7, label %52, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x1d1d5e0:s0 -> Node0x1d1d270;
	Node0x1d1d5e0:s1 -> Node0x1d1d630;
	Node0x1d1d630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%52:\l52:                                               \l  %53 = phi i64* [ %0, %2 ], [ %48, %44 ]\l  %54 = getelementptr inbounds i64, i64* %53, i64 1\l  %55 = icmp ugt i64* %54, %1\l  br i1 %55, label %74, label %56\l|{<s0>T|<s1>F}}"];
	Node0x1d1d630:s0 -> Node0x1d1d7c0;
	Node0x1d1d630:s1 -> Node0x1d1d680;
	Node0x1d1d680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%56:\l56:                                               \l  %57 = phi i64* [ %72, %69 ], [ %54, %52 ]\l  %58 = phi i64* [ %57, %69 ], [ %53, %52 ]\l  %59 = load i64, i64* %57, align 8, !tbaa !5\l  %60 = icmp ult i64* %58, %53\l  br i1 %60, label %69, label %61\l|{<s0>T|<s1>F}}"];
	Node0x1d1d680:s0 -> Node0x1d1d770;
	Node0x1d1d680:s1 -> Node0x1d1d6d0;
	Node0x1d1d6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%61:\l61:                                               \l  %62 = phi i64* [ %67, %65 ], [ %58, %56 ]\l  %63 = load i64, i64* %62, align 8, !tbaa !5\l  %64 = icmp sgt i64 %63, %59\l  br i1 %64, label %65, label %69\l|{<s0>T|<s1>F}}"];
	Node0x1d1d6d0:s0 -> Node0x1d1d720;
	Node0x1d1d6d0:s1 -> Node0x1d1d770;
	Node0x1d1d720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds i64, i64* %62, i64 1\l  store i64 %63, i64* %66, align 8, !tbaa !5\l  %67 = getelementptr inbounds i64, i64* %62, i64 -1\l  %68 = icmp ult i64* %67, %53\l  br i1 %68, label %69, label %61, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x1d1d720:s0 -> Node0x1d1d770;
	Node0x1d1d720:s1 -> Node0x1d1d6d0;
	Node0x1d1d770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%69:\l69:                                               \l  %70 = phi i64* [ %58, %56 ], [ %62, %61 ], [ %67, %65 ]\l  %71 = getelementptr inbounds i64, i64* %70, i64 1\l  store i64 %59, i64* %71, align 8, !tbaa !5\l  %72 = getelementptr inbounds i64, i64* %57, i64 1\l  %73 = icmp ugt i64* %72, %1\l  br i1 %73, label %74, label %56, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x1d1d770:s0 -> Node0x1d1d7c0;
	Node0x1d1d770:s1 -> Node0x1d1d680;
	Node0x1d1d7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%74:\l74:                                               \l  ret void\l}"];
}

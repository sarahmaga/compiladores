digraph "CFG for 'cilkmerge' function" {
	label="CFG for 'cilkmerge' function";

	Node0xe61c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%5:\l  %6 = ptrtoint i64* %3 to i64\l  %7 = ptrtoint i64* %2 to i64\l  %8 = sub i64 %6, %7\l  %9 = ptrtoint i64* %1 to i64\l  %10 = ptrtoint i64* %0 to i64\l  %11 = sub i64 %9, %10\l  %12 = icmp sgt i64 %8, %11\l  br i1 %12, label %13, label %14\l|{<s0>T|<s1>F}}"];
	Node0xe61c20:s0 -> Node0xe61d40;
	Node0xe61c20:s1 -> Node0xe61d90;
	Node0xe61d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%13:\l13:                                               \l  br label %14\l}"];
	Node0xe61d40 -> Node0xe61d90;
	Node0xe61d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%14:\l14:                                               \l  %15 = phi i64* [ %1, %13 ], [ %3, %5 ]\l  %16 = phi i64* [ %0, %13 ], [ %2, %5 ]\l  %17 = phi i64* [ %3, %13 ], [ %1, %5 ]\l  %18 = phi i64* [ %2, %13 ], [ %0, %5 ]\l  %19 = icmp ult i64* %15, %16\l  br i1 %19, label %20, label %26\l|{<s0>T|<s1>F}}"];
	Node0xe61d90:s0 -> Node0xe61de0;
	Node0xe61d90:s1 -> Node0xe61e30;
	Node0xe61de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%20:\l20:                                               \l  %21 = bitcast i64* %4 to i8*\l  %22 = bitcast i64* %18 to i8*\l  %23 = ptrtoint i64* %17 to i64\l  %24 = ptrtoint i64* %18 to i64\l  %25 = sub i64 %23, %24\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64\l... %25, i1 false)\l  br label %144\l}"];
	Node0xe61de0 -> Node0xe62470;
	Node0xe61e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%26:\l26:                                               \l  %27 = ptrtoint i64* %15 to i64\l  %28 = ptrtoint i64* %16 to i64\l  %29 = sub i64 %27, %28\l  %30 = icmp slt i64 %29, 8192\l  br i1 %30, label %31, label %102\l|{<s0>T|<s1>F}}"];
	Node0xe61e30:s0 -> Node0xe61e80;
	Node0xe61e30:s1 -> Node0xe62380;
	Node0xe61e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%31:\l31:                                               \l  %32 = icmp ult i64* %18, %17\l  %33 = icmp ult i64* %16, %15\l  %34 = and i1 %33, %32\l  br i1 %34, label %35, label %56\l|{<s0>T|<s1>F}}"];
	Node0xe61e80:s0 -> Node0xe61ed0;
	Node0xe61e80:s1 -> Node0xe62060;
	Node0xe61ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = load i64, i64* %18, align 8, !tbaa !5\l  br label %37\l}"];
	Node0xe61ed0 -> Node0xe61f20;
	Node0xe61f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%37:\l37:                                               \l  %38 = phi i64* [ %54, %53 ], [ %16, %35 ]\l  %39 = phi i64* [ %44, %53 ], [ %18, %35 ]\l  %40 = phi i64* [ %48, %53 ], [ %4, %35 ]\l  %41 = phi i64 [ %46, %53 ], [ %36, %35 ]\l  %42 = load i64, i64* %38, align 8, !tbaa !5\l  br label %43\l}"];
	Node0xe61f20 -> Node0xe61f70;
	Node0xe61f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  %44 = phi i64* [ %50, %49 ], [ %39, %37 ]\l  %45 = phi i64* [ %48, %49 ], [ %40, %37 ]\l  %46 = phi i64 [ %51, %49 ], [ %41, %37 ]\l  %47 = icmp slt i64 %46, %42\l  %48 = getelementptr inbounds i64, i64* %45, i64 1\l  br i1 %47, label %49, label %53\l|{<s0>T|<s1>F}}"];
	Node0xe61f70:s0 -> Node0xe61fc0;
	Node0xe61f70:s1 -> Node0xe62010;
	Node0xe61fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%49:\l49:                                               \l  store i64 %46, i64* %45, align 8, !tbaa !5\l  %50 = getelementptr inbounds i64, i64* %44, i64 1\l  %51 = load i64, i64* %50, align 8, !tbaa !5\l  %52 = icmp ult i64* %50, %17\l  br i1 %52, label %43, label %56, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0xe61fc0:s0 -> Node0xe61f70;
	Node0xe61fc0:s1 -> Node0xe62060;
	Node0xe62010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%53:\l53:                                               \l  store i64 %42, i64* %45, align 8, !tbaa !5\l  %54 = getelementptr inbounds i64, i64* %38, i64 1\l  %55 = icmp ult i64* %54, %15\l  br i1 %55, label %37, label %56, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0xe62010:s0 -> Node0xe61f20;
	Node0xe62010:s1 -> Node0xe62060;
	Node0xe62060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%56:\l56:                                               \l  %57 = phi i64* [ %16, %31 ], [ %38, %49 ], [ %54, %53 ]\l  %58 = phi i64* [ %18, %31 ], [ %50, %49 ], [ %44, %53 ]\l  %59 = phi i64* [ %4, %31 ], [ %48, %53 ], [ %48, %49 ]\l  %60 = icmp ugt i64* %58, %17\l  %61 = icmp ugt i64* %57, %15\l  %62 = or i1 %60, %61\l  br i1 %62, label %85, label %63\l|{<s0>T|<s1>F}}"];
	Node0xe62060:s0 -> Node0xe62290;
	Node0xe62060:s1 -> Node0xe620b0;
	Node0xe620b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%63:\l63:                                               \l  %64 = load i64, i64* %58, align 8, !tbaa !5\l  br label %65\l}"];
	Node0xe620b0 -> Node0xe62100;
	Node0xe62100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%65:\l65:                                               \l  %66 = phi i64* [ %57, %63 ], [ %83, %82 ]\l  %67 = phi i64* [ %58, %63 ], [ %72, %82 ]\l  %68 = phi i64* [ %59, %63 ], [ %76, %82 ]\l  %69 = phi i64 [ %64, %63 ], [ %74, %82 ]\l  %70 = load i64, i64* %66, align 8, !tbaa !5\l  br label %71\l}"];
	Node0xe62100 -> Node0xe62150;
	Node0xe62150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%71:\l71:                                               \l  %72 = phi i64* [ %78, %80 ], [ %67, %65 ]\l  %73 = phi i64* [ %76, %80 ], [ %68, %65 ]\l  %74 = phi i64 [ %81, %80 ], [ %69, %65 ]\l  %75 = icmp slt i64 %74, %70\l  %76 = getelementptr inbounds i64, i64* %73, i64 1\l  br i1 %75, label %77, label %82\l|{<s0>T|<s1>F}}"];
	Node0xe62150:s0 -> Node0xe621a0;
	Node0xe62150:s1 -> Node0xe62240;
	Node0xe621a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%77:\l77:                                               \l  store i64 %74, i64* %73, align 8, !tbaa !5\l  %78 = getelementptr inbounds i64, i64* %72, i64 1\l  %79 = icmp ugt i64* %78, %17\l  br i1 %79, label %85, label %80\l|{<s0>T|<s1>F}}"];
	Node0xe621a0:s0 -> Node0xe62290;
	Node0xe621a0:s1 -> Node0xe621f0;
	Node0xe621f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%80:\l80:                                               \l  %81 = load i64, i64* %78, align 8, !tbaa !5\l  br label %71, !llvm.loop !11\l}"];
	Node0xe621f0 -> Node0xe62150;
	Node0xe62240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%82:\l82:                                               \l  store i64 %70, i64* %73, align 8, !tbaa !5\l  %83 = getelementptr inbounds i64, i64* %66, i64 1\l  %84 = icmp ugt i64* %83, %15\l  br i1 %84, label %85, label %65, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0xe62240:s0 -> Node0xe62290;
	Node0xe62240:s1 -> Node0xe62100;
	Node0xe62290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%85:\l85:                                               \l  %86 = phi i64* [ %57, %56 ], [ %66, %77 ], [ %83, %82 ]\l  %87 = phi i64* [ %58, %56 ], [ %78, %77 ], [ %72, %82 ]\l  %88 = phi i64* [ %59, %56 ], [ %76, %82 ], [ %76, %77 ]\l  %89 = icmp ugt i64* %87, %17\l  %90 = bitcast i64* %88 to i8*\l  br i1 %89, label %91, label %96\l|{<s0>T|<s1>F}}"];
	Node0xe62290:s0 -> Node0xe622e0;
	Node0xe62290:s1 -> Node0xe62330;
	Node0xe622e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%91:\l91:                                               \l  %92 = bitcast i64* %86 to i8*\l  %93 = ptrtoint i64* %86 to i64\l  %94 = add i64 %27, 8\l  %95 = sub i64 %94, %93\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %92, i64\l... %95, i1 false) #9\l  br label %144\l}"];
	Node0xe622e0 -> Node0xe62470;
	Node0xe62330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%96:\l96:                                               \l  %97 = bitcast i64* %87 to i8*\l  %98 = ptrtoint i64* %17 to i64\l  %99 = ptrtoint i64* %87 to i64\l  %100 = add i64 %98, 8\l  %101 = sub i64 %100, %99\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %97, i64\l... %101, i1 false) #9\l  br label %144\l}"];
	Node0xe62330 -> Node0xe62470;
	Node0xe62380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%102:\l102:                                              \l  %103 = ptrtoint i64* %17 to i64\l  %104 = ptrtoint i64* %18 to i64\l  %105 = sub i64 %103, %104\l  %106 = ashr exact i64 %105, 3\l  %107 = add nsw i64 %106, 1\l  %108 = sdiv i64 %107, 2\l  %109 = getelementptr inbounds i64, i64* %18, i64 %108\l  %110 = load i64, i64* %109, align 8, !tbaa !5\l  %111 = icmp eq i64* %16, %15\l  br i1 %111, label %128, label %112\l|{<s0>T|<s1>F}}"];
	Node0xe62380:s0 -> Node0xe62420;
	Node0xe62380:s1 -> Node0xe623d0;
	Node0xe623d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%112:\l112:                                              \l  %113 = phi i64* [ %126, %112 ], [ %15, %102 ]\l  %114 = phi i64* [ %125, %112 ], [ %16, %102 ]\l  %115 = ptrtoint i64* %113 to i64\l  %116 = ptrtoint i64* %114 to i64\l  %117 = sub i64 %115, %116\l  %118 = ashr exact i64 %117, 3\l  %119 = add nsw i64 %118, 1\l  %120 = ashr i64 %119, 1\l  %121 = getelementptr inbounds i64, i64* %114, i64 %120\l  %122 = load i64, i64* %121, align 8, !tbaa !5\l  %123 = icmp slt i64 %122, %110\l  %124 = getelementptr inbounds i64, i64* %121, i64 -1\l  %125 = select i1 %123, i64* %121, i64* %114\l  %126 = select i1 %123, i64* %113, i64* %124\l  %127 = icmp eq i64* %125, %126\l  br i1 %127, label %128, label %112, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0xe623d0:s0 -> Node0xe62420;
	Node0xe623d0:s1 -> Node0xe623d0;
	Node0xe62420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%128:\l128:                                              \l  %129 = phi i64* [ %16, %102 ], [ %125, %112 ]\l  %130 = load i64, i64* %129, align 8, !tbaa !5\l  %131 = icmp sgt i64 %130, %110\l  %132 = sext i1 %131 to i64\l  %133 = getelementptr i64, i64* %129, i64 %132\l  %134 = getelementptr inbounds i64, i64* %133, i64 %108\l  %135 = ptrtoint i64* %134 to i64\l  %136 = sub i64 %135, %28\l  %137 = ashr exact i64 %136, 3\l  %138 = getelementptr inbounds i64, i64* %4, i64 %137\l  %139 = getelementptr inbounds i64, i64* %138, i64 1\l  store i64 %110, i64* %139, align 8, !tbaa !5\l  %140 = getelementptr inbounds i64, i64* %109, i64 -1\l  call void @cilkmerge(i64* noundef %18, i64* noundef nonnull %140, i64*\l... noundef %16, i64* noundef %133, i64* noundef %4)\l  %141 = getelementptr inbounds i64, i64* %109, i64 1\l  %142 = getelementptr inbounds i64, i64* %133, i64 1\l  %143 = getelementptr inbounds i64, i64* %138, i64 2\l  call void @cilkmerge(i64* noundef nonnull %141, i64* noundef %17, i64*\l... noundef nonnull %142, i64* noundef %15, i64* noundef nonnull %143)\l  br label %144\l}"];
	Node0xe62420 -> Node0xe62470;
	Node0xe62470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%144:\l144:                                              \l  ret void\l}"];
}

digraph "CFG for 'cilkmerge' function" {
	label="CFG for 'cilkmerge' function";

	Node0x179c630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%5:\l  br label %6\l}"];
	Node0x179c630 -> Node0x179c750;
	Node0x179c750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%6:\l6:                                                \l  %7 = phi i64* [ %0, %5 ], [ %143, %130 ]\l  %8 = phi i64* [ %1, %5 ], [ %23, %130 ]\l  %9 = phi i64* [ %2, %5 ], [ %144, %130 ]\l  %10 = phi i64* [ %3, %5 ], [ %21, %130 ]\l  %11 = phi i64* [ %4, %5 ], [ %145, %130 ]\l  %12 = ptrtoint i64* %10 to i64\l  %13 = ptrtoint i64* %9 to i64\l  %14 = sub i64 %12, %13\l  %15 = ptrtoint i64* %8 to i64\l  %16 = ptrtoint i64* %7 to i64\l  %17 = sub i64 %15, %16\l  %18 = icmp sgt i64 %14, %17\l  br i1 %18, label %19, label %20\l|{<s0>T|<s1>F}}"];
	Node0x179c750:s0 -> Node0x179c7a0;
	Node0x179c750:s1 -> Node0x179c7f0;
	Node0x179c7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%19:\l19:                                               \l  br label %20\l}"];
	Node0x179c7a0 -> Node0x179c7f0;
	Node0x179c7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%20:\l20:                                               \l  %21 = phi i64* [ %8, %19 ], [ %10, %6 ]\l  %22 = phi i64* [ %7, %19 ], [ %9, %6 ]\l  %23 = phi i64* [ %10, %19 ], [ %8, %6 ]\l  %24 = phi i64* [ %9, %19 ], [ %7, %6 ]\l  %25 = icmp ult i64* %21, %22\l  br i1 %25, label %26, label %32\l|{<s0>T|<s1>F}}"];
	Node0x179c7f0:s0 -> Node0x179c840;
	Node0x179c7f0:s1 -> Node0x179c890;
	Node0x179c840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%26:\l26:                                               \l  %27 = bitcast i64* %11 to i8*\l  %28 = bitcast i64* %24 to i8*\l  %29 = ptrtoint i64* %23 to i64\l  %30 = ptrtoint i64* %24 to i64\l  %31 = sub i64 %29, %30\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28,\l... i64 %31, i1 false)\l  br label %146\l}"];
	Node0x179c840 -> Node0x179ce30;
	Node0x179c890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%32:\l32:                                               \l  %33 = ptrtoint i64* %21 to i64\l  %34 = ptrtoint i64* %22 to i64\l  %35 = sub i64 %33, %34\l  %36 = icmp slt i64 %35, 8192\l  br i1 %36, label %37, label %104\l|{<s0>T|<s1>F}}"];
	Node0x179c890:s0 -> Node0x179c8e0;
	Node0x179c890:s1 -> Node0x179cd40;
	Node0x179c8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%37:\l37:                                               \l  %38 = icmp ult i64* %24, %23\l  %39 = icmp ult i64* %22, %21\l  %40 = and i1 %39, %38\l  br i1 %40, label %41, label %62\l|{<s0>T|<s1>F}}"];
	Node0x179c8e0:s0 -> Node0x179c930;
	Node0x179c8e0:s1 -> Node0x179cac0;
	Node0x179c930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%41:\l41:                                               \l  %42 = load i64, i64* %24, align 8, !tbaa !5\l  br label %43\l}"];
	Node0x179c930 -> Node0x179c980;
	Node0x179c980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%43:\l43:                                               \l  %44 = phi i64* [ %60, %59 ], [ %22, %41 ]\l  %45 = phi i64* [ %50, %59 ], [ %24, %41 ]\l  %46 = phi i64* [ %54, %59 ], [ %11, %41 ]\l  %47 = phi i64 [ %52, %59 ], [ %42, %41 ]\l  %48 = load i64, i64* %44, align 8, !tbaa !5\l  br label %49\l}"];
	Node0x179c980 -> Node0x179c9d0;
	Node0x179c9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%49:\l49:                                               \l  %50 = phi i64* [ %56, %55 ], [ %45, %43 ]\l  %51 = phi i64* [ %54, %55 ], [ %46, %43 ]\l  %52 = phi i64 [ %57, %55 ], [ %47, %43 ]\l  %53 = icmp slt i64 %52, %48\l  %54 = getelementptr inbounds i64, i64* %51, i64 1\l  br i1 %53, label %55, label %59\l|{<s0>T|<s1>F}}"];
	Node0x179c9d0:s0 -> Node0x179ca20;
	Node0x179c9d0:s1 -> Node0x179ca70;
	Node0x179ca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%55:\l55:                                               \l  store i64 %52, i64* %51, align 8, !tbaa !5\l  %56 = getelementptr inbounds i64, i64* %50, i64 1\l  %57 = load i64, i64* %56, align 8, !tbaa !5\l  %58 = icmp ult i64* %56, %23\l  br i1 %58, label %49, label %62\l|{<s0>T|<s1>F}}"];
	Node0x179ca20:s0 -> Node0x179c9d0;
	Node0x179ca20:s1 -> Node0x179cac0;
	Node0x179ca70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%59:\l59:                                               \l  store i64 %48, i64* %51, align 8, !tbaa !5\l  %60 = getelementptr inbounds i64, i64* %44, i64 1\l  %61 = icmp ult i64* %60, %21\l  br i1 %61, label %43, label %62\l|{<s0>T|<s1>F}}"];
	Node0x179ca70:s0 -> Node0x179c980;
	Node0x179ca70:s1 -> Node0x179cac0;
	Node0x179cac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%62:\l62:                                               \l  %63 = phi i64* [ %22, %37 ], [ %44, %55 ], [ %60, %59 ]\l  %64 = phi i64* [ %24, %37 ], [ %56, %55 ], [ %50, %59 ]\l  %65 = phi i64* [ %11, %37 ], [ %54, %59 ], [ %54, %55 ]\l  %66 = icmp ugt i64* %64, %23\l  %67 = icmp ugt i64* %63, %21\l  %68 = select i1 %66, i1 true, i1 %67\l  br i1 %68, label %91, label %69\l|{<s0>T|<s1>F}}"];
	Node0x179cac0:s0 -> Node0x179ccf0;
	Node0x179cac0:s1 -> Node0x179cb10;
	Node0x179cb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%69:\l69:                                               \l  %70 = load i64, i64* %64, align 8, !tbaa !5\l  br label %71\l}"];
	Node0x179cb10 -> Node0x179cb60;
	Node0x179cb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%71:\l71:                                               \l  %72 = phi i64* [ %63, %69 ], [ %89, %88 ]\l  %73 = phi i64* [ %64, %69 ], [ %78, %88 ]\l  %74 = phi i64* [ %65, %69 ], [ %82, %88 ]\l  %75 = phi i64 [ %70, %69 ], [ %80, %88 ]\l  %76 = load i64, i64* %72, align 8, !tbaa !5\l  br label %77\l}"];
	Node0x179cb60 -> Node0x179cbb0;
	Node0x179cbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%77:\l77:                                               \l  %78 = phi i64* [ %84, %86 ], [ %73, %71 ]\l  %79 = phi i64* [ %82, %86 ], [ %74, %71 ]\l  %80 = phi i64 [ %87, %86 ], [ %75, %71 ]\l  %81 = icmp slt i64 %80, %76\l  %82 = getelementptr inbounds i64, i64* %79, i64 1\l  br i1 %81, label %83, label %88\l|{<s0>T|<s1>F}}"];
	Node0x179cbb0:s0 -> Node0x179cc00;
	Node0x179cbb0:s1 -> Node0x179cca0;
	Node0x179cc00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%83:\l83:                                               \l  store i64 %80, i64* %79, align 8, !tbaa !5\l  %84 = getelementptr inbounds i64, i64* %78, i64 1\l  %85 = icmp ugt i64* %84, %23\l  br i1 %85, label %91, label %86\l|{<s0>T|<s1>F}}"];
	Node0x179cc00:s0 -> Node0x179ccf0;
	Node0x179cc00:s1 -> Node0x179cc50;
	Node0x179cc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%86:\l86:                                               \l  %87 = load i64, i64* %84, align 8, !tbaa !5\l  br label %77\l}"];
	Node0x179cc50 -> Node0x179cbb0;
	Node0x179cca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%88:\l88:                                               \l  store i64 %76, i64* %79, align 8, !tbaa !5\l  %89 = getelementptr inbounds i64, i64* %72, i64 1\l  %90 = icmp ugt i64* %89, %21\l  br i1 %90, label %91, label %71\l|{<s0>T|<s1>F}}"];
	Node0x179cca0:s0 -> Node0x179ccf0;
	Node0x179cca0:s1 -> Node0x179cb60;
	Node0x179ccf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%91:\l91:                                               \l  %92 = phi i64* [ %63, %62 ], [ %72, %83 ], [ %89, %88 ]\l  %93 = phi i64* [ %64, %62 ], [ %84, %83 ], [ %78, %88 ]\l  %94 = phi i64* [ %65, %62 ], [ %82, %88 ], [ %82, %83 ]\l  %95 = icmp ugt i64* %93, %23\l  %96 = bitcast i64* %94 to i8*\l  %97 = select i1 %95, i64* %92, i64* %93\l  %98 = select i1 %95, i64* %21, i64* %23\l  %99 = bitcast i64* %97 to i8*\l  %100 = ptrtoint i64* %98 to i64\l  %101 = ptrtoint i64* %97 to i64\l  %102 = add i64 %100, 8\l  %103 = sub i64 %102, %101\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %99,\l... i64 %103, i1 false) #9\l  br label %146\l}"];
	Node0x179ccf0 -> Node0x179ce30;
	Node0x179cd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%104:\l104:                                              \l  %105 = ptrtoint i64* %23 to i64\l  %106 = ptrtoint i64* %24 to i64\l  %107 = sub i64 %105, %106\l  %108 = ashr exact i64 %107, 3\l  %109 = add nsw i64 %108, 1\l  %110 = sdiv i64 %109, 2\l  %111 = getelementptr inbounds i64, i64* %24, i64 %110\l  %112 = load i64, i64* %111, align 8, !tbaa !5\l  %113 = icmp eq i64* %22, %21\l  br i1 %113, label %130, label %114\l|{<s0>T|<s1>F}}"];
	Node0x179cd40:s0 -> Node0x179cde0;
	Node0x179cd40:s1 -> Node0x179cd90;
	Node0x179cd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi i64* [ %128, %114 ], [ %21, %104 ]\l  %116 = phi i64* [ %127, %114 ], [ %22, %104 ]\l  %117 = ptrtoint i64* %115 to i64\l  %118 = ptrtoint i64* %116 to i64\l  %119 = sub i64 %117, %118\l  %120 = ashr exact i64 %119, 3\l  %121 = add nsw i64 %120, 1\l  %122 = ashr i64 %121, 1\l  %123 = getelementptr inbounds i64, i64* %116, i64 %122\l  %124 = load i64, i64* %123, align 8, !tbaa !5\l  %125 = icmp slt i64 %124, %112\l  %126 = getelementptr inbounds i64, i64* %123, i64 -1\l  %127 = select i1 %125, i64* %123, i64* %116\l  %128 = select i1 %125, i64* %115, i64* %126\l  %129 = icmp eq i64* %127, %128\l  br i1 %129, label %130, label %114, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x179cd90:s0 -> Node0x179cde0;
	Node0x179cd90:s1 -> Node0x179cd90;
	Node0x179cde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%130:\l130:                                              \l  %131 = phi i64* [ %21, %104 ], [ %127, %114 ]\l  %132 = load i64, i64* %131, align 8, !tbaa !5\l  %133 = icmp sgt i64 %132, %112\l  %134 = sext i1 %133 to i64\l  %135 = getelementptr i64, i64* %131, i64 %134\l  %136 = getelementptr inbounds i64, i64* %135, i64 %110\l  %137 = ptrtoint i64* %136 to i64\l  %138 = sub i64 %137, %34\l  %139 = ashr exact i64 %138, 3\l  %140 = getelementptr inbounds i64, i64* %11, i64 %139\l  %141 = getelementptr inbounds i64, i64* %140, i64 1\l  store i64 %112, i64* %141, align 8, !tbaa !5\l  %142 = getelementptr inbounds i64, i64* %111, i64 -1\l  tail call void @cilkmerge(i64* noundef %24, i64* noundef nonnull %142, i64*\l... noundef %22, i64* noundef %135, i64* noundef %11)\l  %143 = getelementptr inbounds i64, i64* %111, i64 1\l  %144 = getelementptr inbounds i64, i64* %135, i64 1\l  %145 = getelementptr inbounds i64, i64* %140, i64 2\l  br label %6\l}"];
	Node0x179cde0 -> Node0x179c750;
	Node0x179ce30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%146:\l146:                                              \l  ret void\l}"];
}

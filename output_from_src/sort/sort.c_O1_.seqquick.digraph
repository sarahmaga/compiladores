digraph "CFG for 'seqquick' function" {
	label="CFG for 'seqquick' function";

	Node0x1eeb540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%2:\l  %3 = ptrtoint i64* %1 to i64\l  %4 = ptrtoint i64* %0 to i64\l  %5 = sub i64 %3, %4\l  %6 = icmp sgt i64 %5, 8184\l  br i1 %6, label %7, label %53\l|{<s0>T|<s1>F}}"];
	Node0x1eeb540:s0 -> Node0x1eeff50;
	Node0x1eeb540:s1 -> Node0x1ef0310;
	Node0x1eeff50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%7:\l7:                                                \l  %8 = phi i64 [ %51, %45 ], [ %5, %2 ]\l  %9 = phi i64* [ %49, %45 ], [ %0, %2 ]\l  %10 = load i64, i64* %9, align 8, !tbaa !5\l  %11 = load i64, i64* %1, align 8, !tbaa !5\l  %12 = ashr exact i64 %8, 3\l  %13 = sdiv i64 %12, 2\l  %14 = getelementptr inbounds i64, i64* %9, i64 %13\l  %15 = load i64, i64* %14, align 8, !tbaa !5\l  %16 = icmp slt i64 %10, %11\l  br i1 %16, label %17, label %22\l|{<s0>T|<s1>F}}"];
	Node0x1eeff50:s0 -> Node0x1eeffa0;
	Node0x1eeff50:s1 -> Node0x1ef0040;
	Node0x1eeffa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%17:\l17:                                               \l  %18 = icmp slt i64 %11, %15\l  br i1 %18, label %27, label %19\l|{<s0>T|<s1>F}}"];
	Node0x1eeffa0:s0 -> Node0x1ef00e0;
	Node0x1eeffa0:s1 -> Node0x1eefff0;
	Node0x1eefff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%19:\l19:                                               \l  %20 = icmp slt i64 %10, %15\l  %21 = select i1 %20, i64 %15, i64 %10\l  br label %27\l}"];
	Node0x1eefff0 -> Node0x1ef00e0;
	Node0x1ef0040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%22:\l22:                                               \l  %23 = icmp sgt i64 %11, %15\l  br i1 %23, label %27, label %24\l|{<s0>T|<s1>F}}"];
	Node0x1ef0040:s0 -> Node0x1ef00e0;
	Node0x1ef0040:s1 -> Node0x1ef0090;
	Node0x1ef0090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%24:\l24:                                               \l  %25 = icmp sgt i64 %10, %15\l  %26 = select i1 %25, i64 %15, i64 %10\l  br label %27\l}"];
	Node0x1ef0090 -> Node0x1ef00e0;
	Node0x1ef00e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%27:\l27:                                               \l  %28 = phi i64 [ %11, %17 ], [ %21, %19 ], [ %11, %22 ], [ %26, %24 ]\l  br label %29\l}"];
	Node0x1ef00e0 -> Node0x1ef0130;
	Node0x1ef0130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%29:\l29:                                               \l  %30 = phi i64* [ %9, %27 ], [ %41, %44 ]\l  %31 = phi i64* [ %1, %27 ], [ %36, %44 ]\l  br label %32\l}"];
	Node0x1ef0130 -> Node0x1ef0180;
	Node0x1ef0180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i64* [ %31, %29 ], [ %36, %32 ]\l  %34 = load i64, i64* %33, align 8, !tbaa !5\l  %35 = icmp sgt i64 %34, %28\l  %36 = getelementptr inbounds i64, i64* %33, i64 -1\l  br i1 %35, label %32, label %37, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x1ef0180:s0 -> Node0x1ef0180;
	Node0x1ef0180:s1 -> Node0x1ef01d0;
	Node0x1ef01d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i64* [ %41, %37 ], [ %30, %32 ]\l  %39 = load i64, i64* %38, align 8, !tbaa !5\l  %40 = icmp slt i64 %39, %28\l  %41 = getelementptr inbounds i64, i64* %38, i64 1\l  br i1 %40, label %37, label %42, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x1ef01d0:s0 -> Node0x1ef01d0;
	Node0x1ef01d0:s1 -> Node0x1ef0220;
	Node0x1ef0220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%42:\l42:                                               \l  %43 = icmp ult i64* %38, %33\l  br i1 %43, label %44, label %45\l|{<s0>T|<s1>F}}"];
	Node0x1ef0220:s0 -> Node0x1ef0270;
	Node0x1ef0220:s1 -> Node0x1ef02c0;
	Node0x1ef0270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%44:\l44:                                               \l  store i64 %39, i64* %33, align 8, !tbaa !5\l  store i64 %34, i64* %38, align 8, !tbaa !5\l  br label %29, !llvm.loop !13\l}"];
	Node0x1ef0270 -> Node0x1ef0130;
	Node0x1ef02c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%45:\l45:                                               \l  %46 = icmp uge i64* %33, %1\l  %47 = sext i1 %46 to i64\l  %48 = getelementptr i64, i64* %33, i64 %47\l  call void @seqquick(i64* noundef nonnull %9, i64* noundef %48)\l  %49 = getelementptr inbounds i64, i64* %48, i64 1\l  %50 = ptrtoint i64* %49 to i64\l  %51 = sub i64 %3, %50\l  %52 = icmp sgt i64 %51, 8184\l  br i1 %52, label %7, label %53, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x1ef02c0:s0 -> Node0x1eeff50;
	Node0x1ef02c0:s1 -> Node0x1ef0310;
	Node0x1ef0310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%53:\l53:                                               \l  %54 = phi i64* [ %0, %2 ], [ %49, %45 ]\l  %55 = getelementptr inbounds i64, i64* %54, i64 1\l  %56 = icmp ugt i64* %55, %1\l  br i1 %56, label %75, label %57\l|{<s0>T|<s1>F}}"];
	Node0x1ef0310:s0 -> Node0x1ef04a0;
	Node0x1ef0310:s1 -> Node0x1ef0360;
	Node0x1ef0360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%57:\l57:                                               \l  %58 = phi i64* [ %73, %70 ], [ %55, %53 ]\l  %59 = phi i64* [ %58, %70 ], [ %54, %53 ]\l  %60 = load i64, i64* %58, align 8, !tbaa !5\l  %61 = icmp ult i64* %59, %54\l  br i1 %61, label %70, label %62\l|{<s0>T|<s1>F}}"];
	Node0x1ef0360:s0 -> Node0x1ef0450;
	Node0x1ef0360:s1 -> Node0x1ef03b0;
	Node0x1ef03b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%62:\l62:                                               \l  %63 = phi i64* [ %68, %66 ], [ %59, %57 ]\l  %64 = load i64, i64* %63, align 8, !tbaa !5\l  %65 = icmp sgt i64 %64, %60\l  br i1 %65, label %66, label %70\l|{<s0>T|<s1>F}}"];
	Node0x1ef03b0:s0 -> Node0x1ef0400;
	Node0x1ef03b0:s1 -> Node0x1ef0450;
	Node0x1ef0400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%66:\l66:                                               \l  %67 = getelementptr inbounds i64, i64* %63, i64 1\l  store i64 %64, i64* %67, align 8, !tbaa !5\l  %68 = getelementptr inbounds i64, i64* %63, i64 -1\l  %69 = icmp ult i64* %68, %54\l  br i1 %69, label %70, label %62, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x1ef0400:s0 -> Node0x1ef0450;
	Node0x1ef0400:s1 -> Node0x1ef03b0;
	Node0x1ef0450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%70:\l70:                                               \l  %71 = phi i64* [ %59, %57 ], [ %63, %62 ], [ %68, %66 ]\l  %72 = getelementptr inbounds i64, i64* %71, i64 1\l  store i64 %60, i64* %72, align 8, !tbaa !5\l  %73 = getelementptr inbounds i64, i64* %58, i64 1\l  %74 = icmp ugt i64* %73, %1\l  br i1 %74, label %75, label %57, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x1ef0450:s0 -> Node0x1ef04a0;
	Node0x1ef0450:s1 -> Node0x1ef0360;
	Node0x1ef04a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%75:\l75:                                               \l  ret void\l}"];
}

digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x1bbdc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%0:\l  %1 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds\l... ([33 x i8], [33 x i8]* @str.20, i64 0, i64 0))\l  %2 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds\l... ([24 x i8], [24 x i8]* @str.21, i64 0, i64 0))\l  %3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds\l... ([27 x i8], [27 x i8]* @str.22, i64 0, i64 0))\l  %4 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))\l  %5 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0))\l  store i32 7, i32* @ncol, align 4, !tbaa !5\l  %6 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0))\l  store i32 8, i32* @nrow, align 4, !tbaa !5\l  %7 = call %struct._play* @make_play(i32 noundef 1)\l  %8 = load i32, i32* @nrow, align 4, !tbaa !5\l  %9 = load i32, i32* @ncol, align 4, !tbaa !5\l  %10 = sext i32 %9 to i64\l  %11 = shl nsw i64 %10, 2\l  %12 = call noalias i8* @malloc(i64 noundef %11) #11\l  %13 = bitcast i8* %12 to i32*\l  %14 = icmp eq i32 %9, 0\l  br i1 %14, label %19, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1bbdc70:s0 -> Node0x1bbde70;
	Node0x1bbdc70:s1 -> Node0x1bbddd0;
	Node0x1bbddd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%15:\l15:                                               \l  %16 = zext i32 %9 to i64\l  br label %25\l}"];
	Node0x1bbddd0 -> Node0x1bbdf10;
	Node0x1bbde20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7093f370",label="{%17:\l17:                                               \l  %18 = trunc i64 %28 to i32\l  br label %19\l}"];
	Node0x1bbde20 -> Node0x1bbde70;
	Node0x1bbde70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%19:\l19:                                               \l  %20 = phi i32 [ 0, %0 ], [ %18, %17 ]\l  %21 = icmp eq i32 %20, %9\l  br i1 %21, label %35, label %22\l|{<s0>T|<s1>F}}"];
	Node0x1bbde70:s0 -> Node0x1bbdfb0;
	Node0x1bbde70:s1 -> Node0x1bbdec0;
	Node0x1bbdec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%22:\l22:                                               \l  %23 = zext i32 %20 to i64\l  %24 = zext i32 %9 to i64\l  br label %30\l}"];
	Node0x1bbdec0 -> Node0x1bbdf60;
	Node0x1bbdf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%25:\l25:                                               \l  %26 = phi i64 [ 0, %15 ], [ %28, %25 ]\l  %27 = getelementptr inbounds i32, i32* %13, i64 %26\l  store i32 %8, i32* %27, align 4, !tbaa !5\l  %28 = add nuw nsw i64 %26, 1\l  %29 = icmp eq i64 %28, %16\l  br i1 %29, label %17, label %25, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x1bbdf10:s0 -> Node0x1bbde20;
	Node0x1bbdf10:s1 -> Node0x1bbdf10;
	Node0x1bbdf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%30:\l30:                                               \l  %31 = phi i64 [ %23, %22 ], [ %33, %30 ]\l  %32 = getelementptr inbounds i32, i32* %13, i64 %31\l  store i32 %8, i32* %32, align 4, !tbaa !5\l  %33 = add nuw nsw i64 %31, 1\l  %34 = icmp eq i64 %33, %24\l  br i1 %34, label %35, label %30, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x1bbdf60:s0 -> Node0x1bbdfb0;
	Node0x1bbdf60:s1 -> Node0x1bbdf60;
	Node0x1bbdfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%35:\l35:                                               \l  %36 = icmp eq i8* %12, null\l  br i1 %36, label %139, label %37\l|{<s0>T|<s1>F}}"];
	Node0x1bbdfb0:s0 -> Node0x1bbe730;
	Node0x1bbdfb0:s1 -> Node0x1bbe000;
	Node0x1bbe000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%37:\l37:                                               \l  %38 = phi i32 [ %137, %136 ], [ 0, %35 ]\l  %39 = phi i32* [ %121, %136 ], [ %13, %35 ]\l  %40 = load i32, i32* @ncol, align 4, !tbaa !5\l  %41 = sext i32 %40 to i64\l  br label %42\l}"];
	Node0x1bbe000 -> Node0x1bbe050;
	Node0x1bbe050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%42:\l42:                                               \l  %43 = phi %struct._play* [ %7, %37 ], [ %63, %61 ]\l  %44 = getelementptr inbounds %struct._play, %struct._play* %43, i64 0, i32 1\l  %45 = load i32*, i32** %44, align 8, !tbaa !13\l  br label %46\l}"];
	Node0x1bbe050 -> Node0x1bbe0a0;
	Node0x1bbe0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%46:\l46:                                               \l  %47 = phi i64 [ %48, %50 ], [ %41, %42 ]\l  %48 = add nsw i64 %47, -1\l  %49 = icmp eq i64 %47, 0\l  br i1 %49, label %58, label %50\l|{<s0>T|<s1>F}}"];
	Node0x1bbe0a0:s0 -> Node0x1bbe190;
	Node0x1bbe0a0:s1 -> Node0x1bbe0f0;
	Node0x1bbe0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds i32, i32* %45, i64 %48\l  %52 = load i32, i32* %51, align 4, !tbaa !5\l  %53 = getelementptr inbounds i32, i32* %39, i64 %48\l  %54 = load i32, i32* %53, align 4, !tbaa !5\l  %55 = icmp eq i32 %52, %54\l  br i1 %55, label %46, label %56, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x1bbe0f0:s0 -> Node0x1bbe0a0;
	Node0x1bbe0f0:s1 -> Node0x1bbe140;
	Node0x1bbe140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%56:\l56:                                               \l  %57 = trunc i64 %47 to i32\l  br label %58\l}"];
	Node0x1bbe140 -> Node0x1bbe190;
	Node0x1bbe190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%58:\l58:                                               \l  %59 = phi i32 [ %57, %56 ], [ 0, %46 ]\l  %60 = icmp sgt i32 %59, 0\l  br i1 %60, label %61, label %64\l|{<s0>T|<s1>F}}"];
	Node0x1bbe190:s0 -> Node0x1bbe1e0;
	Node0x1bbe190:s1 -> Node0x1bbe230;
	Node0x1bbe1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%61:\l61:                                               \l  %62 = getelementptr inbounds %struct._play, %struct._play* %43, i64 0, i32 3\l  %63 = load %struct._play*, %struct._play** %62, align 8, !tbaa !17\l  br label %42, !llvm.loop !18\l}"];
	Node0x1bbe1e0 -> Node0x1bbe050;
	Node0x1bbe230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%64:\l64:                                               \l  %65 = getelementptr inbounds %struct._play, %struct._play* %43, i64 0, i32 2\l  %66 = load %struct._list*, %struct._list** %65, align 8, !tbaa !19\l  %67 = icmp eq %struct._list* %66, null\l  br i1 %67, label %120, label %68\l|{<s0>T|<s1>F}}"];
	Node0x1bbe230:s0 -> Node0x1bbe5f0;
	Node0x1bbe230:s1 -> Node0x1bbe280;
	Node0x1bbe280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%68:\l68:                                               \l  %69 = phi %struct._list* [ %71, %97 ], [ %66, %64 ]\l  %70 = getelementptr inbounds %struct._list, %struct._list* %69, i64 0, i32 1\l  %71 = load %struct._list*, %struct._list** %70, align 8, !tbaa !20\l  %72 = icmp eq %struct._list* %71, null\l  br i1 %72, label %101, label %73\l|{<s0>T|<s1>F}}"];
	Node0x1bbe280:s0 -> Node0x1bbe500;
	Node0x1bbe280:s1 -> Node0x1bbe2d0;
	Node0x1bbe2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%73:\l73:                                               \l  %74 = getelementptr inbounds %struct._list, %struct._list* %69, i64 0, i32 0\l  %75 = load i32*, i32** %74, align 8, !tbaa !22\l  br label %76\l}"];
	Node0x1bbe2d0 -> Node0x1bbe320;
	Node0x1bbe320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%76:\l76:                                               \l  %77 = phi %struct._play** [ @game_tree, %73 ], [ %96, %93 ]\l  %78 = load %struct._play*, %struct._play** %77, align 8, !tbaa !23\l  %79 = getelementptr inbounds %struct._play, %struct._play* %78, i64 0, i32 1\l  %80 = load i32*, i32** %79, align 8, !tbaa !13\l  br label %81\l}"];
	Node0x1bbe320 -> Node0x1bbe370;
	Node0x1bbe370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i64 [ %83, %85 ], [ %41, %76 ]\l  %83 = add nsw i64 %82, -1\l  %84 = icmp eq i64 %82, 0\l  br i1 %84, label %93, label %85\l|{<s0>T|<s1>F}}"];
	Node0x1bbe370:s0 -> Node0x1bbe460;
	Node0x1bbe370:s1 -> Node0x1bbe3c0;
	Node0x1bbe3c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = getelementptr inbounds i32, i32* %80, i64 %83\l  %87 = load i32, i32* %86, align 4, !tbaa !5\l  %88 = getelementptr inbounds i32, i32* %75, i64 %83\l  %89 = load i32, i32* %88, align 4, !tbaa !5\l  %90 = icmp eq i32 %87, %89\l  br i1 %90, label %81, label %91, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x1bbe3c0:s0 -> Node0x1bbe370;
	Node0x1bbe3c0:s1 -> Node0x1bbe410;
	Node0x1bbe410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%91:\l91:                                               \l  %92 = trunc i64 %82 to i32\l  br label %93\l}"];
	Node0x1bbe410 -> Node0x1bbe460;
	Node0x1bbe460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%93:\l93:                                               \l  %94 = phi i32 [ %92, %91 ], [ 0, %81 ]\l  %95 = icmp sgt i32 %94, 0\l  %96 = getelementptr inbounds %struct._play, %struct._play* %78, i64 0, i32 3\l  br i1 %95, label %76, label %97, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x1bbe460:s0 -> Node0x1bbe320;
	Node0x1bbe460:s1 -> Node0x1bbe4b0;
	Node0x1bbe4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%97:\l97:                                               \l  %98 = getelementptr inbounds %struct._play, %struct._play* %78, i64 0, i32 0\l  %99 = load i32, i32* %98, align 8, !tbaa !25\l  %100 = icmp eq i32 %99, 0\l  br i1 %100, label %101, label %68, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x1bbe4b0:s0 -> Node0x1bbe500;
	Node0x1bbe4b0:s1 -> Node0x1bbe280;
	Node0x1bbe500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%101:\l101:                                              \l  %102 = getelementptr inbounds %struct._list, %struct._list* %69, i64 0, i32 0\l  %103 = load i32*, i32** %102, align 8, !tbaa !22\l  %104 = shl nsw i64 %41, 2\l  %105 = call noalias i8* @malloc(i64 noundef %104) #11\l  %106 = icmp eq i32 %40, 0\l  br i1 %106, label %118, label %107\l|{<s0>T|<s1>F}}"];
	Node0x1bbe500:s0 -> Node0x1bbe5a0;
	Node0x1bbe500:s1 -> Node0x1bbe550;
	Node0x1bbe550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%107:\l107:                                              \l  %108 = add i32 %40, -1\l  %109 = sext i32 %108 to i64\l  %110 = zext i32 %108 to i64\l  %111 = sub nsw i64 %109, %110\l  %112 = shl nsw i64 %111, 2\l  %113 = getelementptr i8, i8* %105, i64 %112\l  %114 = getelementptr i32, i32* %103, i64 %111\l  %115 = bitcast i32* %114 to i8*\l  %116 = zext i32 %40 to i64\l  %117 = shl nuw nsw i64 %116, 2\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %115, i64\l... %117, i1 false) #11, !tbaa !5\l  br label %118\l}"];
	Node0x1bbe550 -> Node0x1bbe5a0;
	Node0x1bbe5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%118:\l118:                                              \l  %119 = bitcast i8* %105 to i32*\l  br label %120\l}"];
	Node0x1bbe5a0 -> Node0x1bbe5f0;
	Node0x1bbe5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%120:\l120:                                              \l  %121 = phi i32* [ %119, %118 ], [ null, %64 ]\l  %122 = icmp eq i32* %121, null\l  br i1 %122, label %136, label %123\l|{<s0>T|<s1>F}}"];
	Node0x1bbe5f0:s0 -> Node0x1bbe6e0;
	Node0x1bbe5f0:s1 -> Node0x1bbe640;
	Node0x1bbe640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%123:\l123:                                              \l  %124 = phi i64 [ %130, %123 ], [ 0, %120 ]\l  %125 = getelementptr inbounds i32, i32* %121, i64 %124\l  %126 = load i32, i32* %125, align 4, !tbaa !5\l  %127 = getelementptr inbounds i32, i32* %39, i64 %124\l  %128 = load i32, i32* %127, align 4, !tbaa !5\l  %129 = icmp eq i32 %126, %128\l  %130 = add nuw i64 %124, 1\l  br i1 %129, label %123, label %131, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x1bbe640:s0 -> Node0x1bbe640;
	Node0x1bbe640:s1 -> Node0x1bbe690;
	Node0x1bbe690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%131:\l131:                                              \l  %132 = trunc i64 %124 to i32\l  %133 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i32\l... noundef %38, i32 noundef %126, i32 noundef %132)\l  %134 = sub nsw i32 1, %38\l  %135 = bitcast i32* %39 to i8*\l  call void @free(i8* noundef %135) #11\l  br label %136\l}"];
	Node0x1bbe690 -> Node0x1bbe6e0;
	Node0x1bbe6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%136:\l136:                                              \l  %137 = phi i32 [ %134, %131 ], [ %38, %120 ]\l  %138 = icmp eq i32* %121, null\l  br i1 %138, label %139, label %37, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x1bbe6e0:s0 -> Node0x1bbe730;
	Node0x1bbe6e0:s1 -> Node0x1bbe000;
	Node0x1bbe730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%139:\l139:                                              \l  %140 = phi i32 [ 0, %35 ], [ %137, %136 ]\l  call void @dump_play(%struct._play* noundef %7)\l  %141 = sub nsw i32 1, %140\l  %142 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i32\l... noundef %141)\l  ret i32 0\l}"];
}

digraph "CFG for 'make_play' function" {
	label="CFG for 'make_play' function";

	Node0x17f1ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%1:\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  store i32 %0, i32* %2, align 4, !tbaa !5\l  %4 = bitcast i32* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11\l  %5 = tail call noalias dereferenceable_or_null(32) i8* @malloc(i64 noundef\l... 32) #11\l  %6 = bitcast i8* %5 to %struct._play*\l  store %struct._play* null, %struct._play** @game_tree, align 8, !tbaa !9\l  %7 = load i32, i32* @ncol, align 4, !tbaa !5\l  %8 = sext i32 %7 to i64\l  %9 = shl nsw i64 %8, 2\l  %10 = tail call noalias i8* @malloc(i64 noundef %9) #11\l  %11 = bitcast i8* %10 to i32*\l  %12 = icmp eq i32 %7, 0\l  br i1 %12, label %183, label %13\l|{<s0>T|<s1>F}}"];
	Node0x17f1ff0:s0 -> Node0x17deb50;
	Node0x17f1ff0:s1 -> Node0x17de380;
	Node0x17de380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%13:\l13:                                               \l  %14 = zext i32 %7 to i64\l  %15 = shl nuw nsw i64 %14, 2\l  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 %15, i1 false),\l... !tbaa !5\l  %16 = load i32, i32* %11, align 4, !tbaa !5\l  %17 = add i32 %16, -1\l  store i32 %17, i32* %11, align 4, !tbaa !5\l  br label %18\l}"];
	Node0x17de380 -> Node0x17de3d0;
	Node0x17de3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%18:\l18:                                               \l  %19 = phi %struct._play* [ %181, %178 ], [ %6, %13 ]\l  %20 = phi i32* [ %180, %178 ], [ %11, %13 ]\l  br label %21\l}"];
	Node0x17de3d0 -> Node0x17de420;
	Node0x17de420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i64 [ 0, %18 ], [ %28, %27 ]\l  %23 = getelementptr inbounds i32, i32* %20, i64 %22\l  %24 = load i32, i32* %23, align 4, !tbaa !5\l  %25 = load i32, i32* @nrow, align 4, !tbaa !5\l  %26 = icmp eq i32 %24, %25\l  br i1 %26, label %27, label %32\l|{<s0>T|<s1>F}}"];
	Node0x17de420:s0 -> Node0x17de470;
	Node0x17de420:s1 -> Node0x17de4c0;
	Node0x17de470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  store i32 0, i32* %23, align 4, !tbaa !5\l  %28 = add nuw i64 %22, 1\l  %29 = load i32, i32* @ncol, align 4, !tbaa !5\l  %30 = zext i32 %29 to i64\l  %31 = icmp eq i64 %28, %30\l  br i1 %31, label %183, label %21, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x17de470:s0 -> Node0x17deb50;
	Node0x17de470:s1 -> Node0x17de420;
	Node0x17de4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%32:\l32:                                               \l  %33 = add nsw i32 %24, 1\l  store i32 %33, i32* %23, align 4, !tbaa !5\l  %34 = load i32, i32* @ncol, align 4, !tbaa !5\l  %35 = icmp eq i32 %34, 0\l  br i1 %35, label %49, label %36\l|{<s0>T|<s1>F}}"];
	Node0x17de4c0:s0 -> Node0x17de600;
	Node0x17de4c0:s1 -> Node0x17de510;
	Node0x17de510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%36:\l36:                                               \l  %37 = load i32, i32* @nrow, align 4, !tbaa !5\l  %38 = zext i32 %34 to i64\l  br label %39\l}"];
	Node0x17de510 -> Node0x17de560;
	Node0x17de560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%39:\l39:                                               \l  %40 = phi i64 [ 0, %36 ], [ %45, %39 ]\l  %41 = phi i32 [ %37, %36 ], [ %43, %39 ]\l  %42 = getelementptr inbounds i32, i32* %20, i64 %40\l  %43 = load i32, i32* %42, align 4, !tbaa !5\l  %44 = icmp sgt i32 %43, %41\l  %45 = add nuw nsw i64 %40, 1\l  %46 = icmp eq i64 %45, %38\l  %47 = select i1 %44, i1 true, i1 %46\l  br i1 %47, label %48, label %39, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x17de560:s0 -> Node0x17de5b0;
	Node0x17de560:s1 -> Node0x17de560;
	Node0x17de5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%48:\l48:                                               \l  br i1 %44, label %178, label %49\l|{<s0>T|<s1>F}}"];
	Node0x17de5b0:s0 -> Node0x17deb00;
	Node0x17de5b0:s1 -> Node0x17de600;
	Node0x17de600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%49:\l49:                                               \l  %50 = tail call noalias dereferenceable_or_null(32) i8* @malloc(i64 noundef\l... 32) #11\l  %51 = getelementptr inbounds %struct._play, %struct._play* %19, i64 0, i32 3\l  %52 = bitcast %struct._play** %51 to i8**\l  store i8* %50, i8** %52, align 8, !tbaa !14\l  %53 = load %struct._play*, %struct._play** @game_tree, align 8, !tbaa !9\l  %54 = icmp eq %struct._play* %53, null\l  %55 = bitcast i8* %50 to %struct._play*\l  br i1 %54, label %56, label %57\l|{<s0>T|<s1>F}}"];
	Node0x17de600:s0 -> Node0x17de650;
	Node0x17de600:s1 -> Node0x17de6a0;
	Node0x17de650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%56:\l56:                                               \l  store i8* %50, i8** bitcast (%struct._play** @game_tree to i8**), align 8,\l... !tbaa !9\l  br label %57\l}"];
	Node0x17de650 -> Node0x17de6a0;
	Node0x17de6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%57:\l57:                                               \l  %58 = sext i32 %34 to i64\l  %59 = shl nsw i64 %58, 2\l  %60 = tail call noalias i8* @malloc(i64 noundef %59) #11\l  br i1 %35, label %72, label %61\l|{<s0>T|<s1>F}}"];
	Node0x17de6a0:s0 -> Node0x17de740;
	Node0x17de6a0:s1 -> Node0x17de6f0;
	Node0x17de6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%61:\l61:                                               \l  %62 = add i32 %34, -1\l  %63 = sext i32 %62 to i64\l  %64 = zext i32 %62 to i64\l  %65 = sub nsw i64 %63, %64\l  %66 = shl nsw i64 %65, 2\l  %67 = getelementptr i8, i8* %60, i64 %66\l  %68 = getelementptr i32, i32* %20, i64 %65\l  %69 = bitcast i32* %68 to i8*\l  %70 = zext i32 %34 to i64\l  %71 = shl nuw nsw i64 %70, 2\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %69,\l... i64 %71, i1 false) #11, !tbaa !5\l  br label %72\l}"];
	Node0x17de6f0 -> Node0x17de740;
	Node0x17de740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%72:\l72:                                               \l  %73 = getelementptr inbounds %struct._play, %struct._play* %55, i64 0, i32 1\l  %74 = bitcast i32** %73 to i8**\l  store i8* %60, i8** %74, align 8, !tbaa !16\l  %75 = call %struct._list* @make_list(i32* noundef nonnull %20, i32* noundef\l... nonnull %3, i32* noundef nonnull %2)\l  %76 = load %struct._play*, %struct._play** %51, align 8, !tbaa !14\l  %77 = getelementptr inbounds %struct._play, %struct._play* %76, i64 0, i32 2\l  store %struct._list* %75, %struct._list** %77, align 8, !tbaa !17\l  %78 = load i32, i32* %3, align 4, !tbaa !5\l  %79 = getelementptr inbounds %struct._play, %struct._play* %76, i64 0, i32 0\l  store i32 %78, i32* %79, align 8, !tbaa !18\l  %80 = getelementptr inbounds %struct._play, %struct._play* %76, i64 0, i32 3\l  store %struct._play* null, %struct._play** %80, align 8, !tbaa !14\l  %81 = load %struct._play*, %struct._play** %51, align 8, !tbaa !14\l  %82 = load i32, i32* %2, align 4, !tbaa !5\l  %83 = icmp eq i32 %82, 2\l  br i1 %83, label %86, label %84\l|{<s0>T|<s1>F}}"];
	Node0x17de740:s0 -> Node0x17de7e0;
	Node0x17de740:s1 -> Node0x17de790;
	Node0x17de790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%84:\l84:                                               \l  %85 = load i32, i32* @ncol, align 4, !tbaa !5\l  br label %178\l}"];
	Node0x17de790 -> Node0x17deb00;
	Node0x17de7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%86:\l86:                                               \l  %87 = bitcast i32* %20 to i8*\l  tail call void @free(i8* noundef %87) #11\l  %88 = load i32, i32* @nrow, align 4, !tbaa !5\l  %89 = load i32, i32* @ncol, align 4, !tbaa !5\l  %90 = sext i32 %89 to i64\l  %91 = shl nsw i64 %90, 2\l  %92 = tail call noalias i8* @malloc(i64 noundef %91) #11\l  %93 = bitcast i8* %92 to i32*\l  %94 = icmp eq i32 %89, 0\l  br i1 %94, label %183, label %95\l|{<s0>T|<s1>F}}"];
	Node0x17de7e0:s0 -> Node0x17deb50;
	Node0x17de7e0:s1 -> Node0x17de830;
	Node0x17de830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%95:\l95:                                               \l  %96 = zext i32 %89 to i64\l  %97 = icmp ult i32 %89, 8\l  br i1 %97, label %171, label %98\l|{<s0>T|<s1>F}}"];
	Node0x17de830:s0 -> Node0x17dea60;
	Node0x17de830:s1 -> Node0x17de880;
	Node0x17de880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%98:\l98:                                               \l  %99 = and i64 %96, 4294967288\l  %100 = insertelement \<4 x i32\> poison, i32 %88, i64 0\l  %101 = shufflevector \<4 x i32\> %100, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %102 = insertelement \<4 x i32\> poison, i32 %88, i64 0\l  %103 = shufflevector \<4 x i32\> %102, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %104 = add nsw i64 %99, -8\l  %105 = lshr exact i64 %104, 3\l  %106 = add nuw nsw i64 %105, 1\l  %107 = and i64 %106, 7\l  %108 = icmp ult i64 %104, 56\l  br i1 %108, label %156, label %109\l|{<s0>T|<s1>F}}"];
	Node0x17de880:s0 -> Node0x17de970;
	Node0x17de880:s1 -> Node0x17de8d0;
	Node0x17de8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%109:\l109:                                              \l  %110 = and i64 %106, 4611686018427387896\l  br label %111\l}"];
	Node0x17de8d0 -> Node0x17de920;
	Node0x17de920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%111:\l111:                                              \l  %112 = phi i64 [ 0, %109 ], [ %153, %111 ]\l  %113 = phi i64 [ 0, %109 ], [ %154, %111 ]\l  %114 = getelementptr inbounds i32, i32* %93, i64 %112\l  %115 = bitcast i32* %114 to \<4 x i32\>*\l  store \<4 x i32\> %101, \<4 x i32\>* %115, align 4, !tbaa !5\l  %116 = getelementptr inbounds i32, i32* %114, i64 4\l  %117 = bitcast i32* %116 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %117, align 4, !tbaa !5\l  %118 = or i64 %112, 8\l  %119 = getelementptr inbounds i32, i32* %93, i64 %118\l  %120 = bitcast i32* %119 to \<4 x i32\>*\l  store \<4 x i32\> %101, \<4 x i32\>* %120, align 4, !tbaa !5\l  %121 = getelementptr inbounds i32, i32* %119, i64 4\l  %122 = bitcast i32* %121 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %122, align 4, !tbaa !5\l  %123 = or i64 %112, 16\l  %124 = getelementptr inbounds i32, i32* %93, i64 %123\l  %125 = bitcast i32* %124 to \<4 x i32\>*\l  store \<4 x i32\> %101, \<4 x i32\>* %125, align 4, !tbaa !5\l  %126 = getelementptr inbounds i32, i32* %124, i64 4\l  %127 = bitcast i32* %126 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %127, align 4, !tbaa !5\l  %128 = or i64 %112, 24\l  %129 = getelementptr inbounds i32, i32* %93, i64 %128\l  %130 = bitcast i32* %129 to \<4 x i32\>*\l  store \<4 x i32\> %101, \<4 x i32\>* %130, align 4, !tbaa !5\l  %131 = getelementptr inbounds i32, i32* %129, i64 4\l  %132 = bitcast i32* %131 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %132, align 4, !tbaa !5\l  %133 = or i64 %112, 32\l  %134 = getelementptr inbounds i32, i32* %93, i64 %133\l  %135 = bitcast i32* %134 to \<4 x i32\>*\l  store \<4 x i32\> %101, \<4 x i32\>* %135, align 4, !tbaa !5\l  %136 = getelementptr inbounds i32, i32* %134, i64 4\l  %137 = bitcast i32* %136 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %137, align 4, !tbaa !5\l  %138 = or i64 %112, 40\l  %139 = getelementptr inbounds i32, i32* %93, i64 %138\l  %140 = bitcast i32* %139 to \<4 x i32\>*\l  store \<4 x i32\> %101, \<4 x i32\>* %140, align 4, !tbaa !5\l  %141 = getelementptr inbounds i32, i32* %139, i64 4\l  %142 = bitcast i32* %141 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %142, align 4, !tbaa !5\l  %143 = or i64 %112, 48\l  %144 = getelementptr inbounds i32, i32* %93, i64 %143\l  %145 = bitcast i32* %144 to \<4 x i32\>*\l  store \<4 x i32\> %101, \<4 x i32\>* %145, align 4, !tbaa !5\l  %146 = getelementptr inbounds i32, i32* %144, i64 4\l  %147 = bitcast i32* %146 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %147, align 4, !tbaa !5\l  %148 = or i64 %112, 56\l  %149 = getelementptr inbounds i32, i32* %93, i64 %148\l  %150 = bitcast i32* %149 to \<4 x i32\>*\l  store \<4 x i32\> %101, \<4 x i32\>* %150, align 4, !tbaa !5\l  %151 = getelementptr inbounds i32, i32* %149, i64 4\l  %152 = bitcast i32* %151 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %152, align 4, !tbaa !5\l  %153 = add nuw i64 %112, 64\l  %154 = add nuw i64 %113, 8\l  %155 = icmp eq i64 %154, %110\l  br i1 %155, label %156, label %111, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x17de920:s0 -> Node0x17de970;
	Node0x17de920:s1 -> Node0x17de920;
	Node0x17de970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%156:\l156:                                              \l  %157 = phi i64 [ 0, %98 ], [ %153, %111 ]\l  %158 = icmp eq i64 %107, 0\l  br i1 %158, label %169, label %159\l|{<s0>T|<s1>F}}"];
	Node0x17de970:s0 -> Node0x17dea10;
	Node0x17de970:s1 -> Node0x17de9c0;
	Node0x17de9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%159:\l159:                                              \l  %160 = phi i64 [ %166, %159 ], [ %157, %156 ]\l  %161 = phi i64 [ %167, %159 ], [ 0, %156 ]\l  %162 = getelementptr inbounds i32, i32* %93, i64 %160\l  %163 = bitcast i32* %162 to \<4 x i32\>*\l  store \<4 x i32\> %101, \<4 x i32\>* %163, align 4, !tbaa !5\l  %164 = getelementptr inbounds i32, i32* %162, i64 4\l  %165 = bitcast i32* %164 to \<4 x i32\>*\l  store \<4 x i32\> %103, \<4 x i32\>* %165, align 4, !tbaa !5\l  %166 = add nuw i64 %160, 8\l  %167 = add i64 %161, 1\l  %168 = icmp eq i64 %167, %107\l  br i1 %168, label %169, label %159, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x17de9c0:s0 -> Node0x17dea10;
	Node0x17de9c0:s1 -> Node0x17de9c0;
	Node0x17dea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%169:\l169:                                              \l  %170 = icmp eq i64 %99, %96\l  br i1 %170, label %178, label %171\l|{<s0>T|<s1>F}}"];
	Node0x17dea10:s0 -> Node0x17deb00;
	Node0x17dea10:s1 -> Node0x17dea60;
	Node0x17dea60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%171:\l171:                                              \l  %172 = phi i64 [ 0, %95 ], [ %99, %169 ]\l  br label %173\l}"];
	Node0x17dea60 -> Node0x17deab0;
	Node0x17deab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%173:\l173:                                              \l  %174 = phi i64 [ %176, %173 ], [ %172, %171 ]\l  %175 = getelementptr inbounds i32, i32* %93, i64 %174\l  store i32 %88, i32* %175, align 4, !tbaa !5\l  %176 = add nuw nsw i64 %174, 1\l  %177 = icmp eq i64 %176, %96\l  br i1 %177, label %178, label %173, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x17deab0:s0 -> Node0x17deb00;
	Node0x17deab0:s1 -> Node0x17deab0;
	Node0x17deb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%178:\l178:                                              \l  %179 = phi i32 [ %85, %84 ], [ 1, %48 ], [ 1, %169 ], [ 1, %173 ]\l  %180 = phi i32* [ %20, %84 ], [ %20, %48 ], [ %93, %169 ], [ %93, %173 ]\l  %181 = phi %struct._play* [ %81, %84 ], [ %19, %48 ], [ %81, %169 ], [ %81,\l... %173 ]\l  %182 = icmp eq i32 %179, 0\l  br i1 %182, label %183, label %18, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x17deb00:s0 -> Node0x17deb50;
	Node0x17deb00:s1 -> Node0x17de3d0;
	Node0x17deb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%183:\l183:                                              \l  %184 = getelementptr inbounds %struct._play, %struct._play* %6, i64 0, i32 3\l  %185 = load %struct._play*, %struct._play** %184, align 8, !tbaa !14\l  tail call void @free(i8* noundef %5) #11\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11\l  ret %struct._play* %185\l}"];
}

digraph "CFG for 'nqueens' function" {
	label="CFG for 'nqueens' function";

	Node0x2399280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%5:\l  %6 = icmp eq i32 %0, %1\l  br i1 %6, label %157, label %7\l|{<s0>T|<s1>F}}"];
	Node0x2399280:s0 -> Node0x23a5c80;
	Node0x2399280:s1 -> Node0x23a4b10;
	Node0x23a4b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%7:\l7:                                                \l  store i32 0, i32* %3, align 4, !tbaa !5\l  %8 = sext i32 %0 to i64\l  %9 = shl nsw i64 %8, 2\l  %10 = alloca i32, i64 %8, align 16\l  %11 = bitcast i32* %10 to i8*\l  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 %9, i1\l... false)\l  %12 = icmp sgt i32 %0, 0\l  br i1 %12, label %13, label %159\l|{<s0>T|<s1>F}}"];
	Node0x23a4b10:s0 -> Node0x23a5640;
	Node0x23a4b10:s1 -> Node0x23a5cd0;
	Node0x23a5640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%13:\l13:                                               \l  %14 = sext i32 %1 to i64\l  %15 = add nsw i32 %1, 1\l  %16 = icmp sgt i32 %1, -1\l  %17 = zext i32 %15 to i64\l  %18 = zext i32 %0 to i64\l  br label %109\l}"];
	Node0x23a5640 -> Node0x23a5960;
	Node0x23a5690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%19:\l19:                                               \l  br i1 %12, label %20, label %159\l|{<s0>T|<s1>F}}"];
	Node0x23a5690:s0 -> Node0x23a56e0;
	Node0x23a5690:s1 -> Node0x23a5cd0;
	Node0x23a56e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%20:\l20:                                               \l  %21 = load i32, i32* %3, align 4, !tbaa !5\l  %22 = zext i32 %0 to i64\l  %23 = icmp ult i32 %0, 8\l  br i1 %23, label %106, label %24\l|{<s0>T|<s1>F}}"];
	Node0x23a56e0:s0 -> Node0x23a5910;
	Node0x23a56e0:s1 -> Node0x23a5730;
	Node0x23a5730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%24:\l24:                                               \l  %25 = and i64 %18, 4294967288\l  %26 = insertelement \<4 x i32\> \<i32 poison, i32 0, i32 0, i32 0\>, i32 %21,\l... i64 0\l  %27 = add nsw i64 %25, -8\l  %28 = lshr exact i64 %27, 3\l  %29 = add nuw nsw i64 %28, 1\l  %30 = and i64 %29, 3\l  %31 = icmp ult i64 %27, 24\l  br i1 %31, label %77, label %32\l|{<s0>T|<s1>F}}"];
	Node0x23a5730:s0 -> Node0x23a5820;
	Node0x23a5730:s1 -> Node0x23a5780;
	Node0x23a5780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%32:\l32:                                               \l  %33 = and i64 %29, 4611686018427387900\l  br label %34\l}"];
	Node0x23a5780 -> Node0x23a57d0;
	Node0x23a57d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%34:\l34:                                               \l  %35 = phi i64 [ 0, %32 ], [ %74, %34 ]\l  %36 = phi \<4 x i32\> [ %26, %32 ], [ %72, %34 ]\l  %37 = phi \<4 x i32\> [ zeroinitializer, %32 ], [ %73, %34 ]\l  %38 = phi i64 [ 0, %32 ], [ %75, %34 ]\l  %39 = getelementptr inbounds i32, i32* %10, i64 %35\l  %40 = bitcast i32* %39 to \<4 x i32\>*\l  %41 = load \<4 x i32\>, \<4 x i32\>* %40, align 16, !tbaa !5\l  %42 = getelementptr inbounds i32, i32* %39, i64 4\l  %43 = bitcast i32* %42 to \<4 x i32\>*\l  %44 = load \<4 x i32\>, \<4 x i32\>* %43, align 16, !tbaa !5\l  %45 = add \<4 x i32\> %36, %41\l  %46 = add \<4 x i32\> %37, %44\l  %47 = or i64 %35, 8\l  %48 = getelementptr inbounds i32, i32* %10, i64 %47\l  %49 = bitcast i32* %48 to \<4 x i32\>*\l  %50 = load \<4 x i32\>, \<4 x i32\>* %49, align 16, !tbaa !5\l  %51 = getelementptr inbounds i32, i32* %48, i64 4\l  %52 = bitcast i32* %51 to \<4 x i32\>*\l  %53 = load \<4 x i32\>, \<4 x i32\>* %52, align 16, !tbaa !5\l  %54 = add \<4 x i32\> %45, %50\l  %55 = add \<4 x i32\> %46, %53\l  %56 = or i64 %35, 16\l  %57 = getelementptr inbounds i32, i32* %10, i64 %56\l  %58 = bitcast i32* %57 to \<4 x i32\>*\l  %59 = load \<4 x i32\>, \<4 x i32\>* %58, align 16, !tbaa !5\l  %60 = getelementptr inbounds i32, i32* %57, i64 4\l  %61 = bitcast i32* %60 to \<4 x i32\>*\l  %62 = load \<4 x i32\>, \<4 x i32\>* %61, align 16, !tbaa !5\l  %63 = add \<4 x i32\> %54, %59\l  %64 = add \<4 x i32\> %55, %62\l  %65 = or i64 %35, 24\l  %66 = getelementptr inbounds i32, i32* %10, i64 %65\l  %67 = bitcast i32* %66 to \<4 x i32\>*\l  %68 = load \<4 x i32\>, \<4 x i32\>* %67, align 16, !tbaa !5\l  %69 = getelementptr inbounds i32, i32* %66, i64 4\l  %70 = bitcast i32* %69 to \<4 x i32\>*\l  %71 = load \<4 x i32\>, \<4 x i32\>* %70, align 16, !tbaa !5\l  %72 = add \<4 x i32\> %63, %68\l  %73 = add \<4 x i32\> %64, %71\l  %74 = add nuw i64 %35, 32\l  %75 = add i64 %38, 4\l  %76 = icmp eq i64 %75, %33\l  br i1 %76, label %77, label %34, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x23a57d0:s0 -> Node0x23a5820;
	Node0x23a57d0:s1 -> Node0x23a57d0;
	Node0x23a5820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%77:\l77:                                               \l  %78 = phi \<4 x i32\> [ undef, %24 ], [ %72, %34 ]\l  %79 = phi \<4 x i32\> [ undef, %24 ], [ %73, %34 ]\l  %80 = phi i64 [ 0, %24 ], [ %74, %34 ]\l  %81 = phi \<4 x i32\> [ %26, %24 ], [ %72, %34 ]\l  %82 = phi \<4 x i32\> [ zeroinitializer, %24 ], [ %73, %34 ]\l  %83 = icmp eq i64 %30, 0\l  br i1 %83, label %100, label %84\l|{<s0>T|<s1>F}}"];
	Node0x23a5820:s0 -> Node0x23a58c0;
	Node0x23a5820:s1 -> Node0x23a5870;
	Node0x23a5870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%84:\l84:                                               \l  %85 = phi i64 [ %97, %84 ], [ %80, %77 ]\l  %86 = phi \<4 x i32\> [ %95, %84 ], [ %81, %77 ]\l  %87 = phi \<4 x i32\> [ %96, %84 ], [ %82, %77 ]\l  %88 = phi i64 [ %98, %84 ], [ 0, %77 ]\l  %89 = getelementptr inbounds i32, i32* %10, i64 %85\l  %90 = bitcast i32* %89 to \<4 x i32\>*\l  %91 = load \<4 x i32\>, \<4 x i32\>* %90, align 16, !tbaa !5\l  %92 = getelementptr inbounds i32, i32* %89, i64 4\l  %93 = bitcast i32* %92 to \<4 x i32\>*\l  %94 = load \<4 x i32\>, \<4 x i32\>* %93, align 16, !tbaa !5\l  %95 = add \<4 x i32\> %86, %91\l  %96 = add \<4 x i32\> %87, %94\l  %97 = add nuw i64 %85, 8\l  %98 = add i64 %88, 1\l  %99 = icmp eq i64 %98, %30\l  br i1 %99, label %100, label %84, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x23a5870:s0 -> Node0x23a58c0;
	Node0x23a5870:s1 -> Node0x23a5870;
	Node0x23a58c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%100:\l100:                                              \l  %101 = phi \<4 x i32\> [ %78, %77 ], [ %95, %84 ]\l  %102 = phi \<4 x i32\> [ %79, %77 ], [ %96, %84 ]\l  %103 = add \<4 x i32\> %102, %101\l  %104 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %103)\l  %105 = icmp eq i64 %25, %18\l  br i1 %105, label %157, label %106\l|{<s0>T|<s1>F}}"];
	Node0x23a58c0:s0 -> Node0x23a5c80;
	Node0x23a58c0:s1 -> Node0x23a5910;
	Node0x23a5910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%106:\l106:                                              \l  %107 = phi i64 [ 0, %20 ], [ %25, %100 ]\l  %108 = phi i32 [ %21, %20 ], [ %104, %100 ]\l  br label %149\l}"];
	Node0x23a5910 -> Node0x23a5c30;
	Node0x23a5960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%109:\l109:                                              \l  %110 = phi i64 [ 0, %13 ], [ %147, %146 ]\l  %111 = alloca i8, i64 %8, align 16\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %111, i8* align 1\l... %2, i64 %14, i1 false)\l  %112 = trunc i64 %110 to i8\l  %113 = getelementptr inbounds i8, i8* %111, i64 %14\l  store i8 %112, i8* %113, align 1, !tbaa !14\l  br i1 %16, label %117, label %144\l|{<s0>T|<s1>F}}"];
	Node0x23a5960:s0 -> Node0x23a5a00;
	Node0x23a5960:s1 -> Node0x23a5b90;
	Node0x23a59b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%114:\l114:                                              \l  %115 = add nuw nsw i64 %119, 1\l  %116 = icmp eq i64 %122, %17\l  br i1 %116, label %144, label %117, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x23a59b0:s0 -> Node0x23a5b90;
	Node0x23a59b0:s1 -> Node0x23a5a00;
	Node0x23a5a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%117:\l117:                                              \l  %118 = phi i64 [ %122, %114 ], [ 0, %109 ]\l  %119 = phi i64 [ %115, %114 ], [ 1, %109 ]\l  %120 = getelementptr inbounds i8, i8* %111, i64 %118\l  %121 = load i8, i8* %120, align 1, !tbaa !14\l  %122 = add nuw nsw i64 %118, 1\l  %123 = icmp ult i64 %122, %17\l  br i1 %123, label %124, label %114\l|{<s0>T|<s1>F}}"];
	Node0x23a5a00:s0 -> Node0x23a5a50;
	Node0x23a5a00:s1 -> Node0x23a59b0;
	Node0x23a5a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%124:\l124:                                              \l  %125 = sext i8 %121 to i32\l  %126 = trunc i64 %118 to i32\l  br label %129\l}"];
	Node0x23a5a50 -> Node0x23a5af0;
	Node0x23a5aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%127:\l127:                                              \l  %128 = icmp eq i64 %143, %17\l  br i1 %128, label %114, label %129, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x23a5aa0:s0 -> Node0x23a59b0;
	Node0x23a5aa0:s1 -> Node0x23a5af0;
	Node0x23a5af0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  %130 = phi i64 [ %119, %124 ], [ %143, %127 ]\l  %131 = getelementptr inbounds i8, i8* %111, i64 %130\l  %132 = load i8, i8* %131, align 1, !tbaa !14\l  %133 = sext i8 %132 to i32\l  %134 = icmp eq i8 %132, %121\l  br i1 %134, label %146, label %135\l|{<s0>T|<s1>F}}"];
	Node0x23a5af0:s0 -> Node0x23a5be0;
	Node0x23a5af0:s1 -> Node0x23a5b40;
	Node0x23a5b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%135:\l135:                                              \l  %136 = trunc i64 %130 to i32\l  %137 = sub nsw i32 %136, %126\l  %138 = sub nsw i32 %125, %137\l  %139 = icmp eq i32 %138, %133\l  %140 = add nsw i32 %137, %125\l  %141 = icmp eq i32 %140, %133\l  %142 = select i1 %139, i1 true, i1 %141\l  %143 = add nuw nsw i64 %130, 1\l  br i1 %142, label %146, label %127\l|{<s0>T|<s1>F}}"];
	Node0x23a5b40:s0 -> Node0x23a5be0;
	Node0x23a5b40:s1 -> Node0x23a5aa0;
	Node0x23a5b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%144:\l144:                                              \l  %145 = getelementptr inbounds i32, i32* %10, i64 %110\l  call void @nqueens(i32 noundef %0, i32 noundef %15, i8* noundef nonnull\l... %111, i32* noundef nonnull %145, i32 noundef %4)\l  br label %146\l}"];
	Node0x23a5b90 -> Node0x23a5be0;
	Node0x23a5be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%146:\l146:                                              \l  %147 = add nuw nsw i64 %110, 1\l  %148 = icmp eq i64 %147, %18\l  br i1 %148, label %19, label %109, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x23a5be0:s0 -> Node0x23a5690;
	Node0x23a5be0:s1 -> Node0x23a5960;
	Node0x23a5c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%149:\l149:                                              \l  %150 = phi i64 [ %155, %149 ], [ %107, %106 ]\l  %151 = phi i32 [ %154, %149 ], [ %108, %106 ]\l  %152 = getelementptr inbounds i32, i32* %10, i64 %150\l  %153 = load i32, i32* %152, align 4, !tbaa !5\l  %154 = add nsw i32 %151, %153\l  %155 = add nuw nsw i64 %150, 1\l  %156 = icmp eq i64 %155, %22\l  br i1 %156, label %157, label %149, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x23a5c30:s0 -> Node0x23a5c80;
	Node0x23a5c30:s1 -> Node0x23a5c30;
	Node0x23a5c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%157:\l157:                                              \l  %158 = phi i32 [ 1, %5 ], [ %104, %100 ], [ %154, %149 ]\l  store i32 %158, i32* %3, align 4, !tbaa !5\l  br label %159\l}"];
	Node0x23a5c80 -> Node0x23a5cd0;
	Node0x23a5cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%159:\l159:                                              \l  ret void\l}"];
}

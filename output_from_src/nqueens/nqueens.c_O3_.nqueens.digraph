digraph "CFG for 'nqueens' function" {
	label="CFG for 'nqueens' function";

	Node0xc672e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%5:\l  %6 = icmp eq i32 %0, %1\l  br i1 %6, label %165, label %7\l|{<s0>T|<s1>F}}"];
	Node0xc672e0:s0 -> Node0xc73d30;
	Node0xc672e0:s1 -> Node0xc72b70;
	Node0xc72b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%7:\l7:                                                \l  store i32 0, i32* %3, align 4, !tbaa !5\l  %8 = sext i32 %0 to i64\l  %9 = shl nsw i64 %8, 2\l  %10 = alloca i32, i64 %8, align 16\l  %11 = bitcast i32* %10 to i8*\l  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 %9, i1\l... false)\l  %12 = icmp sgt i32 %0, 0\l  br i1 %12, label %13, label %167\l|{<s0>T|<s1>F}}"];
	Node0xc72b70:s0 -> Node0xc736a0;
	Node0xc72b70:s1 -> Node0xc73d80;
	Node0xc736a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%13:\l13:                                               \l  %14 = sext i32 %1 to i64\l  %15 = add nsw i32 %1, 1\l  %16 = icmp sgt i32 %1, -1\l  %17 = zext i32 %15 to i64\l  %18 = zext i32 %0 to i64\l  br i1 %16, label %19, label %149\l|{<s0>T|<s1>F}}"];
	Node0xc736a0:s0 -> Node0xc736f0;
	Node0xc736a0:s1 -> Node0xc73c90;
	Node0xc736f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%19:\l19:                                               \l  %20 = phi i64 [ %55, %54 ], [ 0, %13 ]\l  %21 = alloca i8, i64 %8, align 16\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %21, i8* align 1\l... %2, i64 %14, i1 false)\l  %22 = trunc i64 %20 to i8\l  %23 = getelementptr inbounds i8, i8* %21, i64 %14\l  store i8 %22, i8* %23, align 1, !tbaa !9\l  br label %24\l}"];
	Node0xc736f0 -> Node0xc73740;
	Node0xc73740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%24:\l24:                                               \l  %25 = phi i64 [ 0, %19 ], [ %29, %51 ]\l  %26 = phi i64 [ 1, %19 ], [ %52, %51 ]\l  %27 = getelementptr inbounds i8, i8* %21, i64 %25\l  %28 = load i8, i8* %27, align 1, !tbaa !9\l  %29 = add nuw nsw i64 %25, 1\l  %30 = icmp ult i64 %29, %17\l  br i1 %30, label %31, label %51\l|{<s0>T|<s1>F}}"];
	Node0xc73740:s0 -> Node0xc73790;
	Node0xc73740:s1 -> Node0xc738d0;
	Node0xc73790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%31:\l31:                                               \l  %32 = sext i8 %28 to i32\l  %33 = trunc i64 %25 to i32\l  br label %34\l}"];
	Node0xc73790 -> Node0xc737e0;
	Node0xc737e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i64 [ %26, %31 ], [ %48, %49 ]\l  %36 = getelementptr inbounds i8, i8* %21, i64 %35\l  %37 = load i8, i8* %36, align 1, !tbaa !9\l  %38 = sext i8 %37 to i32\l  %39 = icmp eq i8 %37, %28\l  br i1 %39, label %54, label %40\l|{<s0>T|<s1>F}}"];
	Node0xc737e0:s0 -> Node0xc73920;
	Node0xc737e0:s1 -> Node0xc73830;
	Node0xc73830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = trunc i64 %35 to i32\l  %42 = sub nsw i32 %41, %33\l  %43 = sub nsw i32 %32, %42\l  %44 = icmp eq i32 %43, %38\l  %45 = add nsw i32 %42, %32\l  %46 = icmp eq i32 %45, %38\l  %47 = select i1 %44, i1 true, i1 %46\l  %48 = add nuw nsw i64 %35, 1\l  br i1 %47, label %54, label %49\l|{<s0>T|<s1>F}}"];
	Node0xc73830:s0 -> Node0xc73920;
	Node0xc73830:s1 -> Node0xc73880;
	Node0xc73880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%49:\l49:                                               \l  %50 = icmp eq i64 %48, %17\l  br i1 %50, label %51, label %34, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0xc73880:s0 -> Node0xc738d0;
	Node0xc73880:s1 -> Node0xc737e0;
	Node0xc738d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%51:\l51:                                               \l  %52 = add nuw nsw i64 %26, 1\l  %53 = icmp eq i64 %29, %17\l  br i1 %53, label %57, label %24, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0xc738d0:s0 -> Node0xc73970;
	Node0xc738d0:s1 -> Node0xc73740;
	Node0xc73920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%54:\l54:                                               \l  %55 = add nuw nsw i64 %20, 1\l  %56 = icmp eq i64 %55, %18\l  br i1 %56, label %59, label %19, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0xc73920:s0 -> Node0xc739c0;
	Node0xc73920:s1 -> Node0xc736f0;
	Node0xc73970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds i32, i32* %10, i64 %20\l  call void @nqueens(i32 noundef %0, i32 noundef %15, i8* noundef nonnull %21,\l... i32* noundef nonnull %58, i32 noundef %4)\l  br label %54\l}"];
	Node0xc73970 -> Node0xc73920;
	Node0xc739c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%59:\l59:                                               \l  br i1 %12, label %60, label %167\l|{<s0>T|<s1>F}}"];
	Node0xc739c0:s0 -> Node0xc73a10;
	Node0xc739c0:s1 -> Node0xc73d80;
	Node0xc73a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%60:\l60:                                               \l  %61 = load i32, i32* %3, align 4, !tbaa !5\l  %62 = zext i32 %0 to i64\l  %63 = icmp ult i32 %0, 8\l  br i1 %63, label %146, label %64\l|{<s0>T|<s1>F}}"];
	Node0xc73a10:s0 -> Node0xc73c40;
	Node0xc73a10:s1 -> Node0xc73a60;
	Node0xc73a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%64:\l64:                                               \l  %65 = and i64 %18, 4294967288\l  %66 = insertelement \<4 x i32\> \<i32 poison, i32 0, i32 0, i32 0\>, i32 %61,\l... i64 0\l  %67 = add nsw i64 %65, -8\l  %68 = lshr exact i64 %67, 3\l  %69 = add nuw nsw i64 %68, 1\l  %70 = and i64 %69, 3\l  %71 = icmp ult i64 %67, 24\l  br i1 %71, label %117, label %72\l|{<s0>T|<s1>F}}"];
	Node0xc73a60:s0 -> Node0xc73b50;
	Node0xc73a60:s1 -> Node0xc73ab0;
	Node0xc73ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%72:\l72:                                               \l  %73 = and i64 %69, 4611686018427387900\l  br label %74\l}"];
	Node0xc73ab0 -> Node0xc73b00;
	Node0xc73b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%74:\l74:                                               \l  %75 = phi i64 [ 0, %72 ], [ %114, %74 ]\l  %76 = phi \<4 x i32\> [ %66, %72 ], [ %112, %74 ]\l  %77 = phi \<4 x i32\> [ zeroinitializer, %72 ], [ %113, %74 ]\l  %78 = phi i64 [ 0, %72 ], [ %115, %74 ]\l  %79 = getelementptr inbounds i32, i32* %10, i64 %75\l  %80 = bitcast i32* %79 to \<4 x i32\>*\l  %81 = load \<4 x i32\>, \<4 x i32\>* %80, align 16, !tbaa !5\l  %82 = getelementptr inbounds i32, i32* %79, i64 4\l  %83 = bitcast i32* %82 to \<4 x i32\>*\l  %84 = load \<4 x i32\>, \<4 x i32\>* %83, align 16, !tbaa !5\l  %85 = add \<4 x i32\> %76, %81\l  %86 = add \<4 x i32\> %77, %84\l  %87 = or i64 %75, 8\l  %88 = getelementptr inbounds i32, i32* %10, i64 %87\l  %89 = bitcast i32* %88 to \<4 x i32\>*\l  %90 = load \<4 x i32\>, \<4 x i32\>* %89, align 16, !tbaa !5\l  %91 = getelementptr inbounds i32, i32* %88, i64 4\l  %92 = bitcast i32* %91 to \<4 x i32\>*\l  %93 = load \<4 x i32\>, \<4 x i32\>* %92, align 16, !tbaa !5\l  %94 = add \<4 x i32\> %85, %90\l  %95 = add \<4 x i32\> %86, %93\l  %96 = or i64 %75, 16\l  %97 = getelementptr inbounds i32, i32* %10, i64 %96\l  %98 = bitcast i32* %97 to \<4 x i32\>*\l  %99 = load \<4 x i32\>, \<4 x i32\>* %98, align 16, !tbaa !5\l  %100 = getelementptr inbounds i32, i32* %97, i64 4\l  %101 = bitcast i32* %100 to \<4 x i32\>*\l  %102 = load \<4 x i32\>, \<4 x i32\>* %101, align 16, !tbaa !5\l  %103 = add \<4 x i32\> %94, %99\l  %104 = add \<4 x i32\> %95, %102\l  %105 = or i64 %75, 24\l  %106 = getelementptr inbounds i32, i32* %10, i64 %105\l  %107 = bitcast i32* %106 to \<4 x i32\>*\l  %108 = load \<4 x i32\>, \<4 x i32\>* %107, align 16, !tbaa !5\l  %109 = getelementptr inbounds i32, i32* %106, i64 4\l  %110 = bitcast i32* %109 to \<4 x i32\>*\l  %111 = load \<4 x i32\>, \<4 x i32\>* %110, align 16, !tbaa !5\l  %112 = add \<4 x i32\> %103, %108\l  %113 = add \<4 x i32\> %104, %111\l  %114 = add nuw i64 %75, 32\l  %115 = add i64 %78, 4\l  %116 = icmp eq i64 %115, %73\l  br i1 %116, label %117, label %74, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0xc73b00:s0 -> Node0xc73b50;
	Node0xc73b00:s1 -> Node0xc73b00;
	Node0xc73b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%117:\l117:                                              \l  %118 = phi \<4 x i32\> [ undef, %64 ], [ %112, %74 ]\l  %119 = phi \<4 x i32\> [ undef, %64 ], [ %113, %74 ]\l  %120 = phi i64 [ 0, %64 ], [ %114, %74 ]\l  %121 = phi \<4 x i32\> [ %66, %64 ], [ %112, %74 ]\l  %122 = phi \<4 x i32\> [ zeroinitializer, %64 ], [ %113, %74 ]\l  %123 = icmp eq i64 %70, 0\l  br i1 %123, label %140, label %124\l|{<s0>T|<s1>F}}"];
	Node0xc73b50:s0 -> Node0xc73bf0;
	Node0xc73b50:s1 -> Node0xc73ba0;
	Node0xc73ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%124:\l124:                                              \l  %125 = phi i64 [ %137, %124 ], [ %120, %117 ]\l  %126 = phi \<4 x i32\> [ %135, %124 ], [ %121, %117 ]\l  %127 = phi \<4 x i32\> [ %136, %124 ], [ %122, %117 ]\l  %128 = phi i64 [ %138, %124 ], [ 0, %117 ]\l  %129 = getelementptr inbounds i32, i32* %10, i64 %125\l  %130 = bitcast i32* %129 to \<4 x i32\>*\l  %131 = load \<4 x i32\>, \<4 x i32\>* %130, align 16, !tbaa !5\l  %132 = getelementptr inbounds i32, i32* %129, i64 4\l  %133 = bitcast i32* %132 to \<4 x i32\>*\l  %134 = load \<4 x i32\>, \<4 x i32\>* %133, align 16, !tbaa !5\l  %135 = add \<4 x i32\> %126, %131\l  %136 = add \<4 x i32\> %127, %134\l  %137 = add nuw i64 %125, 8\l  %138 = add i64 %128, 1\l  %139 = icmp eq i64 %138, %70\l  br i1 %139, label %140, label %124, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0xc73ba0:s0 -> Node0xc73bf0;
	Node0xc73ba0:s1 -> Node0xc73ba0;
	Node0xc73bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%140:\l140:                                              \l  %141 = phi \<4 x i32\> [ %118, %117 ], [ %135, %124 ]\l  %142 = phi \<4 x i32\> [ %119, %117 ], [ %136, %124 ]\l  %143 = add \<4 x i32\> %142, %141\l  %144 = call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %143)\l  %145 = icmp eq i64 %65, %18\l  br i1 %145, label %165, label %146\l|{<s0>T|<s1>F}}"];
	Node0xc73bf0:s0 -> Node0xc73d30;
	Node0xc73bf0:s1 -> Node0xc73c40;
	Node0xc73c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%146:\l146:                                              \l  %147 = phi i64 [ 0, %60 ], [ %65, %140 ]\l  %148 = phi i32 [ %61, %60 ], [ %144, %140 ]\l  br label %157\l}"];
	Node0xc73c40 -> Node0xc73ce0;
	Node0xc73c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%149:\l149:                                              \l  %150 = phi i64 [ %155, %149 ], [ 0, %13 ]\l  %151 = alloca i8, i64 %8, align 16\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %151, i8* align 1\l... %2, i64 %14, i1 false)\l  %152 = trunc i64 %150 to i8\l  %153 = getelementptr inbounds i8, i8* %151, i64 %14\l  store i8 %152, i8* %153, align 1, !tbaa !9\l  %154 = getelementptr inbounds i32, i32* %10, i64 %150\l  call void @nqueens(i32 noundef %0, i32 noundef %15, i8* noundef nonnull\l... %151, i32* noundef nonnull %154, i32 noundef %4)\l  %155 = add nuw nsw i64 %150, 1\l  %156 = icmp eq i64 %155, %18\l  br i1 %156, label %59, label %149, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0xc73c90:s0 -> Node0xc739c0;
	Node0xc73c90:s1 -> Node0xc73c90;
	Node0xc73ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%157:\l157:                                              \l  %158 = phi i64 [ %163, %157 ], [ %147, %146 ]\l  %159 = phi i32 [ %162, %157 ], [ %148, %146 ]\l  %160 = getelementptr inbounds i32, i32* %10, i64 %158\l  %161 = load i32, i32* %160, align 4, !tbaa !5\l  %162 = add nsw i32 %159, %161\l  %163 = add nuw nsw i64 %158, 1\l  %164 = icmp eq i64 %163, %62\l  br i1 %164, label %165, label %157, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0xc73ce0:s0 -> Node0xc73d30;
	Node0xc73ce0:s1 -> Node0xc73ce0;
	Node0xc73d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%165:\l165:                                              \l  %166 = phi i32 [ 1, %5 ], [ %144, %140 ], [ %162, %157 ]\l  store i32 %166, i32* %3, align 4, !tbaa !5\l  br label %167\l}"];
	Node0xc73d30 -> Node0xc73d80;
	Node0xc73d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%167:\l167:                                              \l  ret void\l}"];
}

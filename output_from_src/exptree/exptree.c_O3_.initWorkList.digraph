digraph "CFG for 'initWorkList' function" {
	label="CFG for 'initWorkList' function";

	Node0x119bb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%3:\l  %4 = icmp sgt i32 %2, 0\l  br i1 %4, label %5, label %130\l|{<s0>T|<s1>F}}"];
	Node0x119bb80:s0 -> Node0x119bc50;
	Node0x119bb80:s1 -> Node0x119c010;
	Node0x119bc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%5:\l5:                                                \l  %6 = zext i32 %2 to i64\l  %7 = icmp ult i32 %2, 8\l  br i1 %7, label %93, label %8\l|{<s0>T|<s1>F}}"];
	Node0x119bc50:s0 -> Node0x119bed0;
	Node0x119bc50:s1 -> Node0x119bca0;
	Node0x119bca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%8:\l8:                                                \l  %9 = getelementptr i32, i32* %0, i64 %6\l  %10 = getelementptr i32, i32* %1, i64 %6\l  %11 = icmp ugt i32* %10, %0\l  %12 = icmp ugt i32* %9, %1\l  %13 = and i1 %11, %12\l  br i1 %13, label %93, label %14\l|{<s0>T|<s1>F}}"];
	Node0x119bca0:s0 -> Node0x119bed0;
	Node0x119bca0:s1 -> Node0x119bcf0;
	Node0x119bcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%14:\l14:                                               \l  %15 = and i64 %6, 4294967288\l  %16 = add nsw i64 %15, -8\l  %17 = lshr exact i64 %16, 3\l  %18 = add nuw nsw i64 %17, 1\l  %19 = and i64 %18, 3\l  %20 = icmp ult i64 %16, 24\l  br i1 %20, label %72, label %21\l|{<s0>T|<s1>F}}"];
	Node0x119bcf0:s0 -> Node0x119bde0;
	Node0x119bcf0:s1 -> Node0x119bd40;
	Node0x119bd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%21:\l21:                                               \l  %22 = and i64 %18, 4611686018427387900\l  br label %23\l}"];
	Node0x119bd40 -> Node0x119bd90;
	Node0x119bd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%23:\l23:                                               \l  %24 = phi i64 [ 0, %21 ], [ %69, %23 ]\l  %25 = phi i64 [ 0, %21 ], [ %70, %23 ]\l  %26 = getelementptr inbounds i32, i32* %1, i64 %24\l  %27 = bitcast i32* %26 to \<4 x i32\>*\l  %28 = load \<4 x i32\>, \<4 x i32\>* %27, align 4, !tbaa !5, !alias.scope !9\l  %29 = getelementptr inbounds i32, i32* %26, i64 4\l  %30 = bitcast i32* %29 to \<4 x i32\>*\l  %31 = load \<4 x i32\>, \<4 x i32\>* %30, align 4, !tbaa !5, !alias.scope !9\l  %32 = getelementptr inbounds i32, i32* %0, i64 %24\l  %33 = bitcast i32* %32 to \<4 x i32\>*\l  store \<4 x i32\> %28, \<4 x i32\>* %33, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %34 = getelementptr inbounds i32, i32* %32, i64 4\l  %35 = bitcast i32* %34 to \<4 x i32\>*\l  store \<4 x i32\> %31, \<4 x i32\>* %35, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %36 = or i64 %24, 8\l  %37 = getelementptr inbounds i32, i32* %1, i64 %36\l  %38 = bitcast i32* %37 to \<4 x i32\>*\l  %39 = load \<4 x i32\>, \<4 x i32\>* %38, align 4, !tbaa !5, !alias.scope !9\l  %40 = getelementptr inbounds i32, i32* %37, i64 4\l  %41 = bitcast i32* %40 to \<4 x i32\>*\l  %42 = load \<4 x i32\>, \<4 x i32\>* %41, align 4, !tbaa !5, !alias.scope !9\l  %43 = getelementptr inbounds i32, i32* %0, i64 %36\l  %44 = bitcast i32* %43 to \<4 x i32\>*\l  store \<4 x i32\> %39, \<4 x i32\>* %44, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %45 = getelementptr inbounds i32, i32* %43, i64 4\l  %46 = bitcast i32* %45 to \<4 x i32\>*\l  store \<4 x i32\> %42, \<4 x i32\>* %46, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %47 = or i64 %24, 16\l  %48 = getelementptr inbounds i32, i32* %1, i64 %47\l  %49 = bitcast i32* %48 to \<4 x i32\>*\l  %50 = load \<4 x i32\>, \<4 x i32\>* %49, align 4, !tbaa !5, !alias.scope !9\l  %51 = getelementptr inbounds i32, i32* %48, i64 4\l  %52 = bitcast i32* %51 to \<4 x i32\>*\l  %53 = load \<4 x i32\>, \<4 x i32\>* %52, align 4, !tbaa !5, !alias.scope !9\l  %54 = getelementptr inbounds i32, i32* %0, i64 %47\l  %55 = bitcast i32* %54 to \<4 x i32\>*\l  store \<4 x i32\> %50, \<4 x i32\>* %55, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %56 = getelementptr inbounds i32, i32* %54, i64 4\l  %57 = bitcast i32* %56 to \<4 x i32\>*\l  store \<4 x i32\> %53, \<4 x i32\>* %57, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %58 = or i64 %24, 24\l  %59 = getelementptr inbounds i32, i32* %1, i64 %58\l  %60 = bitcast i32* %59 to \<4 x i32\>*\l  %61 = load \<4 x i32\>, \<4 x i32\>* %60, align 4, !tbaa !5, !alias.scope !9\l  %62 = getelementptr inbounds i32, i32* %59, i64 4\l  %63 = bitcast i32* %62 to \<4 x i32\>*\l  %64 = load \<4 x i32\>, \<4 x i32\>* %63, align 4, !tbaa !5, !alias.scope !9\l  %65 = getelementptr inbounds i32, i32* %0, i64 %58\l  %66 = bitcast i32* %65 to \<4 x i32\>*\l  store \<4 x i32\> %61, \<4 x i32\>* %66, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %67 = getelementptr inbounds i32, i32* %65, i64 4\l  %68 = bitcast i32* %67 to \<4 x i32\>*\l  store \<4 x i32\> %64, \<4 x i32\>* %68, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %69 = add nuw i64 %24, 32\l  %70 = add i64 %25, 4\l  %71 = icmp eq i64 %70, %22\l  br i1 %71, label %72, label %23, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x119bd90:s0 -> Node0x119bde0;
	Node0x119bd90:s1 -> Node0x119bd90;
	Node0x119bde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%72:\l72:                                               \l  %73 = phi i64 [ 0, %14 ], [ %69, %23 ]\l  %74 = icmp eq i64 %19, 0\l  br i1 %74, label %91, label %75\l|{<s0>T|<s1>F}}"];
	Node0x119bde0:s0 -> Node0x119be80;
	Node0x119bde0:s1 -> Node0x119be30;
	Node0x119be30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%75:\l75:                                               \l  %76 = phi i64 [ %88, %75 ], [ %73, %72 ]\l  %77 = phi i64 [ %89, %75 ], [ 0, %72 ]\l  %78 = getelementptr inbounds i32, i32* %1, i64 %76\l  %79 = bitcast i32* %78 to \<4 x i32\>*\l  %80 = load \<4 x i32\>, \<4 x i32\>* %79, align 4, !tbaa !5, !alias.scope !9\l  %81 = getelementptr inbounds i32, i32* %78, i64 4\l  %82 = bitcast i32* %81 to \<4 x i32\>*\l  %83 = load \<4 x i32\>, \<4 x i32\>* %82, align 4, !tbaa !5, !alias.scope !9\l  %84 = getelementptr inbounds i32, i32* %0, i64 %76\l  %85 = bitcast i32* %84 to \<4 x i32\>*\l  store \<4 x i32\> %80, \<4 x i32\>* %85, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %86 = getelementptr inbounds i32, i32* %84, i64 4\l  %87 = bitcast i32* %86 to \<4 x i32\>*\l  store \<4 x i32\> %83, \<4 x i32\>* %87, align 4, !tbaa !5, !alias.scope !12,\l... !noalias !9\l  %88 = add nuw i64 %76, 8\l  %89 = add i64 %77, 1\l  %90 = icmp eq i64 %89, %19\l  br i1 %90, label %91, label %75, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x119be30:s0 -> Node0x119be80;
	Node0x119be30:s1 -> Node0x119be30;
	Node0x119be80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%91:\l91:                                               \l  %92 = icmp eq i64 %15, %6\l  br i1 %92, label %130, label %93\l|{<s0>T|<s1>F}}"];
	Node0x119be80:s0 -> Node0x119c010;
	Node0x119be80:s1 -> Node0x119bed0;
	Node0x119bed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%93:\l93:                                               \l  %94 = phi i64 [ 0, %8 ], [ 0, %5 ], [ %15, %91 ]\l  %95 = xor i64 %94, -1\l  %96 = add nsw i64 %95, %6\l  %97 = and i64 %6, 3\l  %98 = icmp eq i64 %97, 0\l  br i1 %98, label %108, label %99\l|{<s0>T|<s1>F}}"];
	Node0x119bed0:s0 -> Node0x119bf70;
	Node0x119bed0:s1 -> Node0x119bf20;
	Node0x119bf20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  %100 = phi i64 [ %105, %99 ], [ %94, %93 ]\l  %101 = phi i64 [ %106, %99 ], [ 0, %93 ]\l  %102 = getelementptr inbounds i32, i32* %1, i64 %100\l  %103 = load i32, i32* %102, align 4, !tbaa !5\l  %104 = getelementptr inbounds i32, i32* %0, i64 %100\l  store i32 %103, i32* %104, align 4, !tbaa !5\l  %105 = add nuw nsw i64 %100, 1\l  %106 = add i64 %101, 1\l  %107 = icmp eq i64 %106, %97\l  br i1 %107, label %108, label %99, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x119bf20:s0 -> Node0x119bf70;
	Node0x119bf20:s1 -> Node0x119bf20;
	Node0x119bf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%108:\l108:                                              \l  %109 = phi i64 [ %94, %93 ], [ %105, %99 ]\l  %110 = icmp ult i64 %96, 3\l  br i1 %110, label %130, label %111\l|{<s0>T|<s1>F}}"];
	Node0x119bf70:s0 -> Node0x119c010;
	Node0x119bf70:s1 -> Node0x119bfc0;
	Node0x119bfc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%111:\l111:                                              \l  %112 = phi i64 [ %128, %111 ], [ %109, %108 ]\l  %113 = getelementptr inbounds i32, i32* %1, i64 %112\l  %114 = load i32, i32* %113, align 4, !tbaa !5\l  %115 = getelementptr inbounds i32, i32* %0, i64 %112\l  store i32 %114, i32* %115, align 4, !tbaa !5\l  %116 = add nuw nsw i64 %112, 1\l  %117 = getelementptr inbounds i32, i32* %1, i64 %116\l  %118 = load i32, i32* %117, align 4, !tbaa !5\l  %119 = getelementptr inbounds i32, i32* %0, i64 %116\l  store i32 %118, i32* %119, align 4, !tbaa !5\l  %120 = add nuw nsw i64 %112, 2\l  %121 = getelementptr inbounds i32, i32* %1, i64 %120\l  %122 = load i32, i32* %121, align 4, !tbaa !5\l  %123 = getelementptr inbounds i32, i32* %0, i64 %120\l  store i32 %122, i32* %123, align 4, !tbaa !5\l  %124 = add nuw nsw i64 %112, 3\l  %125 = getelementptr inbounds i32, i32* %1, i64 %124\l  %126 = load i32, i32* %125, align 4, !tbaa !5\l  %127 = getelementptr inbounds i32, i32* %0, i64 %124\l  store i32 %126, i32* %127, align 4, !tbaa !5\l  %128 = add nuw nsw i64 %112, 4\l  %129 = icmp eq i64 %128, %6\l  br i1 %129, label %130, label %111, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x119bfc0:s0 -> Node0x119c010;
	Node0x119bfc0:s1 -> Node0x119bfc0;
	Node0x119c010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%130:\l130:                                              \l  ret void\l}"];
}

digraph "CFG for 'rsenc_204' function" {
	label="CFG for 'rsenc_204' function";

	Node0x1478a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%2:\l  %3 = load i1, i1* @inited, align 4\l  br i1 %3, label %98, label %4\l|{<s0>T|<s1>F}}"];
	Node0x1478a80:s0 -> Node0x1479120;
	Node0x1478a80:s1 -> Node0x1478bd0;
	Node0x1478bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%4:\l4:                                                \l  store i32 0, i32* getelementptr inbounds ([256 x i32], [256 x i32]*\l... @alpha_to, i64 0, i64 8), align 16, !tbaa !5\l  br label %5\l}"];
	Node0x1478bd0 -> Node0x1478c20;
	Node0x1478c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%5:\l5:                                                \l  %6 = phi i64 [ 0, %4 ], [ %20, %18 ]\l  %7 = phi i32 [ 1, %4 ], [ %19, %18 ]\l  %8 = getelementptr inbounds [256 x i32], [256 x i32]* @alpha_to, i64 0, i64\l... %6\l  store i32 %7, i32* %8, align 4, !tbaa !5\l  %9 = sext i32 %7 to i64\l  %10 = getelementptr inbounds [256 x i32], [256 x i32]* @index_of, i64 0, i64\l... %9\l  %11 = trunc i64 %6 to i32\l  store i32 %11, i32* %10, align 4, !tbaa !5\l  %12 = lshr i64 226, %6\l  %13 = and i64 %12, 1\l  %14 = icmp eq i64 %13, 0\l  br i1 %14, label %15, label %18\l|{<s0>T|<s1>F}}"];
	Node0x1478c20:s0 -> Node0x1478c70;
	Node0x1478c20:s1 -> Node0x1478cc0;
	Node0x1478c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%15:\l15:                                               \l  %16 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]*\l... @alpha_to, i64 0, i64 8), align 16, !tbaa !5\l  %17 = xor i32 %16, %7\l  store i32 %17, i32* getelementptr inbounds ([256 x i32], [256 x i32]*\l... @alpha_to, i64 0, i64 8), align 16, !tbaa !5\l  br label %18\l}"];
	Node0x1478c70 -> Node0x1478cc0;
	Node0x1478cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%18:\l18:                                               \l  %19 = shl i32 %7, 1\l  %20 = add nuw nsw i64 %6, 1\l  %21 = icmp eq i64 %20, 8\l  br i1 %21, label %22, label %5, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x1478cc0:s0 -> Node0x1478d10;
	Node0x1478cc0:s1 -> Node0x1478c20;
	Node0x1478d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%22:\l22:                                               \l  %23 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]*\l... @alpha_to, i64 0, i64 8), align 16, !tbaa !5\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds [256 x i32], [256 x i32]* @index_of, i64 0, i64\l... %24\l  store i32 8, i32* %25, align 4, !tbaa !5\l  br label %26\l}"];
	Node0x1478d10 -> Node0x1478d60;
	Node0x1478d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%26:\l26:                                               \l  %27 = phi i64 [ 9, %22 ], [ %45, %39 ]\l  %28 = add nsw i64 %27, -1\l  %29 = getelementptr inbounds [256 x i32], [256 x i32]* @alpha_to, i64 0, i64\l... %28\l  %30 = load i32, i32* %29, align 4, !tbaa !5\l  %31 = icmp slt i32 %30, 128\l  br i1 %31, label %37, label %32\l|{<s0>T|<s1>F}}"];
	Node0x1478d60:s0 -> Node0x1478e00;
	Node0x1478d60:s1 -> Node0x1478db0;
	Node0x1478db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%32:\l32:                                               \l  %33 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]*\l... @alpha_to, i64 0, i64 8), align 16, !tbaa !5\l  %34 = shl i32 %30, 1\l  %35 = xor i32 %34, %33\l  %36 = xor i32 %35, 256\l  br label %39\l}"];
	Node0x1478db0 -> Node0x1478e50;
	Node0x1478e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%37:\l37:                                               \l  %38 = shl i32 %30, 1\l  br label %39\l}"];
	Node0x1478e00 -> Node0x1478e50;
	Node0x1478e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %38, %37 ], [ %36, %32 ]\l  %41 = getelementptr inbounds [256 x i32], [256 x i32]* @alpha_to, i64 0, i64\l... %27\l  store i32 %40, i32* %41, align 4, !tbaa !5\l  %42 = sext i32 %40 to i64\l  %43 = getelementptr inbounds [256 x i32], [256 x i32]* @index_of, i64 0, i64\l... %42\l  %44 = trunc i64 %27 to i32\l  store i32 %44, i32* %43, align 4, !tbaa !5\l  %45 = add nuw nsw i64 %27, 1\l  %46 = icmp eq i64 %45, 255\l  br i1 %46, label %47, label %26, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x1478e50:s0 -> Node0x1478ea0;
	Node0x1478e50:s1 -> Node0x1478d60;
	Node0x1478ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%47:\l47:                                               \l  store i32 -1, i32* getelementptr inbounds ([256 x i32], [256 x i32]*\l... @index_of, i64 0, i64 0), align 16, !tbaa !5\l  store i32 2, i32* getelementptr inbounds ([17 x i32], [17 x i32]* @gg, i64\l... 0, i64 0), align 16, !tbaa !5\l  store i32 1, i32* getelementptr inbounds ([17 x i32], [17 x i32]* @gg, i64\l... 0, i64 1), align 4, !tbaa !5\l  br label %48\l}"];
	Node0x1478ea0 -> Node0x1478ef0;
	Node0x1478ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%48:\l48:                                               \l  %49 = phi i64 [ 2, %47 ], [ %86, %75 ]\l  %50 = getelementptr inbounds [17 x i32], [17 x i32]* @gg, i64 0, i64 %49\l  store i32 1, i32* %50, align 4, !tbaa !5\l  %51 = trunc i64 %49 to i32\l  br label %52\l}"];
	Node0x1478ef0 -> Node0x1478f40;
	Node0x1478f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%52:\l52:                                               \l  %53 = phi i64 [ %49, %48 ], [ %54, %72 ]\l  %54 = add nsw i64 %53, -1\l  %55 = getelementptr inbounds [17 x i32], [17 x i32]* @gg, i64 0, i64 %54\l  %56 = load i32, i32* %55, align 4, !tbaa !5\l  %57 = icmp eq i32 %56, 0\l  %58 = add nuw nsw i64 %53, 4294967294\l  %59 = and i64 %58, 4294967295\l  %60 = getelementptr inbounds [17 x i32], [17 x i32]* @gg, i64 0, i64 %59\l  %61 = load i32, i32* %60, align 4, !tbaa !5\l  br i1 %57, label %72, label %62\l|{<s0>T|<s1>F}}"];
	Node0x1478f40:s0 -> Node0x1478fe0;
	Node0x1478f40:s1 -> Node0x1478f90;
	Node0x1478f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%62:\l62:                                               \l  %63 = sext i32 %56 to i64\l  %64 = getelementptr inbounds [256 x i32], [256 x i32]* @index_of, i64 0, i64\l... %63\l  %65 = load i32, i32* %64, align 4, !tbaa !5\l  %66 = add nsw i32 %65, %51\l  %67 = srem i32 %66, 255\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds [256 x i32], [256 x i32]* @alpha_to, i64 0, i64\l... %68\l  %70 = load i32, i32* %69, align 4, !tbaa !5\l  %71 = xor i32 %70, %61\l  br label %72\l}"];
	Node0x1478f90 -> Node0x1478fe0;
	Node0x1478fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%72:\l72:                                               \l  %73 = phi i32 [ %71, %62 ], [ %61, %52 ]\l  store i32 %73, i32* %55, align 4, !tbaa !5\l  %74 = icmp sgt i64 %53, 2\l  br i1 %74, label %52, label %75, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x1478fe0:s0 -> Node0x1478f40;
	Node0x1478fe0:s1 -> Node0x1479030;
	Node0x1479030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%75:\l75:                                               \l  %76 = load i32, i32* getelementptr inbounds ([17 x i32], [17 x i32]* @gg,\l... i64 0, i64 0), align 16, !tbaa !5\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds [256 x i32], [256 x i32]* @index_of, i64 0, i64\l... %77\l  %79 = load i32, i32* %78, align 4, !tbaa !5\l  %80 = trunc i64 %49 to i32\l  %81 = add nsw i32 %79, %80\l  %82 = srem i32 %81, 255\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds [256 x i32], [256 x i32]* @alpha_to, i64 0, i64\l... %83\l  %85 = load i32, i32* %84, align 4, !tbaa !5\l  store i32 %85, i32* getelementptr inbounds ([17 x i32], [17 x i32]* @gg, i64\l... 0, i64 0), align 16, !tbaa !5\l  %86 = add nuw nsw i64 %49, 1\l  %87 = icmp eq i64 %86, 17\l  br i1 %87, label %88, label %48, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x1479030:s0 -> Node0x1479080;
	Node0x1479030:s1 -> Node0x1478ef0;
	Node0x1479080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%88:\l88:                                               \l  %89 = phi i64 [ %95, %88 ], [ 0, %75 ]\l  %90 = getelementptr inbounds [17 x i32], [17 x i32]* @gg, i64 0, i64 %89\l  %91 = load i32, i32* %90, align 4, !tbaa !5\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds [256 x i32], [256 x i32]* @index_of, i64 0, i64\l... %92\l  %94 = load i32, i32* %93, align 4, !tbaa !5\l  store i32 %94, i32* %90, align 4, !tbaa !5\l  %95 = add nuw nsw i64 %89, 1\l  %96 = icmp eq i64 %95, 17\l  br i1 %96, label %97, label %88, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x1479080:s0 -> Node0x14790d0;
	Node0x1479080:s1 -> Node0x1479080;
	Node0x14790d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%97:\l97:                                               \l  store i1 true, i1* @inited, align 4\l  br label %98\l}"];
	Node0x14790d0 -> Node0x1479120;
	Node0x1479120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%98:\l98:                                               \l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16\l... dereferenceable(204) bitcast ([239 x i32]* @data to i8*), i8 0, i64 204, i1\l... false), !tbaa !5\l  br label %99\l}"];
	Node0x1479120 -> Node0x1479170;
	Node0x1479170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%99:\l99:                                               \l  %100 = phi i64 [ 0, %98 ], [ %106, %99 ]\l  %101 = getelementptr inbounds i8, i8* %1, i64 %100\l  %102 = load i8, i8* %101, align 1, !tbaa !16\l  %103 = zext i8 %102 to i32\l  %104 = add nuw nsw i64 %100, 51\l  %105 = getelementptr inbounds [239 x i32], [239 x i32]* @data, i64 0, i64\l... %104\l  store i32 %103, i32* %105, align 4, !tbaa !5\l  %106 = add nuw nsw i64 %100, 1\l  %107 = icmp eq i64 %106, 188\l  br i1 %107, label %108, label %99, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x1479170:s0 -> Node0x14791c0;
	Node0x1479170:s1 -> Node0x1479170;
	Node0x14791c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%108:\l108:                                              \l  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16\l... dereferenceable(64) bitcast ([16 x i32]* @bb to i8*), i8 0, i64 64, i1 false)\l... #6, !tbaa !5\l  %109 = load i32, i32* getelementptr inbounds ([17 x i32], [17 x i32]* @gg,\l... i64 0, i64 0), align 16\l  br label %110\l}"];
	Node0x14791c0 -> Node0x1479210;
	Node0x1479210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%110:\l110:                                              \l  %111 = phi i64 [ 238, %108 ], [ %149, %147 ]\l  %112 = getelementptr inbounds [239 x i32], [239 x i32]* @data, i64 0, i64\l... %111\l  %113 = load i32, i32* %112, align 4, !tbaa !5\l  %114 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @bb,\l... i64 0, i64 15), align 4, !tbaa !5\l  %115 = xor i32 %114, %113\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds [256 x i32], [256 x i32]* @index_of, i64 0,\l... i64 %116\l  %118 = load i32, i32* %117, align 4, !tbaa !5\l  %119 = icmp eq i32 %118, -1\l  br i1 %119, label %120, label %121\l|{<s0>T|<s1>F}}"];
	Node0x1479210:s0 -> Node0x1479260;
	Node0x1479210:s1 -> Node0x14792b0;
	Node0x1479260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%120:\l120:                                              \l  call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4\l... dereferenceable(60) bitcast (i32* getelementptr inbounds ([16 x i32], [16 x\l... i32]* @bb, i64 0, i64 1) to i8*), i8* noundef nonnull align 16\l... dereferenceable(60) bitcast ([16 x i32]* @bb to i8*), i64 60, i1 false) #6,\l... !tbaa !5\l  br label %147\l}"];
	Node0x1479260 -> Node0x14793f0;
	Node0x14792b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  %122 = phi i64 [ %139, %136 ], [ 15, %110 ]\l  %123 = getelementptr inbounds [17 x i32], [17 x i32]* @gg, i64 0, i64 %122\l  %124 = load i32, i32* %123, align 4, !tbaa !5\l  %125 = icmp eq i32 %124, -1\l  %126 = add nsw i64 %122, -1\l  %127 = getelementptr inbounds [16 x i32], [16 x i32]* @bb, i64 0, i64 %126\l  %128 = load i32, i32* %127, align 4, !tbaa !5\l  br i1 %125, label %136, label %129\l|{<s0>T|<s1>F}}"];
	Node0x14792b0:s0 -> Node0x1479350;
	Node0x14792b0:s1 -> Node0x1479300;
	Node0x1479300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%129:\l129:                                              \l  %130 = add nsw i32 %124, %118\l  %131 = srem i32 %130, 255\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds [256 x i32], [256 x i32]* @alpha_to, i64 0,\l... i64 %132\l  %134 = load i32, i32* %133, align 4, !tbaa !5\l  %135 = xor i32 %134, %128\l  br label %136\l}"];
	Node0x1479300 -> Node0x1479350;
	Node0x1479350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  %137 = phi i32 [ %135, %129 ], [ %128, %121 ]\l  %138 = getelementptr inbounds [16 x i32], [16 x i32]* @bb, i64 0, i64 %122\l  store i32 %137, i32* %138, align 4, !tbaa !5\l  %139 = add nsw i64 %122, -1\l  %140 = icmp ugt i64 %122, 1\l  br i1 %140, label %121, label %141, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x1479350:s0 -> Node0x14792b0;
	Node0x1479350:s1 -> Node0x14793a0;
	Node0x14793a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%141:\l141:                                              \l  %142 = add nsw i32 %118, %109\l  %143 = srem i32 %142, 255\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds [256 x i32], [256 x i32]* @alpha_to, i64 0,\l... i64 %144\l  %146 = load i32, i32* %145, align 4, !tbaa !5\l  br label %147\l}"];
	Node0x14793a0 -> Node0x14793f0;
	Node0x14793f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%147:\l147:                                              \l  %148 = phi i32 [ %146, %141 ], [ 0, %120 ]\l  store i32 %148, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @bb,\l... i64 0, i64 0), align 16, !tbaa !5\l  %149 = add nsw i64 %111, -1\l  %150 = icmp eq i64 %111, 0\l  br i1 %150, label %151, label %110, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x14793f0:s0 -> Node0x1479440;
	Node0x14793f0:s1 -> Node0x1479210;
	Node0x1479440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%151:\l151:                                              \l  %152 = phi i64 [ %156, %151 ], [ 0, %147 ]\l  %153 = getelementptr inbounds i8, i8* %1, i64 %152\l  %154 = load i8, i8* %153, align 1, !tbaa !16\l  %155 = getelementptr inbounds i8, i8* %0, i64 %152\l  store i8 %154, i8* %155, align 1, !tbaa !16\l  %156 = add nuw nsw i64 %152, 1\l  %157 = icmp eq i64 %156, 188\l  br i1 %157, label %158, label %151, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x1479440:s0 -> Node0x1479490;
	Node0x1479440:s1 -> Node0x1479440;
	Node0x1479490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%158:\l158:                                              \l  %159 = phi i64 [ %165, %158 ], [ 0, %151 ]\l  %160 = getelementptr inbounds [16 x i32], [16 x i32]* @bb, i64 0, i64 %159\l  %161 = load i32, i32* %160, align 4, !tbaa !5\l  %162 = trunc i32 %161 to i8\l  %163 = add nuw nsw i64 %159, 188\l  %164 = getelementptr inbounds i8, i8* %0, i64 %163\l  store i8 %162, i8* %164, align 1, !tbaa !16\l  %165 = add nuw nsw i64 %159, 1\l  %166 = icmp eq i64 %165, 16\l  br i1 %166, label %167, label %158, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x1479490:s0 -> Node0x14794e0;
	Node0x1479490:s1 -> Node0x1479490;
	Node0x14794e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%167:\l167:                                              \l  ret void\l}"];
}

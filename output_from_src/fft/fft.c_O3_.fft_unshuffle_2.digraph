digraph "CFG for 'fft_unshuffle_2' function" {
	label="CFG for 'fft_unshuffle_2' function";

	Node0x8dfce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%5:\l  %6 = sub nsw i32 %1, %0\l  %7 = icmp slt i32 %6, 128\l  br i1 %7, label %8, label %59\l|{<s0>T|<s1>F}}"];
	Node0x8dfce0:s0 -> Node0x8dfd30;
	Node0x8dfce0:s1 -> Node0x8dfec0;
	Node0x8dfd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%8:\l8:                                                \l  %9 = phi i32 [ %0, %5 ], [ %62, %59 ]\l  %10 = icmp slt i32 %9, %1\l  br i1 %10, label %11, label %65\l|{<s0>T|<s1>F}}"];
	Node0x8dfd30:s0 -> Node0x8dfd80;
	Node0x8dfd30:s1 -> Node0x8dff10;
	Node0x8dfd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%11:\l11:                                               \l  %12 = shl nsw i32 %9, 1\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %13\l  %15 = sext i32 %4 to i64\l  %16 = sext i32 %9 to i64\l  %17 = sext i32 %1 to i64\l  %18 = sub nsw i64 %17, %16\l  %19 = xor i64 %16, -1\l  %20 = and i64 %18, 1\l  %21 = icmp eq i64 %20, 0\l  br i1 %21, label %32, label %22\l|{<s0>T|<s1>F}}"];
	Node0x8dfd80:s0 -> Node0x8dfe20;
	Node0x8dfd80:s1 -> Node0x8dfdd0;
	Node0x8dfdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%22:\l22:                                               \l  %23 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %16\l  %24 = bitcast %struct.COMPLEX* %23 to i8*\l  %25 = bitcast %struct.COMPLEX* %14 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %24, i8* noundef nonnull align 8 dereferenceable(16) %25,\l... i64 16, i1 false), !tbaa.struct !5\l  %26 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %23, i64 %15\l  %27 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %14, i64 1\l  %28 = bitcast %struct.COMPLEX* %26 to i8*\l  %29 = bitcast %struct.COMPLEX* %27 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %28, i8* noundef nonnull align 8 dereferenceable(16) %29,\l... i64 16, i1 false), !tbaa.struct !5\l  %30 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %14, i64 2\l  %31 = add nsw i64 %16, 1\l  br label %32\l}"];
	Node0x8dfdd0 -> Node0x8dfe20;
	Node0x8dfe20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%32:\l32:                                               \l  %33 = phi i64 [ %16, %11 ], [ %31, %22 ]\l  %34 = phi %struct.COMPLEX* [ %14, %11 ], [ %30, %22 ]\l  %35 = sub nsw i64 0, %17\l  %36 = icmp eq i64 %19, %35\l  br i1 %36, label %65, label %37\l|{<s0>T|<s1>F}}"];
	Node0x8dfe20:s0 -> Node0x8dff10;
	Node0x8dfe20:s1 -> Node0x8dfe70;
	Node0x8dfe70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%37:\l37:                                               \l  %38 = phi i64 [ %57, %37 ], [ %33, %32 ]\l  %39 = phi %struct.COMPLEX* [ %56, %37 ], [ %34, %32 ]\l  %40 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %38\l  %41 = bitcast %struct.COMPLEX* %40 to i8*\l  %42 = bitcast %struct.COMPLEX* %39 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %41, i8* noundef nonnull align 8 dereferenceable(16) %42,\l... i64 16, i1 false), !tbaa.struct !5\l  %43 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %40, i64 %15\l  %44 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 1\l  %45 = bitcast %struct.COMPLEX* %43 to i8*\l  %46 = bitcast %struct.COMPLEX* %44 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %45, i8* noundef nonnull align 8 dereferenceable(16) %46,\l... i64 16, i1 false), !tbaa.struct !5\l  %47 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 2\l  %48 = add nsw i64 %38, 1\l  %49 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %48\l  %50 = bitcast %struct.COMPLEX* %49 to i8*\l  %51 = bitcast %struct.COMPLEX* %47 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %50, i8* noundef nonnull align 8 dereferenceable(16) %51,\l... i64 16, i1 false), !tbaa.struct !5\l  %52 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %49, i64 %15\l  %53 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 3\l  %54 = bitcast %struct.COMPLEX* %52 to i8*\l  %55 = bitcast %struct.COMPLEX* %53 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %54, i8* noundef nonnull align 8 dereferenceable(16) %55,\l... i64 16, i1 false), !tbaa.struct !5\l  %56 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 4\l  %57 = add nsw i64 %38, 2\l  %58 = icmp eq i64 %57, %17\l  br i1 %58, label %65, label %37, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x8dfe70:s0 -> Node0x8dff10;
	Node0x8dfe70:s1 -> Node0x8dfe70;
	Node0x8dfec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %62, %59 ], [ %0, %5 ]\l  %61 = add nsw i32 %60, %1\l  %62 = sdiv i32 %61, 2\l  tail call void @fft_unshuffle_2(i32 noundef %60, i32 noundef %62,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, i32 noundef %4)\l  %63 = sub nsw i32 %1, %62\l  %64 = icmp slt i32 %63, 128\l  br i1 %64, label %8, label %59\l|{<s0>T|<s1>F}}"];
	Node0x8dfec0:s0 -> Node0x8dfd30;
	Node0x8dfec0:s1 -> Node0x8dfec0;
	Node0x8dff10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%65:\l65:                                               \l  ret void\l}"];
}

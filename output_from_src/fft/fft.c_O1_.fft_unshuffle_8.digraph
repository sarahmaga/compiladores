digraph "CFG for 'fft_unshuffle_8' function" {
	label="CFG for 'fft_unshuffle_8' function";

	Node0x23f99f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%5:\l  %6 = sub nsw i32 %1, %0\l  %7 = icmp slt i32 %6, 128\l  br i1 %7, label %8, label %56\l|{<s0>T|<s1>F}}"];
	Node0x23f99f0:s0 -> Node0x23f9a40;
	Node0x23f99f0:s1 -> Node0x23f9b30;
	Node0x23f9a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%8:\l8:                                                \l  %9 = icmp sgt i32 %1, %0\l  br i1 %9, label %10, label %59\l|{<s0>T|<s1>F}}"];
	Node0x23f9a40:s0 -> Node0x23f9a90;
	Node0x23f9a40:s1 -> Node0x23f9b80;
	Node0x23f9a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l10:                                               \l  %11 = shl nsw i32 %0, 3\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %12\l  %14 = sext i32 %4 to i64\l  %15 = shl nsw i32 %4, 1\l  %16 = sext i32 %15 to i64\l  %17 = sext i32 %0 to i64\l  %18 = sext i32 %1 to i64\l  br label %19\l}"];
	Node0x23f9a90 -> Node0x23f9ae0;
	Node0x23f9ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i64 [ %17, %10 ], [ %54, %19 ]\l  %21 = phi %struct.COMPLEX* [ %13, %10 ], [ %53, %19 ]\l  %22 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %20\l  %23 = bitcast %struct.COMPLEX* %22 to i8*\l  %24 = bitcast %struct.COMPLEX* %21 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %23, i8* noundef nonnull align 8 dereferenceable(16) %24,\l... i64 16, i1 false), !tbaa.struct !5\l  %25 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %22, i64 %14\l  %26 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %21, i64 1\l  %27 = bitcast %struct.COMPLEX* %25 to i8*\l  %28 = bitcast %struct.COMPLEX* %26 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %27, i8* noundef nonnull align 8 dereferenceable(16) %28,\l... i64 16, i1 false), !tbaa.struct !5\l  %29 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %21, i64 2\l  %30 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %22, i64 %16\l  %31 = bitcast %struct.COMPLEX* %30 to i8*\l  %32 = bitcast %struct.COMPLEX* %29 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %31, i8* noundef nonnull align 8 dereferenceable(16) %32,\l... i64 16, i1 false), !tbaa.struct !5\l  %33 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %30, i64 %14\l  %34 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %21, i64 3\l  %35 = bitcast %struct.COMPLEX* %33 to i8*\l  %36 = bitcast %struct.COMPLEX* %34 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %35, i8* noundef nonnull align 8 dereferenceable(16) %36,\l... i64 16, i1 false), !tbaa.struct !5\l  %37 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %21, i64 4\l  %38 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %30, i64 %16\l  %39 = bitcast %struct.COMPLEX* %38 to i8*\l  %40 = bitcast %struct.COMPLEX* %37 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %39, i8* noundef nonnull align 8 dereferenceable(16) %40,\l... i64 16, i1 false), !tbaa.struct !5\l  %41 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 %14\l  %42 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %21, i64 5\l  %43 = bitcast %struct.COMPLEX* %41 to i8*\l  %44 = bitcast %struct.COMPLEX* %42 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %43, i8* noundef nonnull align 8 dereferenceable(16) %44,\l... i64 16, i1 false), !tbaa.struct !5\l  %45 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %21, i64 6\l  %46 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 %16\l  %47 = bitcast %struct.COMPLEX* %46 to i8*\l  %48 = bitcast %struct.COMPLEX* %45 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %47, i8* noundef nonnull align 8 dereferenceable(16) %48,\l... i64 16, i1 false), !tbaa.struct !5\l  %49 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %46, i64 %14\l  %50 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %21, i64 7\l  %51 = bitcast %struct.COMPLEX* %49 to i8*\l  %52 = bitcast %struct.COMPLEX* %50 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %51, i8* noundef nonnull align 8 dereferenceable(16) %52,\l... i64 16, i1 false), !tbaa.struct !5\l  %53 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %21, i64 8\l  %54 = add nsw i64 %20, 1\l  %55 = icmp eq i64 %54, %18\l  br i1 %55, label %59, label %19, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x23f9ae0:s0 -> Node0x23f9b80;
	Node0x23f9ae0:s1 -> Node0x23f9ae0;
	Node0x23f9b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%56:\l56:                                               \l  %57 = add nsw i32 %1, %0\l  %58 = sdiv i32 %57, 2\l  call void @fft_unshuffle_8(i32 noundef %0, i32 noundef %58, %struct.COMPLEX*\l... noundef %2, %struct.COMPLEX* noundef %3, i32 noundef %4)\l  call void @fft_unshuffle_8(i32 noundef %58, i32 noundef %1, %struct.COMPLEX*\l... noundef %2, %struct.COMPLEX* noundef %3, i32 noundef %4)\l  br label %59\l}"];
	Node0x23f9b30 -> Node0x23f9b80;
	Node0x23f9b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%59:\l59:                                               \l  ret void\l}"];
}

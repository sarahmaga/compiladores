digraph "CFG for 'fft_twiddle_gen' function" {
	label="CFG for 'fft_twiddle_gen' function";

	Node0xeb7ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%9:\l  %10 = add nsw i32 %1, -1\l  %11 = icmp eq i32 %10, %0\l  br i1 %11, label %12, label %60\l|{<s0>T|<s1>F}}"];
	Node0xeb7ba0:s0 -> Node0xeb7bf0;
	Node0xeb7ba0:s1 -> Node0xeb7d80;
	Node0xeb7bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%12:\l12:                                               \l  %13 = phi i32 [ %0, %9 ], [ %10, %60 ]\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %14\l  %16 = icmp sgt i32 %7, 0\l  br i1 %16, label %17, label %65\l|{<s0>T|<s1>F}}"];
	Node0xeb7bf0:s0 -> Node0xeb7c40;
	Node0xeb7bf0:s1 -> Node0xeb7dd0;
	Node0xeb7c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%17:\l17:                                               \l  %18 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %14\l  %19 = sext i32 %8 to i64\l  br label %20\l}"];
	Node0xeb7c40 -> Node0xeb7c90;
	Node0xeb7c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%20:\l20:                                               \l  %21 = phi i32 [ 0, %17 ], [ %57, %55 ]\l  %22 = phi %struct.COMPLEX* [ %18, %17 ], [ %58, %55 ]\l  %23 = mul i32 %21, %8\l  %24 = add i32 %23, %13\l  %25 = mul i32 %24, %6\l  br label %26\l}"];
	Node0xeb7c90 -> Node0xeb7ce0;
	Node0xeb7ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %51, %26 ], [ 0, %20 ]\l  %28 = phi i32 [ %52, %26 ], [ 0, %20 ]\l  %29 = phi %struct.COMPLEX* [ %53, %26 ], [ %15, %20 ]\l  %30 = phi \<2 x double\> [ %47, %26 ], [ zeroinitializer, %20 ]\l  %31 = sext i32 %27 to i64\l  %32 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %31,\l... i32 0\l  %33 = bitcast double* %32 to \<2 x double\>*\l  %34 = load \<2 x double\>, \<2 x double\>* %33, align 8, !tbaa !5\l  %35 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %29, i64 0,\l... i32 0\l  %36 = load double, double* %35, align 8, !tbaa !9\l  %37 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %29, i64 0,\l... i32 1\l  %38 = load double, double* %37, align 8, !tbaa !11\l  %39 = fneg double %38\l  %40 = insertelement \<2 x double\> poison, double %38, i64 0\l  %41 = insertelement \<2 x double\> %40, double %39, i64 1\l  %42 = fmul \<2 x double\> %34, %41\l  %43 = shufflevector \<2 x double\> %42, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %44 = insertelement \<2 x double\> poison, double %36, i64 0\l  %45 = shufflevector \<2 x double\> %44, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %46 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %45, \<2 x double\>\l... %34, \<2 x double\> %43)\l  %47 = fadd \<2 x double\> %30, %46\l  %48 = add i32 %25, %27\l  %49 = icmp sgt i32 %48, %5\l  %50 = select i1 %49, i32 %5, i32 0\l  %51 = sub nsw i32 %48, %50\l  %52 = add nuw nsw i32 %28, 1\l  %53 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %29, i64 %19\l  %54 = icmp eq i32 %52, %7\l  br i1 %54, label %55, label %26, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0xeb7ce0:s0 -> Node0xeb7d30;
	Node0xeb7ce0:s1 -> Node0xeb7ce0;
	Node0xeb7d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%55:\l55:                                               \l  %56 = bitcast %struct.COMPLEX* %22 to \<2 x double\>*\l  store \<2 x double\> %47, \<2 x double\>* %56, align 8, !tbaa !5\l  %57 = add nuw nsw i32 %21, 1\l  %58 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %22, i64 %19\l  %59 = icmp eq i32 %57, %7\l  br i1 %59, label %65, label %20, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0xeb7d30:s0 -> Node0xeb7dd0;
	Node0xeb7d30:s1 -> Node0xeb7c90;
	Node0xeb7d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%60:\l60:                                               \l  %61 = phi i32 [ %63, %60 ], [ %0, %9 ]\l  %62 = add nsw i32 %61, %1\l  %63 = sdiv i32 %62, 2\l  tail call void @fft_twiddle_gen(i32 noundef %61, i32 noundef %63,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8)\l  %64 = icmp eq i32 %10, %63\l  br i1 %64, label %12, label %60\l|{<s0>T|<s1>F}}"];
	Node0xeb7d80:s0 -> Node0xeb7bf0;
	Node0xeb7d80:s1 -> Node0xeb7d80;
	Node0xeb7dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%65:\l65:                                               \l  ret void\l}"];
}

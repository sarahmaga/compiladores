digraph "CFG for 'fft_base_16' function" {
	label="CFG for 'fft_base_16' function";

	Node0x911db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = bitcast %struct.COMPLEX* %0 to \<2 x double\>*\l  %4 = load \<2 x double\>, \<2 x double\>* %3, align 8, !tbaa !5\l  %5 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 8, i32\l... 0\l  %6 = bitcast double* %5 to \<2 x double\>*\l  %7 = load \<2 x double\>, \<2 x double\>* %6, align 8, !tbaa !5\l  %8 = fadd \<2 x double\> %4, %7\l  %9 = fsub \<2 x double\> %4, %7\l  %10 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 4,\l... i32 0\l  %11 = bitcast double* %10 to \<2 x double\>*\l  %12 = load \<2 x double\>, \<2 x double\>* %11, align 8, !tbaa !5\l  %13 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 12,\l... i32 0\l  %14 = bitcast double* %13 to \<2 x double\>*\l  %15 = load \<2 x double\>, \<2 x double\>* %14, align 8, !tbaa !5\l  %16 = fadd \<2 x double\> %12, %15\l  %17 = fsub \<2 x double\> %12, %15\l  %18 = shufflevector \<2 x double\> %17, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %19 = fadd \<2 x double\> %8, %16\l  %20 = fsub \<2 x double\> %8, %16\l  %21 = fadd \<2 x double\> %9, %18\l  %22 = fsub \<2 x double\> %9, %18\l  %23 = shufflevector \<2 x double\> %21, \<2 x double\> %22, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %24 = shufflevector \<2 x double\> %22, \<2 x double\> %21, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %25 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 2,\l... i32 0\l  %26 = bitcast double* %25 to \<2 x double\>*\l  %27 = load \<2 x double\>, \<2 x double\>* %26, align 8, !tbaa !5\l  %28 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 10,\l... i32 0\l  %29 = bitcast double* %28 to \<2 x double\>*\l  %30 = load \<2 x double\>, \<2 x double\>* %29, align 8, !tbaa !5\l  %31 = fadd \<2 x double\> %27, %30\l  %32 = fsub \<2 x double\> %27, %30\l  %33 = extractelement \<2 x double\> %32, i64 0\l  %34 = fsub \<2 x double\> %27, %30\l  %35 = extractelement \<2 x double\> %34, i64 1\l  %36 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 6,\l... i32 0\l  %37 = bitcast double* %36 to \<2 x double\>*\l  %38 = load \<2 x double\>, \<2 x double\>* %37, align 8, !tbaa !5\l  %39 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 14,\l... i32 0\l  %40 = bitcast double* %39 to \<2 x double\>*\l  %41 = load \<2 x double\>, \<2 x double\>* %40, align 8, !tbaa !5\l  %42 = fadd \<2 x double\> %38, %41\l  %43 = fsub \<2 x double\> %38, %41\l  %44 = extractelement \<2 x double\> %43, i64 0\l  %45 = fsub \<2 x double\> %38, %41\l  %46 = extractelement \<2 x double\> %45, i64 1\l  %47 = fadd \<2 x double\> %31, %42\l  %48 = fsub \<2 x double\> %31, %42\l  %49 = shufflevector \<2 x double\> %48, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %50 = fadd double %33, %46\l  %51 = fsub double %35, %44\l  %52 = fsub double %33, %46\l  %53 = fadd double %35, %44\l  %54 = fadd \<2 x double\> %19, %47\l  %55 = fsub \<2 x double\> %19, %47\l  %56 = extractelement \<2 x double\> %55, i64 1\l  %57 = insertelement \<2 x double\> poison, double %51, i64 0\l  %58 = shufflevector \<2 x double\> %57, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %59 = insertelement \<2 x double\> poison, double %50, i64 0\l  %60 = shufflevector \<2 x double\> %59, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %61 = fadd \<2 x double\> %58, %60\l  %62 = fsub \<2 x double\> %58, %60\l  %63 = shufflevector \<2 x double\> %61, \<2 x double\> %62, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %64 = fmul \<2 x double\> %63, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %65 = fadd \<2 x double\> %23, %64\l  %66 = fsub \<2 x double\> %23, %64\l  %67 = fadd \<2 x double\> %20, %49\l  %68 = fsub \<2 x double\> %20, %49\l  %69 = shufflevector \<2 x double\> %67, \<2 x double\> %68, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %70 = fsub \<2 x double\> %20, %49\l  %71 = extractelement \<2 x double\> %70, i64 0\l  %72 = fadd \<2 x double\> %20, %49\l  %73 = extractelement \<2 x double\> %72, i64 1\l  %74 = insertelement \<2 x double\> poison, double %53, i64 0\l  %75 = shufflevector \<2 x double\> %74, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %76 = insertelement \<2 x double\> poison, double %52, i64 0\l  %77 = shufflevector \<2 x double\> %76, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %78 = fsub \<2 x double\> %75, %77\l  %79 = fadd \<2 x double\> %75, %77\l  %80 = shufflevector \<2 x double\> %78, \<2 x double\> %79, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %81 = fmul \<2 x double\> %80, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %82 = fadd \<2 x double\> %24, %81\l  %83 = extractelement \<2 x double\> %82, i64 0\l  %84 = shufflevector \<2 x double\> %21, \<2 x double\> %19, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %85 = shufflevector \<2 x double\> %81, \<2 x double\> %47, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %86 = fsub \<2 x double\> %84, %85\l  %87 = fsub \<2 x double\> %24, %81\l  %88 = fadd \<2 x double\> %24, %81\l  %89 = shufflevector \<2 x double\> %87, \<2 x double\> %88, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %90 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 1,\l... i32 0\l  %91 = bitcast double* %90 to \<2 x double\>*\l  %92 = load \<2 x double\>, \<2 x double\>* %91, align 8, !tbaa !5\l  %93 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 9,\l... i32 0\l  %94 = bitcast double* %93 to \<2 x double\>*\l  %95 = load \<2 x double\>, \<2 x double\>* %94, align 8, !tbaa !5\l  %96 = fadd \<2 x double\> %92, %95\l  %97 = fsub \<2 x double\> %92, %95\l  %98 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 5,\l... i32 0\l  %99 = bitcast double* %98 to \<2 x double\>*\l  %100 = load \<2 x double\>, \<2 x double\>* %99, align 8, !tbaa !5\l  %101 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 13,\l... i32 0\l  %102 = bitcast double* %101 to \<2 x double\>*\l  %103 = load \<2 x double\>, \<2 x double\>* %102, align 8, !tbaa !5\l  %104 = fadd \<2 x double\> %100, %103\l  %105 = fsub \<2 x double\> %100, %103\l  %106 = shufflevector \<2 x double\> %105, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %107 = fadd \<2 x double\> %96, %104\l  %108 = fsub \<2 x double\> %96, %104\l  %109 = extractelement \<2 x double\> %108, i64 0\l  %110 = fsub \<2 x double\> %96, %104\l  %111 = extractelement \<2 x double\> %110, i64 1\l  %112 = fadd \<2 x double\> %97, %106\l  %113 = fsub \<2 x double\> %97, %106\l  %114 = shufflevector \<2 x double\> %112, \<2 x double\> %113, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %115 = shufflevector \<2 x double\> %112, \<2 x double\> %113, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %116 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 3,\l... i32 0\l  %117 = bitcast double* %116 to \<2 x double\>*\l  %118 = load \<2 x double\>, \<2 x double\>* %117, align 8, !tbaa !5\l  %119 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 11,\l... i32 0\l  %120 = bitcast double* %119 to \<2 x double\>*\l  %121 = load \<2 x double\>, \<2 x double\>* %120, align 8, !tbaa !5\l  %122 = fadd \<2 x double\> %118, %121\l  %123 = fsub \<2 x double\> %118, %121\l  %124 = extractelement \<2 x double\> %123, i64 0\l  %125 = fsub \<2 x double\> %118, %121\l  %126 = extractelement \<2 x double\> %125, i64 1\l  %127 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 7,\l... i32 0\l  %128 = bitcast double* %127 to \<2 x double\>*\l  %129 = load \<2 x double\>, \<2 x double\>* %128, align 8, !tbaa !5\l  %130 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 15,\l... i32 0\l  %131 = bitcast double* %130 to \<2 x double\>*\l  %132 = load \<2 x double\>, \<2 x double\>* %131, align 8, !tbaa !5\l  %133 = fadd \<2 x double\> %129, %132\l  %134 = fsub \<2 x double\> %129, %132\l  %135 = extractelement \<2 x double\> %134, i64 0\l  %136 = fsub \<2 x double\> %129, %132\l  %137 = extractelement \<2 x double\> %136, i64 1\l  %138 = fadd \<2 x double\> %122, %133\l  %139 = fsub \<2 x double\> %122, %133\l  %140 = extractelement \<2 x double\> %139, i64 0\l  %141 = fsub \<2 x double\> %122, %133\l  %142 = extractelement \<2 x double\> %141, i64 1\l  %143 = fadd double %124, %137\l  %144 = fsub double %126, %135\l  %145 = fsub double %124, %137\l  %146 = fadd double %126, %135\l  %147 = fadd \<2 x double\> %107, %138\l  %148 = fsub \<2 x double\> %107, %138\l  %149 = extractelement \<2 x double\> %148, i64 0\l  %150 = fsub \<2 x double\> %107, %138\l  %151 = insertelement \<2 x double\> poison, double %144, i64 0\l  %152 = shufflevector \<2 x double\> %151, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %153 = insertelement \<2 x double\> poison, double %143, i64 0\l  %154 = shufflevector \<2 x double\> %153, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %155 = fadd \<2 x double\> %152, %154\l  %156 = fsub \<2 x double\> %152, %154\l  %157 = shufflevector \<2 x double\> %155, \<2 x double\> %156, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %158 = fmul \<2 x double\> %157, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %159 = fadd \<2 x double\> %114, %158\l  %160 = fsub \<2 x double\> %114, %158\l  %161 = shufflevector \<2 x double\> %160, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %162 = fadd double %109, %142\l  %163 = fsub double %111, %140\l  %164 = fsub double %109, %142\l  %165 = fadd double %111, %140\l  %166 = insertelement \<2 x double\> poison, double %146, i64 0\l  %167 = shufflevector \<2 x double\> %166, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %168 = insertelement \<2 x double\> poison, double %145, i64 0\l  %169 = shufflevector \<2 x double\> %168, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %170 = fadd \<2 x double\> %167, %169\l  %171 = fsub \<2 x double\> %167, %169\l  %172 = shufflevector \<2 x double\> %170, \<2 x double\> %171, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %173 = fmul \<2 x double\> %172, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %174 = fadd \<2 x double\> %115, %173\l  %175 = extractelement \<2 x double\> %174, i64 1\l  %176 = fsub \<2 x double\> %115, %173\l  %177 = extractelement \<2 x double\> %176, i64 0\l  %178 = fadd \<2 x double\> %115, %173\l  %179 = fsub \<2 x double\> %115, %173\l  %180 = shufflevector \<2 x double\> %178, \<2 x double\> %179, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %181 = fadd \<2 x double\> %54, %147\l  %182 = bitcast %struct.COMPLEX* %1 to \<2 x double\>*\l  store \<2 x double\> %181, \<2 x double\>* %182, align 8, !tbaa !5\l  %183 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 8,\l... i32 1\l  %184 = fmul \<2 x double\> %159, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %185 = shufflevector \<2 x double\> %184, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %186 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %159, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %185)\l  %187 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 1,\l... i32 0\l  %188 = fadd \<2 x double\> %65, %186\l  %189 = bitcast double* %187 to \<2 x double\>*\l  store \<2 x double\> %188, \<2 x double\>* %189, align 8, !tbaa !5\l  %190 = shufflevector \<2 x double\> %54, \<2 x double\> %65, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %191 = shufflevector \<2 x double\> %147, \<2 x double\> %186, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %192 = fsub \<2 x double\> %190, %191\l  %193 = bitcast double* %183 to \<2 x double\>*\l  store \<2 x double\> %192, \<2 x double\>* %193, align 8, !tbaa !5\l  %194 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 9,\l... i32 1\l  %195 = insertelement \<2 x double\> poison, double %163, i64 0\l  %196 = shufflevector \<2 x double\> %195, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %197 = insertelement \<2 x double\> poison, double %162, i64 0\l  %198 = shufflevector \<2 x double\> %197, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %199 = fadd \<2 x double\> %196, %198\l  %200 = fsub \<2 x double\> %196, %198\l  %201 = shufflevector \<2 x double\> %199, \<2 x double\> %200, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %202 = fmul \<2 x double\> %201, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %203 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 2,\l... i32 0\l  %204 = fadd \<2 x double\> %69, %202\l  %205 = bitcast double* %203 to \<2 x double\>*\l  store \<2 x double\> %204, \<2 x double\>* %205, align 8, !tbaa !5\l  %206 = shufflevector \<2 x double\> %65, \<2 x double\> %67, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %207 = shufflevector \<2 x double\> %186, \<2 x double\> %202, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %208 = fsub \<2 x double\> %206, %207\l  %209 = bitcast double* %194 to \<2 x double\>*\l  store \<2 x double\> %208, \<2 x double\>* %209, align 8, !tbaa !5\l  %210 = extractelement \<2 x double\> %202, i64 1\l  %211 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 10,\l... i32 1\l  %212 = fmul double %177, 0x3FED906BCF32832F\l  %213 = tail call double @llvm.fmuladd.f64(double %175, double\l... 0x3FD87DE2A6AEA312, double %212)\l  %214 = fmul double %175, 0xBFED906BCF32832F\l  %215 = tail call double @llvm.fmuladd.f64(double %177, double\l... 0x3FD87DE2A6AEA312, double %214)\l  %216 = fadd double %83, %213\l  %217 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 3,\l... i32 0\l  store double %216, double* %217, align 8, !tbaa !9\l  %218 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 3,\l... i32 1\l  %219 = shufflevector \<2 x double\> %68, \<2 x double\> %82, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %220 = insertelement \<2 x double\> poison, double %210, i64 0\l  %221 = insertelement \<2 x double\> %220, double %213, i64 1\l  %222 = fsub \<2 x double\> %219, %221\l  %223 = bitcast double* %211 to \<2 x double\>*\l  store \<2 x double\> %222, \<2 x double\>* %223, align 8, !tbaa !5\l  %224 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 11,\l... i32 1\l  %225 = insertelement \<2 x double\> %150, double %215, i64 0\l  %226 = fadd \<2 x double\> %86, %225\l  %227 = bitcast double* %218 to \<2 x double\>*\l  store \<2 x double\> %226, \<2 x double\>* %227, align 8, !tbaa !5\l  %228 = fsub double %56, %149\l  %229 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 4,\l... i32 1\l  store double %228, double* %229, align 8, !tbaa !11\l  %230 = fsub \<2 x double\> %86, %225\l  %231 = bitcast double* %224 to \<2 x double\>*\l  store \<2 x double\> %230, \<2 x double\>* %231, align 8, !tbaa !5\l  %232 = fadd double %56, %149\l  %233 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 12,\l... i32 1\l  store double %232, double* %233, align 8, !tbaa !11\l  %234 = fmul \<2 x double\> %160, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %235 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %161, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %234)\l  %236 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 5,\l... i32 0\l  %237 = fadd \<2 x double\> %66, %235\l  %238 = fsub \<2 x double\> %66, %235\l  %239 = shufflevector \<2 x double\> %237, \<2 x double\> %238, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %240 = bitcast double* %236 to \<2 x double\>*\l  store \<2 x double\> %239, \<2 x double\>* %240, align 8, !tbaa !5\l  %241 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 13,\l... i32 0\l  %242 = shufflevector \<2 x double\> %238, \<2 x double\> %237, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %243 = bitcast double* %241 to \<2 x double\>*\l  store \<2 x double\> %242, \<2 x double\>* %243, align 8, !tbaa !5\l  %244 = fsub double %165, %164\l  %245 = fmul double %244, 0x3FE6A09E667F4BB8\l  %246 = fadd double %165, %164\l  %247 = fmul double %246, 0x3FE6A09E667F4BB8\l  %248 = fadd double %71, %245\l  %249 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 6,\l... i32 0\l  store double %248, double* %249, align 8, !tbaa !9\l  %250 = fsub double %73, %247\l  %251 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 6,\l... i32 1\l  store double %250, double* %251, align 8, !tbaa !11\l  %252 = fsub double %71, %245\l  %253 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 14,\l... i32 0\l  store double %252, double* %253, align 8, !tbaa !9\l  %254 = fadd double %73, %247\l  %255 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 14,\l... i32 1\l  store double %254, double* %255, align 8, !tbaa !11\l  %256 = shufflevector \<2 x double\> %179, \<2 x double\> %178, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %257 = fmul \<2 x double\> %256, \<double 0xBFED906BCF32832F, double\l... 0x3FED906BCF32832F\>\l  %258 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %180, \<2 x double\>\l... \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\> %257)\l  %259 = fadd \<2 x double\> %89, %258\l  %260 = extractelement \<2 x double\> %259, i64 0\l  %261 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 7,\l... i32 0\l  store double %260, double* %261, align 8, !tbaa !9\l  %262 = shufflevector \<2 x double\> %88, \<2 x double\> %54, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %263 = shufflevector \<2 x double\> %258, \<2 x double\> %147, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %264 = fsub \<2 x double\> %262, %263\l  %265 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 7,\l... i32 1\l  %266 = bitcast double* %265 to \<2 x double\>*\l  store \<2 x double\> %264, \<2 x double\>* %266, align 8, !tbaa !5\l  %267 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 15,\l... i32 0\l  %268 = fsub \<2 x double\> %89, %258\l  %269 = fadd \<2 x double\> %89, %258\l  %270 = shufflevector \<2 x double\> %268, \<2 x double\> %269, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %271 = bitcast double* %267 to \<2 x double\>*\l  store \<2 x double\> %270, \<2 x double\>* %271, align 8, !tbaa !5\l  ret void\l}"];
}

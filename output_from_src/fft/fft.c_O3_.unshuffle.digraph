digraph "CFG for 'unshuffle' function" {
	label="CFG for 'unshuffle' function";

	Node0xbc4ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%6:\l  %7 = sub nsw i32 %1, %0\l  %8 = icmp slt i32 %7, 16\l  br i1 %8, label %9, label %160\l|{<s0>T|<s1>F}}"];
	Node0xbc4ee0:s0 -> Node0xbc53f0;
	Node0xbc4ee0:s1 -> Node0xbc5990;
	Node0xbc53f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%9:\l9:                                                \l  %10 = phi i32 [ %0, %6 ], [ %163, %160 ]\l  %11 = and i32 %4, -4\l  %12 = mul nsw i32 %10, %4\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %13\l  %15 = icmp slt i32 %10, %1\l  br i1 %15, label %16, label %166\l|{<s0>T|<s1>F}}"];
	Node0xbc53f0:s0 -> Node0xbc5440;
	Node0xbc53f0:s1 -> Node0xbc59e0;
	Node0xbc5440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%16:\l16:                                               \l  %17 = icmp sgt i32 %11, 0\l  %18 = sext i32 %5 to i64\l  %19 = shl nsw i32 %5, 1\l  %20 = sext i32 %19 to i64\l  %21 = mul nsw i32 %5, 3\l  %22 = sext i32 %21 to i64\l  %23 = shl nsw i32 %5, 2\l  %24 = sext i32 %23 to i64\l  br i1 %17, label %25, label %106\l|{<s0>T|<s1>F}}"];
	Node0xbc5440:s0 -> Node0xbc5490;
	Node0xbc5440:s1 -> Node0xbc5760;
	Node0xbc5490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%25:\l25:                                               \l  %26 = and i32 %4, -4\l  %27 = sext i32 %10 to i64\l  %28 = sext i32 %1 to i64\l  %29 = icmp slt i32 %26, %4\l  %30 = and i32 %4, 3\l  %31 = xor i32 %11, -1\l  %32 = add i32 %31, %4\l  %33 = icmp eq i32 %30, 0\l  %34 = icmp ult i32 %32, 3\l  br label %35\l}"];
	Node0xbc5490 -> Node0xbc54e0;
	Node0xbc54e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%35:\l35:                                               \l  %36 = phi i64 [ %27, %25 ], [ %41, %39 ]\l  %37 = phi %struct.COMPLEX* [ %14, %25 ], [ %40, %39 ]\l  %38 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %36\l  br label %65\l}"];
	Node0xbc54e0 -> Node0xbc55d0;
	Node0xbc5530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%39:\l39:                                               \l  %40 = phi %struct.COMPLEX* [ %84, %87 ], [ %102, %101 ], [ %61, %43 ]\l  %41 = add nsw i64 %36, 1\l  %42 = icmp eq i64 %41, %28\l  br i1 %42, label %166, label %35, !llvm.loop !5\l|{<s0>T|<s1>F}}"];
	Node0xbc5530:s0 -> Node0xbc59e0;
	Node0xbc5530:s1 -> Node0xbc54e0;
	Node0xbc5580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%43:\l43:                                               \l  %44 = phi %struct.COMPLEX* [ %62, %43 ], [ %103, %101 ]\l  %45 = phi %struct.COMPLEX* [ %61, %43 ], [ %104, %101 ]\l  %46 = phi i32 [ %63, %43 ], [ %105, %101 ]\l  %47 = bitcast %struct.COMPLEX* %44 to i8*\l  %48 = bitcast %struct.COMPLEX* %45 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %47, i8* noundef nonnull align 8 dereferenceable(16) %48,\l... i64 16, i1 false), !tbaa.struct !7\l  %49 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %45, i64 1\l  %50 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %44, i64 %18\l  %51 = bitcast %struct.COMPLEX* %50 to i8*\l  %52 = bitcast %struct.COMPLEX* %49 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %51, i8* noundef nonnull align 8 dereferenceable(16) %52,\l... i64 16, i1 false), !tbaa.struct !7\l  %53 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %45, i64 2\l  %54 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %50, i64 %18\l  %55 = bitcast %struct.COMPLEX* %54 to i8*\l  %56 = bitcast %struct.COMPLEX* %53 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %55, i8* noundef nonnull align 8 dereferenceable(16) %56,\l... i64 16, i1 false), !tbaa.struct !7\l  %57 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %45, i64 3\l  %58 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %54, i64 %18\l  %59 = bitcast %struct.COMPLEX* %58 to i8*\l  %60 = bitcast %struct.COMPLEX* %57 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %59, i8* noundef nonnull align 8 dereferenceable(16) %60,\l... i64 16, i1 false), !tbaa.struct !7\l  %61 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %45, i64 4\l  %62 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %58, i64 %18\l  %63 = add nuw nsw i32 %46, 4\l  %64 = icmp eq i32 %63, %4\l  br i1 %64, label %39, label %43, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0xbc5580:s0 -> Node0xbc5530;
	Node0xbc5580:s1 -> Node0xbc5580;
	Node0xbc55d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi %struct.COMPLEX* [ %38, %35 ], [ %83, %65 ]\l  %67 = phi %struct.COMPLEX* [ %37, %35 ], [ %84, %65 ]\l  %68 = phi i32 [ 0, %35 ], [ %85, %65 ]\l  %69 = bitcast %struct.COMPLEX* %66 to i8*\l  %70 = bitcast %struct.COMPLEX* %67 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %69, i8* noundef nonnull align 8 dereferenceable(16) %70,\l... i64 16, i1 false), !tbaa.struct !7\l  %71 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %66, i64 %18\l  %72 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %67, i64 1\l  %73 = bitcast %struct.COMPLEX* %71 to i8*\l  %74 = bitcast %struct.COMPLEX* %72 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %73, i8* noundef nonnull align 8 dereferenceable(16) %74,\l... i64 16, i1 false), !tbaa.struct !7\l  %75 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %66, i64 %20\l  %76 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %67, i64 2\l  %77 = bitcast %struct.COMPLEX* %75 to i8*\l  %78 = bitcast %struct.COMPLEX* %76 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %77, i8* noundef nonnull align 8 dereferenceable(16) %78,\l... i64 16, i1 false), !tbaa.struct !7\l  %79 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %66, i64 %22\l  %80 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %67, i64 3\l  %81 = bitcast %struct.COMPLEX* %79 to i8*\l  %82 = bitcast %struct.COMPLEX* %80 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %81, i8* noundef nonnull align 8 dereferenceable(16) %82,\l... i64 16, i1 false), !tbaa.struct !7\l  %83 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %66, i64 %24\l  %84 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %67, i64 4\l  %85 = add nuw nsw i32 %68, 4\l  %86 = icmp slt i32 %85, %11\l  br i1 %86, label %65, label %87, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0xbc55d0:s0 -> Node0xbc55d0;
	Node0xbc55d0:s1 -> Node0xbc5620;
	Node0xbc5620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%87:\l87:                                               \l  br i1 %29, label %88, label %39\l|{<s0>T|<s1>F}}"];
	Node0xbc5620:s0 -> Node0xbc5670;
	Node0xbc5620:s1 -> Node0xbc5530;
	Node0xbc5670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%88:\l88:                                               \l  br i1 %33, label %101, label %89\l|{<s0>T|<s1>F}}"];
	Node0xbc5670:s0 -> Node0xbc5710;
	Node0xbc5670:s1 -> Node0xbc56c0;
	Node0xbc56c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%89:\l89:                                               \l  %90 = phi %struct.COMPLEX* [ %97, %89 ], [ %83, %88 ]\l  %91 = phi %struct.COMPLEX* [ %96, %89 ], [ %84, %88 ]\l  %92 = phi i32 [ %98, %89 ], [ %26, %88 ]\l  %93 = phi i32 [ %99, %89 ], [ 0, %88 ]\l  %94 = bitcast %struct.COMPLEX* %90 to i8*\l  %95 = bitcast %struct.COMPLEX* %91 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %94, i8* noundef nonnull align 8 dereferenceable(16) %95,\l... i64 16, i1 false), !tbaa.struct !7\l  %96 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %91, i64 1\l  %97 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %90, i64 %18\l  %98 = add nuw nsw i32 %92, 1\l  %99 = add i32 %93, 1\l  %100 = icmp eq i32 %99, %30\l  br i1 %100, label %101, label %89, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0xbc56c0:s0 -> Node0xbc5710;
	Node0xbc56c0:s1 -> Node0xbc56c0;
	Node0xbc5710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%101:\l101:                                              \l  %102 = phi %struct.COMPLEX* [ undef, %88 ], [ %96, %89 ]\l  %103 = phi %struct.COMPLEX* [ %83, %88 ], [ %97, %89 ]\l  %104 = phi %struct.COMPLEX* [ %84, %88 ], [ %96, %89 ]\l  %105 = phi i32 [ %26, %88 ], [ %98, %89 ]\l  br i1 %34, label %39, label %43\l|{<s0>T|<s1>F}}"];
	Node0xbc5710:s0 -> Node0xbc5530;
	Node0xbc5710:s1 -> Node0xbc5580;
	Node0xbc5760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%106:\l106:                                              \l  %107 = icmp sgt i32 %4, 0\l  br i1 %107, label %108, label %166\l|{<s0>T|<s1>F}}"];
	Node0xbc5760:s0 -> Node0xbc57b0;
	Node0xbc5760:s1 -> Node0xbc59e0;
	Node0xbc57b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%108:\l108:                                              \l  %109 = sext i32 %10 to i64\l  %110 = sext i32 %1 to i64\l  %111 = add i32 %4, -1\l  %112 = and i32 %4, 3\l  %113 = icmp ult i32 %111, 3\l  %114 = and i32 %4, -4\l  %115 = icmp eq i32 %112, 0\l  br label %116\l}"];
	Node0xbc57b0 -> Node0xbc5800;
	Node0xbc5800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%116:\l116:                                              \l  %117 = phi i64 [ %109, %108 ], [ %158, %156 ]\l  %118 = phi %struct.COMPLEX* [ %14, %108 ], [ %157, %156 ]\l  %119 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %117\l  br i1 %113, label %142, label %120\l|{<s0>T|<s1>F}}"];
	Node0xbc5800:s0 -> Node0xbc58a0;
	Node0xbc5800:s1 -> Node0xbc5850;
	Node0xbc5850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%120:\l120:                                              \l  %121 = phi %struct.COMPLEX* [ %139, %120 ], [ %119, %116 ]\l  %122 = phi %struct.COMPLEX* [ %138, %120 ], [ %118, %116 ]\l  %123 = phi i32 [ %140, %120 ], [ 0, %116 ]\l  %124 = bitcast %struct.COMPLEX* %121 to i8*\l  %125 = bitcast %struct.COMPLEX* %122 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %124, i8* noundef nonnull align 8 dereferenceable(16)\l... %125, i64 16, i1 false), !tbaa.struct !7\l  %126 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %122, i64 1\l  %127 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %121, i64 %18\l  %128 = bitcast %struct.COMPLEX* %127 to i8*\l  %129 = bitcast %struct.COMPLEX* %126 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %128, i8* noundef nonnull align 8 dereferenceable(16)\l... %129, i64 16, i1 false), !tbaa.struct !7\l  %130 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %122, i64 2\l  %131 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %127, i64 %18\l  %132 = bitcast %struct.COMPLEX* %131 to i8*\l  %133 = bitcast %struct.COMPLEX* %130 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %132, i8* noundef nonnull align 8 dereferenceable(16)\l... %133, i64 16, i1 false), !tbaa.struct !7\l  %134 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %122, i64 3\l  %135 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %131, i64 %18\l  %136 = bitcast %struct.COMPLEX* %135 to i8*\l  %137 = bitcast %struct.COMPLEX* %134 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %136, i8* noundef nonnull align 8 dereferenceable(16)\l... %137, i64 16, i1 false), !tbaa.struct !7\l  %138 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %122, i64 4\l  %139 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %135, i64 %18\l  %140 = add i32 %123, 4\l  %141 = icmp eq i32 %140, %114\l  br i1 %141, label %142, label %120, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0xbc5850:s0 -> Node0xbc58a0;
	Node0xbc5850:s1 -> Node0xbc5850;
	Node0xbc58a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%142:\l142:                                              \l  %143 = phi %struct.COMPLEX* [ undef, %116 ], [ %138, %120 ]\l  %144 = phi %struct.COMPLEX* [ %119, %116 ], [ %139, %120 ]\l  %145 = phi %struct.COMPLEX* [ %118, %116 ], [ %138, %120 ]\l  br i1 %115, label %156, label %146\l|{<s0>T|<s1>F}}"];
	Node0xbc58a0:s0 -> Node0xbc5940;
	Node0xbc58a0:s1 -> Node0xbc58f0;
	Node0xbc58f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%146:\l146:                                              \l  %147 = phi %struct.COMPLEX* [ %153, %146 ], [ %144, %142 ]\l  %148 = phi %struct.COMPLEX* [ %152, %146 ], [ %145, %142 ]\l  %149 = phi i32 [ %154, %146 ], [ 0, %142 ]\l  %150 = bitcast %struct.COMPLEX* %147 to i8*\l  %151 = bitcast %struct.COMPLEX* %148 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %150, i8* noundef nonnull align 8 dereferenceable(16)\l... %151, i64 16, i1 false), !tbaa.struct !7\l  %152 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %148, i64 1\l  %153 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %147, i64 %18\l  %154 = add i32 %149, 1\l  %155 = icmp eq i32 %154, %112\l  br i1 %155, label %156, label %146, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0xbc58f0:s0 -> Node0xbc5940;
	Node0xbc58f0:s1 -> Node0xbc58f0;
	Node0xbc5940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%156:\l156:                                              \l  %157 = phi %struct.COMPLEX* [ %143, %142 ], [ %152, %146 ]\l  %158 = add nsw i64 %117, 1\l  %159 = icmp eq i64 %158, %110\l  br i1 %159, label %166, label %116, !llvm.loop !5\l|{<s0>T|<s1>F}}"];
	Node0xbc5940:s0 -> Node0xbc59e0;
	Node0xbc5940:s1 -> Node0xbc5800;
	Node0xbc5990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%160:\l160:                                              \l  %161 = phi i32 [ %163, %160 ], [ %0, %6 ]\l  %162 = add nsw i32 %161, %1\l  %163 = sdiv i32 %162, 2\l  tail call void @unshuffle(i32 noundef %161, i32 noundef %163,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, i32 noundef %4, i32\l... noundef %5)\l  %164 = sub nsw i32 %1, %163\l  %165 = icmp slt i32 %164, 16\l  br i1 %165, label %9, label %160\l|{<s0>T|<s1>F}}"];
	Node0xbc5990:s0 -> Node0xbc53f0;
	Node0xbc5990:s1 -> Node0xbc5990;
	Node0xbc59e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%166:\l166:                                              \l  ret void\l}"];
}

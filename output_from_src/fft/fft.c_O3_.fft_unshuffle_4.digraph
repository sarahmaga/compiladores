digraph "CFG for 'fft_unshuffle_4' function" {
	label="CFG for 'fft_unshuffle_4' function";

	Node0xbe0910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = sub nsw i32 %1, %0\l  %7 = icmp slt i32 %6, 128\l  br i1 %7, label %8, label %41\l|{<s0>T|<s1>F}}"];
	Node0xbe0910:s0 -> Node0xbe0960;
	Node0xbe0910:s1 -> Node0xbe0a50;
	Node0xbe0960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%8:\l8:                                                \l  %9 = phi i32 [ %0, %5 ], [ %44, %41 ]\l  %10 = icmp slt i32 %9, %1\l  br i1 %10, label %11, label %47\l|{<s0>T|<s1>F}}"];
	Node0xbe0960:s0 -> Node0xbe09b0;
	Node0xbe0960:s1 -> Node0xbe0aa0;
	Node0xbe09b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%11:\l11:                                               \l  %12 = shl nsw i32 %9, 2\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %13\l  %15 = sext i32 %4 to i64\l  %16 = shl nsw i32 %4, 1\l  %17 = sext i32 %16 to i64\l  %18 = sext i32 %9 to i64\l  %19 = sext i32 %1 to i64\l  br label %20\l}"];
	Node0xbe09b0 -> Node0xbe0a00;
	Node0xbe0a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i64 [ %18, %11 ], [ %39, %20 ]\l  %22 = phi %struct.COMPLEX* [ %14, %11 ], [ %38, %20 ]\l  %23 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %21\l  %24 = bitcast %struct.COMPLEX* %23 to i8*\l  %25 = bitcast %struct.COMPLEX* %22 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %24, i8* noundef nonnull align 8 dereferenceable(16) %25,\l... i64 16, i1 false), !tbaa.struct !5\l  %26 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %23, i64 %15\l  %27 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %22, i64 1\l  %28 = bitcast %struct.COMPLEX* %26 to i8*\l  %29 = bitcast %struct.COMPLEX* %27 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %28, i8* noundef nonnull align 8 dereferenceable(16) %29,\l... i64 16, i1 false), !tbaa.struct !5\l  %30 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %22, i64 2\l  %31 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %23, i64 %17\l  %32 = bitcast %struct.COMPLEX* %31 to i8*\l  %33 = bitcast %struct.COMPLEX* %30 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %32, i8* noundef nonnull align 8 dereferenceable(16) %33,\l... i64 16, i1 false), !tbaa.struct !5\l  %34 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %31, i64 %15\l  %35 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %22, i64 3\l  %36 = bitcast %struct.COMPLEX* %34 to i8*\l  %37 = bitcast %struct.COMPLEX* %35 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %36, i8* noundef nonnull align 8 dereferenceable(16) %37,\l... i64 16, i1 false), !tbaa.struct !5\l  %38 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %22, i64 4\l  %39 = add nsw i64 %21, 1\l  %40 = icmp eq i64 %39, %19\l  br i1 %40, label %47, label %20, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0xbe0a00:s0 -> Node0xbe0aa0;
	Node0xbe0a00:s1 -> Node0xbe0a00;
	Node0xbe0a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i32 [ %44, %41 ], [ %0, %5 ]\l  %43 = add nsw i32 %42, %1\l  %44 = sdiv i32 %43, 2\l  tail call void @fft_unshuffle_4(i32 noundef %42, i32 noundef %44,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, i32 noundef %4)\l  %45 = sub nsw i32 %1, %44\l  %46 = icmp slt i32 %45, 128\l  br i1 %46, label %8, label %41\l|{<s0>T|<s1>F}}"];
	Node0xbe0a50:s0 -> Node0xbe0960;
	Node0xbe0a50:s1 -> Node0xbe0a50;
	Node0xbe0aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%47:\l47:                                               \l  ret void\l}"];
}

digraph "CFG for 'fft_twiddle_4' function" {
	label="CFG for 'fft_twiddle_4' function";

	Node0x1415d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%8:\l  %9 = sub nsw i32 %1, %0\l  %10 = icmp slt i32 %9, 128\l  br i1 %10, label %11, label %108\l|{<s0>T|<s1>F}}"];
	Node0x1415d10:s0 -> Node0x1415d60;
	Node0x1415d10:s1 -> Node0x1415e50;
	Node0x1415d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%11:\l11:                                               \l  %12 = icmp sgt i32 %1, %0\l  br i1 %12, label %13, label %111\l|{<s0>T|<s1>F}}"];
	Node0x1415d60:s0 -> Node0x1415db0;
	Node0x1415d60:s1 -> Node0x1415ea0;
	Node0x1415db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%13:\l13:                                               \l  %14 = sext i32 %0 to i64\l  %15 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %14\l  %16 = mul i32 %6, %0\l  %17 = shl nsw i32 %7, 1\l  %18 = sext i32 %17 to i64\l  %19 = sext i32 %7 to i64\l  %20 = mul nsw i32 %7, 3\l  %21 = sext i32 %20 to i64\l  %22 = sext i32 %16 to i64\l  %23 = sext i32 %6 to i64\l  %24 = sext i32 %1 to i64\l  br label %25\l}"];
	Node0x1415db0 -> Node0x1415e00;
	Node0x1415e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i64 [ %14, %13 ], [ %104, %25 ]\l  %27 = phi i64 [ %22, %13 ], [ %105, %25 ]\l  %28 = phi %struct.COMPLEX* [ %15, %13 ], [ %106, %25 ]\l  %29 = trunc i64 %27 to i32\l  %30 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %26\l  %31 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %30, i64 0,\l... i32 0\l  %32 = load double, double* %31, align 8, !tbaa !5\l  %33 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %26,\l... i32 1\l  %34 = load double, double* %33, align 8, !tbaa !10\l  %35 = shl nsw i32 %29, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %36,\l... i32 0\l  %38 = load double, double* %37, align 8, !tbaa !5\l  %39 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %36,\l... i32 1\l  %40 = load double, double* %39, align 8, !tbaa !10\l  %41 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %30, i64 %18\l  %42 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %41, i64 0,\l... i32 0\l  %43 = load double, double* %42, align 8, !tbaa !5\l  %44 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %41, i64 0,\l... i32 1\l  %45 = load double, double* %44, align 8, !tbaa !10\l  %46 = fneg double %40\l  %47 = fmul double %45, %46\l  %48 = call double @llvm.fmuladd.f64(double %38, double %43, double %47)\l  %49 = fmul double %38, %45\l  %50 = call double @llvm.fmuladd.f64(double %40, double %43, double %49)\l  %51 = fadd double %32, %48\l  %52 = fadd double %34, %50\l  %53 = fsub double %32, %48\l  %54 = fsub double %34, %50\l  %55 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %27,\l... i32 0\l  %56 = load double, double* %55, align 8, !tbaa !5\l  %57 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %27,\l... i32 1\l  %58 = load double, double* %57, align 8, !tbaa !10\l  %59 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %30, i64 %19\l  %60 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %59, i64 0,\l... i32 0\l  %61 = load double, double* %60, align 8, !tbaa !5\l  %62 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %59, i64 0,\l... i32 1\l  %63 = load double, double* %62, align 8, !tbaa !10\l  %64 = fneg double %58\l  %65 = fmul double %63, %64\l  %66 = call double @llvm.fmuladd.f64(double %56, double %61, double %65)\l  %67 = fmul double %56, %63\l  %68 = call double @llvm.fmuladd.f64(double %58, double %61, double %67)\l  %69 = mul nsw i64 %27, 3\l  %70 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %69,\l... i32 0\l  %71 = load double, double* %70, align 8, !tbaa !5\l  %72 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %69,\l... i32 1\l  %73 = load double, double* %72, align 8, !tbaa !10\l  %74 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %30, i64 %21\l  %75 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %74, i64 0,\l... i32 0\l  %76 = load double, double* %75, align 8, !tbaa !5\l  %77 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %74, i64 0,\l... i32 1\l  %78 = load double, double* %77, align 8, !tbaa !10\l  %79 = fneg double %73\l  %80 = fmul double %78, %79\l  %81 = call double @llvm.fmuladd.f64(double %71, double %76, double %80)\l  %82 = fmul double %71, %78\l  %83 = call double @llvm.fmuladd.f64(double %73, double %76, double %82)\l  %84 = fadd double %66, %81\l  %85 = fadd double %68, %83\l  %86 = fsub double %66, %81\l  %87 = fsub double %68, %83\l  %88 = fadd double %51, %84\l  %89 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %28, i64 0,\l... i32 0\l  store double %88, double* %89, align 8, !tbaa !5\l  %90 = fadd double %52, %85\l  %91 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %28, i64 0,\l... i32 1\l  store double %90, double* %91, align 8, !tbaa !10\l  %92 = fsub double %51, %84\l  %93 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %28, i64 %18,\l... i32 0\l  store double %92, double* %93, align 8, !tbaa !5\l  %94 = fsub double %52, %85\l  %95 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %28, i64 %18,\l... i32 1\l  store double %94, double* %95, align 8, !tbaa !10\l  %96 = fadd double %53, %87\l  %97 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %28, i64 %19,\l... i32 0\l  store double %96, double* %97, align 8, !tbaa !5\l  %98 = fsub double %54, %86\l  %99 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %28, i64 %19,\l... i32 1\l  store double %98, double* %99, align 8, !tbaa !10\l  %100 = fsub double %53, %87\l  %101 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %28, i64\l... %21, i32 0\l  store double %100, double* %101, align 8, !tbaa !5\l  %102 = fadd double %54, %86\l  %103 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %28, i64\l... %21, i32 1\l  store double %102, double* %103, align 8, !tbaa !10\l  %104 = add nsw i64 %26, 1\l  %105 = add i64 %27, %23\l  %106 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %28, i64 1\l  %107 = icmp eq i64 %104, %24\l  br i1 %107, label %111, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x1415e00:s0 -> Node0x1415ea0;
	Node0x1415e00:s1 -> Node0x1415e00;
	Node0x1415e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%108:\l108:                                              \l  %109 = add nsw i32 %1, %0\l  %110 = sdiv i32 %109, 2\l  call void @fft_twiddle_4(i32 noundef %0, i32 noundef %110, %struct.COMPLEX*\l... noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX* noundef %4, i32\l... noundef %5, i32 noundef %6, i32 noundef %7)\l  call void @fft_twiddle_4(i32 noundef %110, i32 noundef %1, %struct.COMPLEX*\l... noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX* noundef %4, i32\l... noundef %5, i32 noundef %6, i32 noundef %7)\l  br label %111\l}"];
	Node0x1415e50 -> Node0x1415ea0;
	Node0x1415ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%111:\l111:                                              \l  ret void\l}"];
}

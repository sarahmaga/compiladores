digraph "CFG for 'unshuffle' function" {
	label="CFG for 'unshuffle' function";

	Node0xeae2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%6:\l  %7 = sub nsw i32 %1, %0\l  %8 = icmp slt i32 %7, 16\l  br i1 %8, label %9, label %108\l|{<s0>T|<s1>F}}"];
	Node0xeae2e0:s0 -> Node0xeae7b0;
	Node0xeae2e0:s1 -> Node0xeaead0;
	Node0xeae7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%9:\l9:                                                \l  %10 = phi i32 [ %0, %6 ], [ %111, %108 ]\l  %11 = and i32 %4, -4\l  %12 = icmp slt i32 %10, %1\l  br i1 %12, label %13, label %114\l|{<s0>T|<s1>F}}"];
	Node0xeae7b0:s0 -> Node0xeae800;
	Node0xeae7b0:s1 -> Node0xeaeb20;
	Node0xeae800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%13:\l13:                                               \l  %14 = mul nsw i32 %10, %4\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %15\l  %17 = icmp sgt i32 %11, 0\l  %18 = sext i32 %5 to i64\l  %19 = shl nsw i32 %5, 1\l  %20 = sext i32 %19 to i64\l  %21 = mul nsw i32 %5, 3\l  %22 = sext i32 %21 to i64\l  %23 = shl nsw i32 %5, 2\l  %24 = sext i32 %23 to i64\l  %25 = and i32 %4, -4\l  %26 = sext i32 %10 to i64\l  %27 = sext i32 %1 to i64\l  %28 = and i32 %4, 3\l  %29 = icmp eq i32 %28, 0\l  br label %30\l}"];
	Node0xeae800 -> Node0xeae850;
	Node0xeae850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%30:\l30:                                               \l  %31 = phi i64 [ %26, %13 ], [ %106, %104 ]\l  %32 = phi %struct.COMPLEX* [ %16, %13 ], [ %105, %104 ]\l  %33 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %31\l  br i1 %17, label %60, label %34\l|{<s0>T|<s1>F}}"];
	Node0xeae850:s0 -> Node0xeae9e0;
	Node0xeae850:s1 -> Node0xeae8a0;
	Node0xeae8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %30 ], [ %25, %60 ]\l  %36 = phi %struct.COMPLEX* [ %32, %30 ], [ %79, %60 ]\l  %37 = phi %struct.COMPLEX* [ %33, %30 ], [ %78, %60 ]\l  %38 = icmp slt i32 %35, %4\l  br i1 %38, label %39, label %104\l|{<s0>T|<s1>F}}"];
	Node0xeae8a0:s0 -> Node0xeae8f0;
	Node0xeae8a0:s1 -> Node0xeaea80;
	Node0xeae8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%39:\l39:                                               \l  %40 = xor i32 %35, -1\l  %41 = add i32 %40, %4\l  br i1 %29, label %54, label %42\l|{<s0>T|<s1>F}}"];
	Node0xeae8f0:s0 -> Node0xeae990;
	Node0xeae8f0:s1 -> Node0xeae940;
	Node0xeae940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%42:\l42:                                               \l  %43 = phi %struct.COMPLEX* [ %50, %42 ], [ %37, %39 ]\l  %44 = phi %struct.COMPLEX* [ %49, %42 ], [ %36, %39 ]\l  %45 = phi i32 [ %51, %42 ], [ %35, %39 ]\l  %46 = phi i32 [ %52, %42 ], [ 0, %39 ]\l  %47 = bitcast %struct.COMPLEX* %43 to i8*\l  %48 = bitcast %struct.COMPLEX* %44 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %47, i8* noundef nonnull align 8 dereferenceable(16) %48,\l... i64 16, i1 false), !tbaa.struct !5\l  %49 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %44, i64 1\l  %50 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %43, i64 %18\l  %51 = add nuw nsw i32 %45, 1\l  %52 = add i32 %46, 1\l  %53 = icmp eq i32 %52, %28\l  br i1 %53, label %54, label %42, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0xeae940:s0 -> Node0xeae990;
	Node0xeae940:s1 -> Node0xeae940;
	Node0xeae990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%54:\l54:                                               \l  %55 = phi %struct.COMPLEX* [ undef, %39 ], [ %49, %42 ]\l  %56 = phi %struct.COMPLEX* [ %37, %39 ], [ %50, %42 ]\l  %57 = phi %struct.COMPLEX* [ %36, %39 ], [ %49, %42 ]\l  %58 = phi i32 [ %35, %39 ], [ %51, %42 ]\l  %59 = icmp ult i32 %41, 3\l  br i1 %59, label %104, label %82\l|{<s0>T|<s1>F}}"];
	Node0xeae990:s0 -> Node0xeaea80;
	Node0xeae990:s1 -> Node0xeaea30;
	Node0xeae9e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi %struct.COMPLEX* [ %78, %60 ], [ %33, %30 ]\l  %62 = phi %struct.COMPLEX* [ %79, %60 ], [ %32, %30 ]\l  %63 = phi i32 [ %80, %60 ], [ 0, %30 ]\l  %64 = bitcast %struct.COMPLEX* %61 to i8*\l  %65 = bitcast %struct.COMPLEX* %62 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %64, i8* noundef nonnull align 8 dereferenceable(16) %65,\l... i64 16, i1 false), !tbaa.struct !5\l  %66 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %61, i64 %18\l  %67 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %62, i64 1\l  %68 = bitcast %struct.COMPLEX* %66 to i8*\l  %69 = bitcast %struct.COMPLEX* %67 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %68, i8* noundef nonnull align 8 dereferenceable(16) %69,\l... i64 16, i1 false), !tbaa.struct !5\l  %70 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %61, i64 %20\l  %71 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %62, i64 2\l  %72 = bitcast %struct.COMPLEX* %70 to i8*\l  %73 = bitcast %struct.COMPLEX* %71 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %72, i8* noundef nonnull align 8 dereferenceable(16) %73,\l... i64 16, i1 false), !tbaa.struct !5\l  %74 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %61, i64 %22\l  %75 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %62, i64 3\l  %76 = bitcast %struct.COMPLEX* %74 to i8*\l  %77 = bitcast %struct.COMPLEX* %75 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %76, i8* noundef nonnull align 8 dereferenceable(16) %77,\l... i64 16, i1 false), !tbaa.struct !5\l  %78 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %61, i64 %24\l  %79 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %62, i64 4\l  %80 = add nuw nsw i32 %63, 4\l  %81 = icmp slt i32 %80, %11\l  br i1 %81, label %60, label %34, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0xeae9e0:s0 -> Node0xeae9e0;
	Node0xeae9e0:s1 -> Node0xeae8a0;
	Node0xeaea30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%82:\l82:                                               \l  %83 = phi %struct.COMPLEX* [ %101, %82 ], [ %56, %54 ]\l  %84 = phi %struct.COMPLEX* [ %100, %82 ], [ %57, %54 ]\l  %85 = phi i32 [ %102, %82 ], [ %58, %54 ]\l  %86 = bitcast %struct.COMPLEX* %83 to i8*\l  %87 = bitcast %struct.COMPLEX* %84 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %86, i8* noundef nonnull align 8 dereferenceable(16) %87,\l... i64 16, i1 false), !tbaa.struct !5\l  %88 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64 1\l  %89 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %83, i64 %18\l  %90 = bitcast %struct.COMPLEX* %89 to i8*\l  %91 = bitcast %struct.COMPLEX* %88 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %90, i8* noundef nonnull align 8 dereferenceable(16) %91,\l... i64 16, i1 false), !tbaa.struct !5\l  %92 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64 2\l  %93 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %89, i64 %18\l  %94 = bitcast %struct.COMPLEX* %93 to i8*\l  %95 = bitcast %struct.COMPLEX* %92 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %94, i8* noundef nonnull align 8 dereferenceable(16) %95,\l... i64 16, i1 false), !tbaa.struct !5\l  %96 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64 3\l  %97 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %93, i64 %18\l  %98 = bitcast %struct.COMPLEX* %97 to i8*\l  %99 = bitcast %struct.COMPLEX* %96 to i8*\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8\l... dereferenceable(16) %98, i8* noundef nonnull align 8 dereferenceable(16) %99,\l... i64 16, i1 false), !tbaa.struct !5\l  %100 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64 4\l  %101 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %97, i64 %18\l  %102 = add nuw nsw i32 %85, 4\l  %103 = icmp eq i32 %102, %4\l  br i1 %103, label %104, label %82, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0xeaea30:s0 -> Node0xeaea80;
	Node0xeaea30:s1 -> Node0xeaea30;
	Node0xeaea80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%104:\l104:                                              \l  %105 = phi %struct.COMPLEX* [ %36, %34 ], [ %55, %54 ], [ %100, %82 ]\l  %106 = add nsw i64 %31, 1\l  %107 = icmp eq i64 %106, %27\l  br i1 %107, label %114, label %30, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0xeaea80:s0 -> Node0xeaeb20;
	Node0xeaea80:s1 -> Node0xeae850;
	Node0xeaead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%108:\l108:                                              \l  %109 = phi i32 [ %111, %108 ], [ %0, %6 ]\l  %110 = add nsw i32 %109, %1\l  %111 = sdiv i32 %110, 2\l  tail call void @unshuffle(i32 noundef %109, i32 noundef %111,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, i32 noundef %4, i32\l... noundef %5)\l  %112 = sub nsw i32 %1, %111\l  %113 = icmp slt i32 %112, 16\l  br i1 %113, label %9, label %108\l|{<s0>T|<s1>F}}"];
	Node0xeaead0:s0 -> Node0xeae7b0;
	Node0xeaead0:s1 -> Node0xeaead0;
	Node0xeaeb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%114:\l114:                                              \l  ret void\l}"];
}

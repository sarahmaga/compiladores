digraph "CFG for 'fft_twiddle_8' function" {
	label="CFG for 'fft_twiddle_8' function";

	Node0xbe6b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%8:\l  %9 = sub nsw i32 %1, %0\l  %10 = icmp slt i32 %9, 128\l  br i1 %10, label %11, label %251\l|{<s0>T|<s1>F}}"];
	Node0xbe6b00:s0 -> Node0xbd7930;
	Node0xbe6b00:s1 -> Node0xbd7a20;
	Node0xbd7930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%11:\l11:                                               \l  %12 = phi i32 [ %0, %8 ], [ %254, %251 ]\l  %13 = icmp slt i32 %12, %1\l  br i1 %13, label %14, label %257\l|{<s0>T|<s1>F}}"];
	Node0xbd7930:s0 -> Node0xbd7980;
	Node0xbd7930:s1 -> Node0xbd7a70;
	Node0xbd7980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %15\l  %17 = mul i32 %12, %6\l  %18 = shl nsw i32 %7, 2\l  %19 = sext i32 %18 to i64\l  %20 = shl nsw i32 %7, 1\l  %21 = sext i32 %20 to i64\l  %22 = mul nsw i32 %7, 6\l  %23 = sext i32 %22 to i64\l  %24 = sext i32 %7 to i64\l  %25 = mul nsw i32 %7, 5\l  %26 = sext i32 %25 to i64\l  %27 = mul nsw i32 %7, 3\l  %28 = sext i32 %27 to i64\l  %29 = mul nsw i32 %7, 7\l  %30 = sext i32 %29 to i64\l  %31 = sext i32 %17 to i64\l  %32 = sext i32 %6 to i64\l  %33 = sext i32 %1 to i64\l  br label %34\l}"];
	Node0xbd7980 -> Node0xbd79d0;
	Node0xbd79d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i64 [ %15, %14 ], [ %247, %34 ]\l  %36 = phi i64 [ %31, %14 ], [ %248, %34 ]\l  %37 = phi %struct.COMPLEX* [ %16, %14 ], [ %249, %34 ]\l  %38 = trunc i64 %36 to i32\l  %39 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %35\l  %40 = bitcast %struct.COMPLEX* %39 to \<2 x double\>*\l  %41 = load \<2 x double\>, \<2 x double\>* %40, align 8, !tbaa !5\l  %42 = shl nsw i32 %38, 2\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %43,\l... i32 0\l  %45 = bitcast double* %44 to \<2 x double\>*\l  %46 = load \<2 x double\>, \<2 x double\>* %45, align 8, !tbaa !5\l  %47 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 %19\l  %48 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %47, i64 0,\l... i32 0\l  %49 = load double, double* %48, align 8, !tbaa !9\l  %50 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %47, i64 0,\l... i32 1\l  %51 = load double, double* %50, align 8, !tbaa !11\l  %52 = extractelement \<2 x double\> %46, i64 1\l  %53 = fneg double %52\l  %54 = insertelement \<2 x double\> poison, double %51, i64 0\l  %55 = shufflevector \<2 x double\> %54, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %56 = insertelement \<2 x double\> %46, double %53, i64 1\l  %57 = fmul \<2 x double\> %55, %56\l  %58 = shufflevector \<2 x double\> %57, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %59 = insertelement \<2 x double\> poison, double %49, i64 0\l  %60 = shufflevector \<2 x double\> %59, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %61 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %46, \<2 x double\>\l... %60, \<2 x double\> %58)\l  %62 = fadd \<2 x double\> %41, %61\l  %63 = fsub \<2 x double\> %41, %61\l  %64 = shl nsw i32 %38, 1\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %65,\l... i32 0\l  %67 = bitcast double* %66 to \<2 x double\>*\l  %68 = load \<2 x double\>, \<2 x double\>* %67, align 8, !tbaa !5\l  %69 = shufflevector \<2 x double\> %68, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %70 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 %21\l  %71 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %70, i64 0,\l... i32 0\l  %72 = load double, double* %71, align 8, !tbaa !9\l  %73 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %70, i64 0,\l... i32 1\l  %74 = load double, double* %73, align 8, !tbaa !11\l  %75 = extractelement \<2 x double\> %68, i64 1\l  %76 = fneg double %75\l  %77 = insertelement \<2 x double\> poison, double %74, i64 0\l  %78 = shufflevector \<2 x double\> %77, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %79 = insertelement \<2 x double\> %68, double %76, i64 1\l  %80 = fmul \<2 x double\> %78, %79\l  %81 = insertelement \<2 x double\> poison, double %72, i64 0\l  %82 = shufflevector \<2 x double\> %81, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %83 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %69, \<2 x double\>\l... %82, \<2 x double\> %80)\l  %84 = mul nsw i64 %36, 6\l  %85 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %84,\l... i32 0\l  %86 = bitcast double* %85 to \<2 x double\>*\l  %87 = load \<2 x double\>, \<2 x double\>* %86, align 8, !tbaa !5\l  %88 = shufflevector \<2 x double\> %87, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %89 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 %23\l  %90 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %89, i64 0,\l... i32 0\l  %91 = load double, double* %90, align 8, !tbaa !9\l  %92 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %89, i64 0,\l... i32 1\l  %93 = load double, double* %92, align 8, !tbaa !11\l  %94 = extractelement \<2 x double\> %87, i64 1\l  %95 = fneg double %94\l  %96 = insertelement \<2 x double\> poison, double %93, i64 0\l  %97 = shufflevector \<2 x double\> %96, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %98 = insertelement \<2 x double\> %87, double %95, i64 1\l  %99 = fmul \<2 x double\> %97, %98\l  %100 = insertelement \<2 x double\> poison, double %91, i64 0\l  %101 = shufflevector \<2 x double\> %100, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %102 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %88, \<2 x double\>\l... %101, \<2 x double\> %99)\l  %103 = fadd \<2 x double\> %83, %102\l  %104 = shufflevector \<2 x double\> %103, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %105 = fsub \<2 x double\> %83, %102\l  %106 = fadd \<2 x double\> %62, %104\l  %107 = fsub \<2 x double\> %62, %104\l  %108 = fadd \<2 x double\> %63, %105\l  %109 = fsub \<2 x double\> %63, %105\l  %110 = shufflevector \<2 x double\> %108, \<2 x double\> %109, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %111 = shufflevector \<2 x double\> %109, \<2 x double\> %108, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %112 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %36,\l... i32 0\l  %113 = bitcast double* %112 to \<2 x double\>*\l  %114 = load \<2 x double\>, \<2 x double\>* %113, align 8, !tbaa !5\l  %115 = shufflevector \<2 x double\> %114, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %116 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 %24\l  %117 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %116, i64 0,\l... i32 0\l  %118 = load double, double* %117, align 8, !tbaa !9\l  %119 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %116, i64 0,\l... i32 1\l  %120 = load double, double* %119, align 8, !tbaa !11\l  %121 = extractelement \<2 x double\> %114, i64 1\l  %122 = fneg double %121\l  %123 = insertelement \<2 x double\> poison, double %120, i64 0\l  %124 = shufflevector \<2 x double\> %123, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %125 = insertelement \<2 x double\> %114, double %122, i64 1\l  %126 = fmul \<2 x double\> %124, %125\l  %127 = insertelement \<2 x double\> poison, double %118, i64 0\l  %128 = shufflevector \<2 x double\> %127, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %129 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %115, \<2 x double\>\l... %128, \<2 x double\> %126)\l  %130 = mul nsw i64 %36, 5\l  %131 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %130, i32 0\l  %132 = bitcast double* %131 to \<2 x double\>*\l  %133 = load \<2 x double\>, \<2 x double\>* %132, align 8, !tbaa !5\l  %134 = shufflevector \<2 x double\> %133, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %135 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 %26\l  %136 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %135, i64 0,\l... i32 0\l  %137 = load double, double* %136, align 8, !tbaa !9\l  %138 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %135, i64 0,\l... i32 1\l  %139 = load double, double* %138, align 8, !tbaa !11\l  %140 = extractelement \<2 x double\> %133, i64 1\l  %141 = fneg double %140\l  %142 = insertelement \<2 x double\> poison, double %139, i64 0\l  %143 = shufflevector \<2 x double\> %142, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %144 = insertelement \<2 x double\> %133, double %141, i64 1\l  %145 = fmul \<2 x double\> %143, %144\l  %146 = insertelement \<2 x double\> poison, double %137, i64 0\l  %147 = shufflevector \<2 x double\> %146, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %148 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %134, \<2 x double\>\l... %147, \<2 x double\> %145)\l  %149 = fadd \<2 x double\> %129, %148\l  %150 = fsub \<2 x double\> %129, %148\l  %151 = extractelement \<2 x double\> %150, i64 1\l  %152 = fsub \<2 x double\> %129, %148\l  %153 = extractelement \<2 x double\> %152, i64 0\l  %154 = mul nsw i64 %36, 3\l  %155 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %154, i32 0\l  %156 = bitcast double* %155 to \<2 x double\>*\l  %157 = load \<2 x double\>, \<2 x double\>* %156, align 8, !tbaa !5\l  %158 = shufflevector \<2 x double\> %157, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %159 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 %28\l  %160 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %159, i64 0,\l... i32 0\l  %161 = load double, double* %160, align 8, !tbaa !9\l  %162 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %159, i64 0,\l... i32 1\l  %163 = load double, double* %162, align 8, !tbaa !11\l  %164 = extractelement \<2 x double\> %157, i64 1\l  %165 = fneg double %164\l  %166 = insertelement \<2 x double\> poison, double %163, i64 0\l  %167 = shufflevector \<2 x double\> %166, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %168 = insertelement \<2 x double\> %157, double %165, i64 1\l  %169 = fmul \<2 x double\> %167, %168\l  %170 = insertelement \<2 x double\> poison, double %161, i64 0\l  %171 = shufflevector \<2 x double\> %170, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %172 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %158, \<2 x double\>\l... %171, \<2 x double\> %169)\l  %173 = mul nsw i64 %36, 7\l  %174 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %173, i32 0\l  %175 = bitcast double* %174 to \<2 x double\>*\l  %176 = load \<2 x double\>, \<2 x double\>* %175, align 8, !tbaa !5\l  %177 = shufflevector \<2 x double\> %176, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %178 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %39, i64 %30\l  %179 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %178, i64 0,\l... i32 0\l  %180 = load double, double* %179, align 8, !tbaa !9\l  %181 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %178, i64 0,\l... i32 1\l  %182 = load double, double* %181, align 8, !tbaa !11\l  %183 = extractelement \<2 x double\> %176, i64 1\l  %184 = fneg double %183\l  %185 = insertelement \<2 x double\> poison, double %182, i64 0\l  %186 = shufflevector \<2 x double\> %185, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %187 = insertelement \<2 x double\> %176, double %184, i64 1\l  %188 = fmul \<2 x double\> %186, %187\l  %189 = insertelement \<2 x double\> poison, double %180, i64 0\l  %190 = shufflevector \<2 x double\> %189, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %191 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %177, \<2 x double\>\l... %190, \<2 x double\> %188)\l  %192 = fadd \<2 x double\> %172, %191\l  %193 = fsub \<2 x double\> %172, %191\l  %194 = extractelement \<2 x double\> %193, i64 1\l  %195 = fsub \<2 x double\> %172, %191\l  %196 = extractelement \<2 x double\> %195, i64 0\l  %197 = fadd \<2 x double\> %149, %192\l  %198 = shufflevector \<2 x double\> %197, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %199 = fsub \<2 x double\> %149, %192\l  %200 = fadd double %151, %196\l  %201 = fsub double %153, %194\l  %202 = fsub double %151, %196\l  %203 = fadd double %153, %194\l  %204 = fadd \<2 x double\> %106, %198\l  %205 = bitcast %struct.COMPLEX* %37 to \<2 x double\>*\l  store \<2 x double\> %204, \<2 x double\>* %205, align 8, !tbaa !5\l  %206 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %37, i64\l... %19, i32 0\l  %207 = fsub \<2 x double\> %106, %198\l  %208 = bitcast double* %206 to \<2 x double\>*\l  store \<2 x double\> %207, \<2 x double\>* %208, align 8, !tbaa !5\l  %209 = insertelement \<2 x double\> poison, double %201, i64 0\l  %210 = shufflevector \<2 x double\> %209, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %211 = insertelement \<2 x double\> poison, double %200, i64 0\l  %212 = shufflevector \<2 x double\> %211, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %213 = fadd \<2 x double\> %210, %212\l  %214 = fsub \<2 x double\> %210, %212\l  %215 = shufflevector \<2 x double\> %213, \<2 x double\> %214, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %216 = fmul \<2 x double\> %215, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %217 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %37, i64\l... %24, i32 0\l  %218 = fadd \<2 x double\> %110, %216\l  %219 = bitcast double* %217 to \<2 x double\>*\l  store \<2 x double\> %218, \<2 x double\>* %219, align 8, !tbaa !5\l  %220 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %37, i64\l... %26, i32 0\l  %221 = fsub \<2 x double\> %110, %216\l  %222 = bitcast double* %220 to \<2 x double\>*\l  store \<2 x double\> %221, \<2 x double\>* %222, align 8, !tbaa !5\l  %223 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %37, i64\l... %21, i32 0\l  %224 = fadd \<2 x double\> %107, %199\l  %225 = fsub \<2 x double\> %107, %199\l  %226 = shufflevector \<2 x double\> %224, \<2 x double\> %225, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %227 = bitcast double* %223 to \<2 x double\>*\l  store \<2 x double\> %226, \<2 x double\>* %227, align 8, !tbaa !5\l  %228 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %37, i64\l... %23, i32 0\l  %229 = shufflevector \<2 x double\> %225, \<2 x double\> %224, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %230 = bitcast double* %228 to \<2 x double\>*\l  store \<2 x double\> %229, \<2 x double\>* %230, align 8, !tbaa !5\l  %231 = insertelement \<2 x double\> poison, double %203, i64 0\l  %232 = shufflevector \<2 x double\> %231, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %233 = insertelement \<2 x double\> poison, double %202, i64 0\l  %234 = shufflevector \<2 x double\> %233, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %235 = fsub \<2 x double\> %232, %234\l  %236 = fadd \<2 x double\> %232, %234\l  %237 = shufflevector \<2 x double\> %235, \<2 x double\> %236, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %238 = fmul \<2 x double\> %237, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %239 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %37, i64\l... %28, i32 0\l  %240 = fadd \<2 x double\> %111, %238\l  %241 = fsub \<2 x double\> %111, %238\l  %242 = shufflevector \<2 x double\> %240, \<2 x double\> %241, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %243 = bitcast double* %239 to \<2 x double\>*\l  store \<2 x double\> %242, \<2 x double\>* %243, align 8, !tbaa !5\l  %244 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %37, i64\l... %30, i32 0\l  %245 = shufflevector \<2 x double\> %241, \<2 x double\> %240, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %246 = bitcast double* %244 to \<2 x double\>*\l  store \<2 x double\> %245, \<2 x double\>* %246, align 8, !tbaa !5\l  %247 = add nsw i64 %35, 1\l  %248 = add i64 %36, %32\l  %249 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %37, i64 1\l  %250 = icmp eq i64 %247, %33\l  br i1 %250, label %257, label %34, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0xbd79d0:s0 -> Node0xbd7a70;
	Node0xbd79d0:s1 -> Node0xbd79d0;
	Node0xbd7a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%251:\l251:                                              \l  %252 = phi i32 [ %254, %251 ], [ %0, %8 ]\l  %253 = add nsw i32 %252, %1\l  %254 = sdiv i32 %253, 2\l  tail call void @fft_twiddle_8(i32 noundef %252, i32 noundef %254,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7)\l  %255 = sub nsw i32 %1, %254\l  %256 = icmp slt i32 %255, 128\l  br i1 %256, label %11, label %251\l|{<s0>T|<s1>F}}"];
	Node0xbd7a20:s0 -> Node0xbd7930;
	Node0xbd7a20:s1 -> Node0xbd7a20;
	Node0xbd7a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%257:\l257:                                              \l  ret void\l}"];
}

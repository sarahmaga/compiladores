digraph "CFG for 'fft_aux' function" {
	label="CFG for 'fft_aux' function";

	Node0xf2ca00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%6:\l  switch i32 %0, label %51 [\l    i32 32, label %7\l    i32 16, label %8\l    i32 8, label %9\l    i32 4, label %10\l    i32 2, label %40\l  ]\l|{<s0>def|<s1>32|<s2>16|<s3>8|<s4>4|<s5>2}}"];
	Node0xf2ca00:s0 -> Node0xf2ccb0;
	Node0xf2ca00:s1 -> Node0xf2cb20;
	Node0xf2ca00:s2 -> Node0xf2cb70;
	Node0xf2ca00:s3 -> Node0xf2cbc0;
	Node0xf2ca00:s4 -> Node0xf2cc10;
	Node0xf2ca00:s5 -> Node0xf2cc60;
	Node0xf2cb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%7:\l7:                                                \l  tail call void @fft_base_32(%struct.COMPLEX* noundef %1, %struct.COMPLEX*\l... noundef %2)\l  br label %87\l}"];
	Node0xf2cb20 -> Node0xf2d250;
	Node0xf2cb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%8:\l8:                                                \l  tail call void @fft_base_16(%struct.COMPLEX* noundef %1, %struct.COMPLEX*\l... noundef %2)\l  br label %87\l}"];
	Node0xf2cb70 -> Node0xf2d250;
	Node0xf2cbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%9:\l9:                                                \l  tail call void @fft_base_8(%struct.COMPLEX* noundef %1, %struct.COMPLEX*\l... noundef %2)\l  br label %87\l}"];
	Node0xf2cbc0 -> Node0xf2d250;
	Node0xf2cc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%10:\l10:                                               \l  %11 = bitcast %struct.COMPLEX* %1 to \<2 x double\>*\l  %12 = load \<2 x double\>, \<2 x double\>* %11, align 8, !tbaa !5\l  %13 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 2,\l... i32 0\l  %14 = bitcast double* %13 to \<2 x double\>*\l  %15 = load \<2 x double\>, \<2 x double\>* %14, align 8, !tbaa !5\l  %16 = fadd \<2 x double\> %12, %15\l  %17 = fsub \<2 x double\> %12, %15\l  %18 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 1,\l... i32 0\l  %19 = bitcast double* %18 to \<2 x double\>*\l  %20 = load \<2 x double\>, \<2 x double\>* %19, align 8, !tbaa !5\l  %21 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 3,\l... i32 0\l  %22 = bitcast double* %21 to \<2 x double\>*\l  %23 = load \<2 x double\>, \<2 x double\>* %22, align 8, !tbaa !5\l  %24 = fadd \<2 x double\> %20, %23\l  %25 = fsub \<2 x double\> %20, %23\l  %26 = shufflevector \<2 x double\> %25, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %27 = fadd \<2 x double\> %16, %24\l  %28 = bitcast %struct.COMPLEX* %2 to \<2 x double\>*\l  store \<2 x double\> %27, \<2 x double\>* %28, align 8, !tbaa !5\l  %29 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 2,\l... i32 0\l  %30 = fsub \<2 x double\> %16, %24\l  %31 = bitcast double* %29 to \<2 x double\>*\l  store \<2 x double\> %30, \<2 x double\>* %31, align 8, !tbaa !5\l  %32 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 1,\l... i32 0\l  %33 = fadd \<2 x double\> %17, %26\l  %34 = fsub \<2 x double\> %17, %26\l  %35 = shufflevector \<2 x double\> %33, \<2 x double\> %34, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %36 = bitcast double* %32 to \<2 x double\>*\l  store \<2 x double\> %35, \<2 x double\>* %36, align 8, !tbaa !5\l  %37 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 3,\l... i32 0\l  %38 = shufflevector \<2 x double\> %34, \<2 x double\> %33, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %39 = bitcast double* %37 to \<2 x double\>*\l  store \<2 x double\> %38, \<2 x double\>* %39, align 8, !tbaa !5\l  br label %87\l}"];
	Node0xf2cc10 -> Node0xf2d250;
	Node0xf2cc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%40:\l40:                                               \l  %41 = bitcast %struct.COMPLEX* %1 to \<2 x double\>*\l  %42 = load \<2 x double\>, \<2 x double\>* %41, align 8, !tbaa !5\l  %43 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 1,\l... i32 0\l  %44 = bitcast double* %43 to \<2 x double\>*\l  %45 = load \<2 x double\>, \<2 x double\>* %44, align 8, !tbaa !5\l  %46 = fadd \<2 x double\> %42, %45\l  %47 = bitcast %struct.COMPLEX* %2 to \<2 x double\>*\l  store \<2 x double\> %46, \<2 x double\>* %47, align 8, !tbaa !5\l  %48 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 1,\l... i32 0\l  %49 = fsub \<2 x double\> %42, %45\l  %50 = bitcast double* %48 to \<2 x double\>*\l  store \<2 x double\> %49, \<2 x double\>* %50, align 8, !tbaa !5\l  br label %87\l}"];
	Node0xf2cc60 -> Node0xf2d250;
	Node0xf2ccb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%51:\l51:                                               \l  %52 = load i32, i32* %3, align 4, !tbaa !9\l  %53 = sdiv i32 %0, %52\l  %54 = icmp slt i32 %52, %0\l  br i1 %54, label %55, label %74\l|{<s0>T|<s1>F}}"];
	Node0xf2ccb0:s0 -> Node0xf2cd00;
	Node0xf2ccb0:s1 -> Node0xf2d020;
	Node0xf2cd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%55:\l55:                                               \l  switch i32 %52, label %61 [\l    i32 32, label %56\l    i32 16, label %57\l    i32 8, label %58\l    i32 4, label %59\l    i32 2, label %60\l  ]\l|{<s0>def|<s1>32|<s2>16|<s3>8|<s4>4|<s5>2}}"];
	Node0xf2cd00:s0 -> Node0xf2cee0;
	Node0xf2cd00:s1 -> Node0xf2cd50;
	Node0xf2cd00:s2 -> Node0xf2cda0;
	Node0xf2cd00:s3 -> Node0xf2cdf0;
	Node0xf2cd00:s4 -> Node0xf2ce40;
	Node0xf2cd00:s5 -> Node0xf2ce90;
	Node0xf2cd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%56:\l56:                                               \l  tail call void @fft_unshuffle_32(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, i32 noundef %53)\l  br label %62\l}"];
	Node0xf2cd50 -> Node0xf2cf30;
	Node0xf2cda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%57:\l57:                                               \l  tail call void @fft_unshuffle_16(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, i32 noundef %53)\l  br label %62\l}"];
	Node0xf2cda0 -> Node0xf2cf30;
	Node0xf2cdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%58:\l58:                                               \l  tail call void @fft_unshuffle_8(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, i32 noundef %53)\l  br label %62\l}"];
	Node0xf2cdf0 -> Node0xf2cf30;
	Node0xf2ce40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%59:\l59:                                               \l  tail call void @fft_unshuffle_4(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, i32 noundef %53)\l  br label %62\l}"];
	Node0xf2ce40 -> Node0xf2cf30;
	Node0xf2ce90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%60:\l60:                                               \l  tail call void @fft_unshuffle_2(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, i32 noundef %53)\l  br label %62\l}"];
	Node0xf2ce90 -> Node0xf2cf30;
	Node0xf2cee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%61:\l61:                                               \l  tail call void @unshuffle(i32 noundef 0, i32 noundef %53, %struct.COMPLEX*\l... noundef %1, %struct.COMPLEX* noundef %2, i32 noundef %52, i32 noundef %53)\l  br label %62\l}"];
	Node0xf2cee0 -> Node0xf2cf30;
	Node0xf2cf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%62:\l62:                                               \l  %63 = icmp sgt i32 %0, 0\l  br i1 %63, label %64, label %74\l|{<s0>T|<s1>F}}"];
	Node0xf2cf30:s0 -> Node0xf2cf80;
	Node0xf2cf30:s1 -> Node0xf2d020;
	Node0xf2cf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%64:\l64:                                               \l  %65 = getelementptr inbounds i32, i32* %3, i64 1\l  %66 = sext i32 %53 to i64\l  %67 = zext i32 %0 to i64\l  br label %68\l}"];
	Node0xf2cf80 -> Node0xf2cfd0;
	Node0xf2cfd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi i64 [ 0, %64 ], [ %72, %68 ]\l  %70 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %69\l  %71 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 %69\l  tail call void @fft_aux(i32 noundef %53, %struct.COMPLEX* noundef %70,\l... %struct.COMPLEX* noundef %71, i32* noundef nonnull %65, %struct.COMPLEX*\l... noundef %4, i32 noundef %5)\l  %72 = add i64 %69, %66\l  %73 = icmp slt i64 %72, %67\l  br i1 %73, label %68, label %74, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0xf2cfd0:s0 -> Node0xf2cfd0;
	Node0xf2cfd0:s1 -> Node0xf2d020;
	Node0xf2d020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%74:\l74:                                               \l  switch i32 %52, label %85 [\l    i32 2, label %75\l    i32 4, label %77\l    i32 8, label %79\l    i32 16, label %81\l    i32 32, label %83\l  ]\l|{<s0>def|<s1>2|<s2>4|<s3>8|<s4>16|<s5>32}}"];
	Node0xf2d020:s0 -> Node0xf2d200;
	Node0xf2d020:s1 -> Node0xf2d070;
	Node0xf2d020:s2 -> Node0xf2d0c0;
	Node0xf2d020:s3 -> Node0xf2d110;
	Node0xf2d020:s4 -> Node0xf2d160;
	Node0xf2d020:s5 -> Node0xf2d1b0;
	Node0xf2d070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%75:\l75:                                               \l  %76 = sdiv i32 %5, %0\l  tail call void @fft_twiddle_2(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %76, i32 noundef %53)\l  br label %87\l}"];
	Node0xf2d070 -> Node0xf2d250;
	Node0xf2d0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%77:\l77:                                               \l  %78 = sdiv i32 %5, %0\l  tail call void @fft_twiddle_4(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %78, i32 noundef %53)\l  br label %87\l}"];
	Node0xf2d0c0 -> Node0xf2d250;
	Node0xf2d110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%79:\l79:                                               \l  %80 = sdiv i32 %5, %0\l  tail call void @fft_twiddle_8(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %80, i32 noundef %53)\l  br label %87\l}"];
	Node0xf2d110 -> Node0xf2d250;
	Node0xf2d160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%81:\l81:                                               \l  %82 = sdiv i32 %5, %0\l  tail call void @fft_twiddle_16(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %82, i32 noundef %53)\l  br label %87\l}"];
	Node0xf2d160 -> Node0xf2d250;
	Node0xf2d1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%83:\l83:                                               \l  %84 = sdiv i32 %5, %0\l  tail call void @fft_twiddle_32(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %84, i32 noundef %53)\l  br label %87\l}"];
	Node0xf2d1b0 -> Node0xf2d250;
	Node0xf2d200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%85:\l85:                                               \l  %86 = sdiv i32 %5, %0\l  tail call void @fft_twiddle_gen(i32 noundef 0, i32 noundef %53,\l... %struct.COMPLEX* noundef %1, %struct.COMPLEX* noundef %2, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %86, i32 noundef %52, i32 noundef %53)\l  br label %87\l}"];
	Node0xf2d200 -> Node0xf2d250;
	Node0xf2d250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%87:\l87:                                               \l  ret void\l}"];
}

digraph "CFG for 'fft_twiddle_32' function" {
	label="CFG for 'fft_twiddle_32' function";

	Node0xc04790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%8:\l  %9 = sub nsw i32 %1, %0\l  %10 = icmp slt i32 %9, 128\l  br i1 %10, label %11, label %1195\l|{<s0>T|<s1>F}}"];
	Node0xc04790:s0 -> Node0xc0f0e0;
	Node0xc04790:s1 -> Node0xc0f1d0;
	Node0xc0f0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%11:\l11:                                               \l  %12 = phi i32 [ %0, %8 ], [ %1198, %1195 ]\l  %13 = icmp slt i32 %12, %1\l  br i1 %13, label %14, label %1201\l|{<s0>T|<s1>F}}"];
	Node0xc0f0e0:s0 -> Node0xc0f130;
	Node0xc0f0e0:s1 -> Node0xc0f220;
	Node0xc0f130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %15\l  %17 = mul i32 %12, %6\l  %18 = shl nsw i32 %7, 4\l  %19 = sext i32 %18 to i64\l  %20 = shl nsw i32 %7, 3\l  %21 = sext i32 %20 to i64\l  %22 = mul nsw i32 %7, 24\l  %23 = sext i32 %22 to i64\l  %24 = shl nsw i32 %7, 2\l  %25 = sext i32 %24 to i64\l  %26 = mul nsw i32 %7, 20\l  %27 = sext i32 %26 to i64\l  %28 = mul nsw i32 %7, 12\l  %29 = sext i32 %28 to i64\l  %30 = mul nsw i32 %7, 28\l  %31 = sext i32 %30 to i64\l  %32 = shl nsw i32 %7, 1\l  %33 = sext i32 %32 to i64\l  %34 = mul nsw i32 %7, 18\l  %35 = sext i32 %34 to i64\l  %36 = mul nsw i32 %7, 10\l  %37 = sext i32 %36 to i64\l  %38 = mul nsw i32 %7, 26\l  %39 = sext i32 %38 to i64\l  %40 = mul nsw i32 %7, 6\l  %41 = sext i32 %40 to i64\l  %42 = mul nsw i32 %7, 22\l  %43 = sext i32 %42 to i64\l  %44 = mul nsw i32 %7, 14\l  %45 = sext i32 %44 to i64\l  %46 = mul nsw i32 %7, 30\l  %47 = sext i32 %46 to i64\l  %48 = sext i32 %7 to i64\l  %49 = mul nsw i32 %7, 17\l  %50 = sext i32 %49 to i64\l  %51 = mul nsw i32 %7, 9\l  %52 = sext i32 %51 to i64\l  %53 = mul nsw i32 %7, 25\l  %54 = sext i32 %53 to i64\l  %55 = mul nsw i32 %7, 5\l  %56 = sext i32 %55 to i64\l  %57 = mul nsw i32 %7, 21\l  %58 = sext i32 %57 to i64\l  %59 = mul nsw i32 %7, 13\l  %60 = sext i32 %59 to i64\l  %61 = mul nsw i32 %7, 29\l  %62 = sext i32 %61 to i64\l  %63 = mul nsw i32 %7, 3\l  %64 = sext i32 %63 to i64\l  %65 = mul nsw i32 %7, 19\l  %66 = sext i32 %65 to i64\l  %67 = mul nsw i32 %7, 11\l  %68 = sext i32 %67 to i64\l  %69 = mul nsw i32 %7, 27\l  %70 = sext i32 %69 to i64\l  %71 = mul nsw i32 %7, 7\l  %72 = sext i32 %71 to i64\l  %73 = mul nsw i32 %7, 23\l  %74 = sext i32 %73 to i64\l  %75 = mul nsw i32 %7, 15\l  %76 = sext i32 %75 to i64\l  %77 = mul nsw i32 %7, 31\l  %78 = sext i32 %77 to i64\l  %79 = sext i32 %17 to i64\l  %80 = sext i32 %6 to i64\l  %81 = sext i32 %1 to i64\l  br label %82\l}"];
	Node0xc0f130 -> Node0xc0f180;
	Node0xc0f180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = phi i64 [ %15, %14 ], [ %1191, %82 ]\l  %84 = phi i64 [ %79, %14 ], [ %1192, %82 ]\l  %85 = phi %struct.COMPLEX* [ %16, %14 ], [ %1193, %82 ]\l  %86 = trunc i64 %84 to i32\l  %87 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %83\l  %88 = bitcast %struct.COMPLEX* %87 to \<2 x double\>*\l  %89 = load \<2 x double\>, \<2 x double\>* %88, align 8, !tbaa !5\l  %90 = shl nsw i32 %86, 4\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %91,\l... i32 0\l  %93 = bitcast double* %92 to \<2 x double\>*\l  %94 = load \<2 x double\>, \<2 x double\>* %93, align 8, !tbaa !5\l  %95 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %19\l  %96 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %95, i64 0,\l... i32 0\l  %97 = load double, double* %96, align 8, !tbaa !9\l  %98 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %95, i64 0,\l... i32 1\l  %99 = load double, double* %98, align 8, !tbaa !11\l  %100 = extractelement \<2 x double\> %94, i64 1\l  %101 = fneg double %100\l  %102 = insertelement \<2 x double\> poison, double %99, i64 0\l  %103 = shufflevector \<2 x double\> %102, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %104 = insertelement \<2 x double\> %94, double %101, i64 1\l  %105 = fmul \<2 x double\> %103, %104\l  %106 = shufflevector \<2 x double\> %105, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %107 = insertelement \<2 x double\> poison, double %97, i64 0\l  %108 = shufflevector \<2 x double\> %107, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %109 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %94, \<2 x double\>\l... %108, \<2 x double\> %106)\l  %110 = fadd \<2 x double\> %89, %109\l  %111 = fsub \<2 x double\> %89, %109\l  %112 = shl nsw i32 %86, 3\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %113, i32 0\l  %115 = bitcast double* %114 to \<2 x double\>*\l  %116 = load \<2 x double\>, \<2 x double\>* %115, align 8, !tbaa !5\l  %117 = shufflevector \<2 x double\> %116, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %118 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %21\l  %119 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %118, i64 0,\l... i32 0\l  %120 = load double, double* %119, align 8, !tbaa !9\l  %121 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %118, i64 0,\l... i32 1\l  %122 = load double, double* %121, align 8, !tbaa !11\l  %123 = extractelement \<2 x double\> %116, i64 1\l  %124 = fneg double %123\l  %125 = insertelement \<2 x double\> poison, double %122, i64 0\l  %126 = shufflevector \<2 x double\> %125, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %127 = insertelement \<2 x double\> %116, double %124, i64 1\l  %128 = fmul \<2 x double\> %126, %127\l  %129 = insertelement \<2 x double\> poison, double %120, i64 0\l  %130 = shufflevector \<2 x double\> %129, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %131 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %117, \<2 x double\>\l... %130, \<2 x double\> %128)\l  %132 = mul nsw i64 %84, 24\l  %133 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %132, i32 0\l  %134 = bitcast double* %133 to \<2 x double\>*\l  %135 = load \<2 x double\>, \<2 x double\>* %134, align 8, !tbaa !5\l  %136 = shufflevector \<2 x double\> %135, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %137 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %23\l  %138 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %137, i64 0,\l... i32 0\l  %139 = load double, double* %138, align 8, !tbaa !9\l  %140 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %137, i64 0,\l... i32 1\l  %141 = load double, double* %140, align 8, !tbaa !11\l  %142 = extractelement \<2 x double\> %135, i64 1\l  %143 = fneg double %142\l  %144 = insertelement \<2 x double\> poison, double %141, i64 0\l  %145 = shufflevector \<2 x double\> %144, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %146 = insertelement \<2 x double\> %135, double %143, i64 1\l  %147 = fmul \<2 x double\> %145, %146\l  %148 = insertelement \<2 x double\> poison, double %139, i64 0\l  %149 = shufflevector \<2 x double\> %148, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %150 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %136, \<2 x double\>\l... %149, \<2 x double\> %147)\l  %151 = fadd \<2 x double\> %131, %150\l  %152 = shufflevector \<2 x double\> %151, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %153 = fsub \<2 x double\> %131, %150\l  %154 = fadd \<2 x double\> %110, %152\l  %155 = fsub \<2 x double\> %110, %152\l  %156 = fadd \<2 x double\> %111, %153\l  %157 = fsub \<2 x double\> %111, %153\l  %158 = shufflevector \<2 x double\> %156, \<2 x double\> %157, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %159 = shufflevector \<2 x double\> %157, \<2 x double\> %156, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %160 = shl nsw i32 %86, 2\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %161, i32 0\l  %163 = bitcast double* %162 to \<2 x double\>*\l  %164 = load \<2 x double\>, \<2 x double\>* %163, align 8, !tbaa !5\l  %165 = shufflevector \<2 x double\> %164, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %166 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %25\l  %167 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %166, i64 0,\l... i32 0\l  %168 = load double, double* %167, align 8, !tbaa !9\l  %169 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %166, i64 0,\l... i32 1\l  %170 = load double, double* %169, align 8, !tbaa !11\l  %171 = extractelement \<2 x double\> %164, i64 1\l  %172 = fneg double %171\l  %173 = insertelement \<2 x double\> poison, double %170, i64 0\l  %174 = shufflevector \<2 x double\> %173, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %175 = insertelement \<2 x double\> %164, double %172, i64 1\l  %176 = fmul \<2 x double\> %174, %175\l  %177 = insertelement \<2 x double\> poison, double %168, i64 0\l  %178 = shufflevector \<2 x double\> %177, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %179 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %165, \<2 x double\>\l... %178, \<2 x double\> %176)\l  %180 = mul nsw i64 %84, 20\l  %181 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %180, i32 0\l  %182 = bitcast double* %181 to \<2 x double\>*\l  %183 = load \<2 x double\>, \<2 x double\>* %182, align 8, !tbaa !5\l  %184 = shufflevector \<2 x double\> %183, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %185 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %27\l  %186 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %185, i64 0,\l... i32 0\l  %187 = load double, double* %186, align 8, !tbaa !9\l  %188 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %185, i64 0,\l... i32 1\l  %189 = load double, double* %188, align 8, !tbaa !11\l  %190 = extractelement \<2 x double\> %183, i64 1\l  %191 = fneg double %190\l  %192 = insertelement \<2 x double\> poison, double %189, i64 0\l  %193 = shufflevector \<2 x double\> %192, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %194 = insertelement \<2 x double\> %183, double %191, i64 1\l  %195 = fmul \<2 x double\> %193, %194\l  %196 = insertelement \<2 x double\> poison, double %187, i64 0\l  %197 = shufflevector \<2 x double\> %196, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %198 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %184, \<2 x double\>\l... %197, \<2 x double\> %195)\l  %199 = fadd \<2 x double\> %179, %198\l  %200 = fsub \<2 x double\> %179, %198\l  %201 = extractelement \<2 x double\> %200, i64 1\l  %202 = fsub \<2 x double\> %179, %198\l  %203 = extractelement \<2 x double\> %202, i64 0\l  %204 = mul nsw i64 %84, 12\l  %205 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %204, i32 0\l  %206 = bitcast double* %205 to \<2 x double\>*\l  %207 = load \<2 x double\>, \<2 x double\>* %206, align 8, !tbaa !5\l  %208 = shufflevector \<2 x double\> %207, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %209 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %29\l  %210 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %209, i64 0,\l... i32 0\l  %211 = load double, double* %210, align 8, !tbaa !9\l  %212 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %209, i64 0,\l... i32 1\l  %213 = load double, double* %212, align 8, !tbaa !11\l  %214 = extractelement \<2 x double\> %207, i64 1\l  %215 = fneg double %214\l  %216 = insertelement \<2 x double\> poison, double %213, i64 0\l  %217 = shufflevector \<2 x double\> %216, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %218 = insertelement \<2 x double\> %207, double %215, i64 1\l  %219 = fmul \<2 x double\> %217, %218\l  %220 = insertelement \<2 x double\> poison, double %211, i64 0\l  %221 = shufflevector \<2 x double\> %220, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %222 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %208, \<2 x double\>\l... %221, \<2 x double\> %219)\l  %223 = mul nsw i64 %84, 28\l  %224 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %223, i32 0\l  %225 = bitcast double* %224 to \<2 x double\>*\l  %226 = load \<2 x double\>, \<2 x double\>* %225, align 8, !tbaa !5\l  %227 = shufflevector \<2 x double\> %226, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %228 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %31\l  %229 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %228, i64 0,\l... i32 0\l  %230 = load double, double* %229, align 8, !tbaa !9\l  %231 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %228, i64 0,\l... i32 1\l  %232 = load double, double* %231, align 8, !tbaa !11\l  %233 = extractelement \<2 x double\> %226, i64 1\l  %234 = fneg double %233\l  %235 = insertelement \<2 x double\> poison, double %232, i64 0\l  %236 = shufflevector \<2 x double\> %235, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %237 = insertelement \<2 x double\> %226, double %234, i64 1\l  %238 = fmul \<2 x double\> %236, %237\l  %239 = insertelement \<2 x double\> poison, double %230, i64 0\l  %240 = shufflevector \<2 x double\> %239, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %241 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %227, \<2 x double\>\l... %240, \<2 x double\> %238)\l  %242 = fadd \<2 x double\> %222, %241\l  %243 = fsub \<2 x double\> %222, %241\l  %244 = extractelement \<2 x double\> %243, i64 1\l  %245 = fsub \<2 x double\> %222, %241\l  %246 = extractelement \<2 x double\> %245, i64 0\l  %247 = fadd \<2 x double\> %199, %242\l  %248 = shufflevector \<2 x double\> %247, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %249 = fsub \<2 x double\> %199, %242\l  %250 = fadd double %201, %246\l  %251 = fsub double %203, %244\l  %252 = fsub double %201, %246\l  %253 = fadd double %203, %244\l  %254 = fadd \<2 x double\> %154, %248\l  %255 = fsub \<2 x double\> %154, %248\l  %256 = insertelement \<2 x double\> poison, double %251, i64 0\l  %257 = shufflevector \<2 x double\> %256, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %258 = insertelement \<2 x double\> poison, double %250, i64 0\l  %259 = shufflevector \<2 x double\> %258, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %260 = fadd \<2 x double\> %257, %259\l  %261 = fsub \<2 x double\> %257, %259\l  %262 = shufflevector \<2 x double\> %260, \<2 x double\> %261, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %263 = fmul \<2 x double\> %262, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %264 = fadd \<2 x double\> %158, %263\l  %265 = fsub \<2 x double\> %158, %263\l  %266 = fadd \<2 x double\> %155, %249\l  %267 = fsub \<2 x double\> %155, %249\l  %268 = shufflevector \<2 x double\> %266, \<2 x double\> %267, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %269 = shufflevector \<2 x double\> %267, \<2 x double\> %266, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %270 = insertelement \<2 x double\> poison, double %253, i64 0\l  %271 = shufflevector \<2 x double\> %270, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %272 = insertelement \<2 x double\> poison, double %252, i64 0\l  %273 = shufflevector \<2 x double\> %272, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %274 = fsub \<2 x double\> %271, %273\l  %275 = fadd \<2 x double\> %271, %273\l  %276 = shufflevector \<2 x double\> %274, \<2 x double\> %275, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %277 = fmul \<2 x double\> %276, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %278 = fadd \<2 x double\> %159, %277\l  %279 = fsub \<2 x double\> %159, %277\l  %280 = shufflevector \<2 x double\> %278, \<2 x double\> %279, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %281 = shufflevector \<2 x double\> %279, \<2 x double\> %278, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %282 = shl nsw i32 %86, 1\l  %283 = sext i32 %282 to i64\l  %284 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %283, i32 0\l  %285 = bitcast double* %284 to \<2 x double\>*\l  %286 = load \<2 x double\>, \<2 x double\>* %285, align 8, !tbaa !5\l  %287 = shufflevector \<2 x double\> %286, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %288 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %33\l  %289 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %288, i64 0,\l... i32 0\l  %290 = load double, double* %289, align 8, !tbaa !9\l  %291 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %288, i64 0,\l... i32 1\l  %292 = load double, double* %291, align 8, !tbaa !11\l  %293 = extractelement \<2 x double\> %286, i64 1\l  %294 = fneg double %293\l  %295 = insertelement \<2 x double\> poison, double %292, i64 0\l  %296 = shufflevector \<2 x double\> %295, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %297 = insertelement \<2 x double\> %286, double %294, i64 1\l  %298 = fmul \<2 x double\> %296, %297\l  %299 = insertelement \<2 x double\> poison, double %290, i64 0\l  %300 = shufflevector \<2 x double\> %299, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %301 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %287, \<2 x double\>\l... %300, \<2 x double\> %298)\l  %302 = mul nsw i64 %84, 18\l  %303 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %302, i32 0\l  %304 = bitcast double* %303 to \<2 x double\>*\l  %305 = load \<2 x double\>, \<2 x double\>* %304, align 8, !tbaa !5\l  %306 = shufflevector \<2 x double\> %305, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %307 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %35\l  %308 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %307, i64 0,\l... i32 0\l  %309 = load double, double* %308, align 8, !tbaa !9\l  %310 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %307, i64 0,\l... i32 1\l  %311 = load double, double* %310, align 8, !tbaa !11\l  %312 = extractelement \<2 x double\> %305, i64 1\l  %313 = fneg double %312\l  %314 = insertelement \<2 x double\> poison, double %311, i64 0\l  %315 = shufflevector \<2 x double\> %314, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %316 = insertelement \<2 x double\> %305, double %313, i64 1\l  %317 = fmul \<2 x double\> %315, %316\l  %318 = insertelement \<2 x double\> poison, double %309, i64 0\l  %319 = shufflevector \<2 x double\> %318, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %320 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %306, \<2 x double\>\l... %319, \<2 x double\> %317)\l  %321 = fadd \<2 x double\> %301, %320\l  %322 = fsub \<2 x double\> %301, %320\l  %323 = mul nsw i64 %84, 10\l  %324 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %323, i32 0\l  %325 = bitcast double* %324 to \<2 x double\>*\l  %326 = load \<2 x double\>, \<2 x double\>* %325, align 8, !tbaa !5\l  %327 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %37\l  %328 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %327, i64 0,\l... i32 0\l  %329 = load double, double* %328, align 8, !tbaa !9\l  %330 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %327, i64 0,\l... i32 1\l  %331 = load double, double* %330, align 8, !tbaa !11\l  %332 = extractelement \<2 x double\> %326, i64 1\l  %333 = fneg double %332\l  %334 = insertelement \<2 x double\> poison, double %331, i64 0\l  %335 = shufflevector \<2 x double\> %334, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %336 = insertelement \<2 x double\> %326, double %333, i64 1\l  %337 = fmul \<2 x double\> %335, %336\l  %338 = shufflevector \<2 x double\> %337, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %339 = insertelement \<2 x double\> poison, double %329, i64 0\l  %340 = shufflevector \<2 x double\> %339, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %341 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %326, \<2 x double\>\l... %340, \<2 x double\> %338)\l  %342 = mul nsw i64 %84, 26\l  %343 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %342, i32 0\l  %344 = bitcast double* %343 to \<2 x double\>*\l  %345 = load \<2 x double\>, \<2 x double\>* %344, align 8, !tbaa !5\l  %346 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %39\l  %347 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %346, i64 0,\l... i32 0\l  %348 = load double, double* %347, align 8, !tbaa !9\l  %349 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %346, i64 0,\l... i32 1\l  %350 = load double, double* %349, align 8, !tbaa !11\l  %351 = extractelement \<2 x double\> %345, i64 1\l  %352 = fneg double %351\l  %353 = insertelement \<2 x double\> poison, double %350, i64 0\l  %354 = shufflevector \<2 x double\> %353, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %355 = insertelement \<2 x double\> %345, double %352, i64 1\l  %356 = fmul \<2 x double\> %354, %355\l  %357 = shufflevector \<2 x double\> %356, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %358 = insertelement \<2 x double\> poison, double %348, i64 0\l  %359 = shufflevector \<2 x double\> %358, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %360 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %345, \<2 x double\>\l... %359, \<2 x double\> %357)\l  %361 = fadd \<2 x double\> %341, %360\l  %362 = shufflevector \<2 x double\> %361, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %363 = fsub \<2 x double\> %341, %360\l  %364 = fadd \<2 x double\> %321, %362\l  %365 = fsub \<2 x double\> %321, %362\l  %366 = extractelement \<2 x double\> %365, i64 1\l  %367 = fsub \<2 x double\> %321, %362\l  %368 = extractelement \<2 x double\> %367, i64 0\l  %369 = fsub \<2 x double\> %322, %363\l  %370 = fadd \<2 x double\> %322, %363\l  %371 = shufflevector \<2 x double\> %369, \<2 x double\> %370, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %372 = shufflevector \<2 x double\> %370, \<2 x double\> %369, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %373 = mul nsw i64 %84, 6\l  %374 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %373, i32 0\l  %375 = bitcast double* %374 to \<2 x double\>*\l  %376 = load \<2 x double\>, \<2 x double\>* %375, align 8, !tbaa !5\l  %377 = shufflevector \<2 x double\> %376, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %378 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %41\l  %379 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %378, i64 0,\l... i32 0\l  %380 = load double, double* %379, align 8, !tbaa !9\l  %381 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %378, i64 0,\l... i32 1\l  %382 = load double, double* %381, align 8, !tbaa !11\l  %383 = extractelement \<2 x double\> %376, i64 1\l  %384 = fneg double %383\l  %385 = insertelement \<2 x double\> poison, double %382, i64 0\l  %386 = shufflevector \<2 x double\> %385, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %387 = insertelement \<2 x double\> %376, double %384, i64 1\l  %388 = fmul \<2 x double\> %386, %387\l  %389 = insertelement \<2 x double\> poison, double %380, i64 0\l  %390 = shufflevector \<2 x double\> %389, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %391 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %377, \<2 x double\>\l... %390, \<2 x double\> %388)\l  %392 = mul nsw i64 %84, 22\l  %393 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %392, i32 0\l  %394 = bitcast double* %393 to \<2 x double\>*\l  %395 = load \<2 x double\>, \<2 x double\>* %394, align 8, !tbaa !5\l  %396 = shufflevector \<2 x double\> %395, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %397 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %43\l  %398 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %397, i64 0,\l... i32 0\l  %399 = load double, double* %398, align 8, !tbaa !9\l  %400 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %397, i64 0,\l... i32 1\l  %401 = load double, double* %400, align 8, !tbaa !11\l  %402 = extractelement \<2 x double\> %395, i64 1\l  %403 = fneg double %402\l  %404 = insertelement \<2 x double\> poison, double %401, i64 0\l  %405 = shufflevector \<2 x double\> %404, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %406 = insertelement \<2 x double\> %395, double %403, i64 1\l  %407 = fmul \<2 x double\> %405, %406\l  %408 = insertelement \<2 x double\> poison, double %399, i64 0\l  %409 = shufflevector \<2 x double\> %408, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %410 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %396, \<2 x double\>\l... %409, \<2 x double\> %407)\l  %411 = fadd \<2 x double\> %391, %410\l  %412 = fsub \<2 x double\> %391, %410\l  %413 = extractelement \<2 x double\> %412, i64 1\l  %414 = fsub \<2 x double\> %391, %410\l  %415 = extractelement \<2 x double\> %414, i64 0\l  %416 = mul nsw i64 %84, 14\l  %417 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %416, i32 0\l  %418 = bitcast double* %417 to \<2 x double\>*\l  %419 = load \<2 x double\>, \<2 x double\>* %418, align 8, !tbaa !5\l  %420 = shufflevector \<2 x double\> %419, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %421 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %45\l  %422 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %421, i64 0,\l... i32 0\l  %423 = load double, double* %422, align 8, !tbaa !9\l  %424 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %421, i64 0,\l... i32 1\l  %425 = load double, double* %424, align 8, !tbaa !11\l  %426 = extractelement \<2 x double\> %419, i64 1\l  %427 = fneg double %426\l  %428 = insertelement \<2 x double\> poison, double %425, i64 0\l  %429 = shufflevector \<2 x double\> %428, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %430 = insertelement \<2 x double\> %419, double %427, i64 1\l  %431 = fmul \<2 x double\> %429, %430\l  %432 = insertelement \<2 x double\> poison, double %423, i64 0\l  %433 = shufflevector \<2 x double\> %432, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %434 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %420, \<2 x double\>\l... %433, \<2 x double\> %431)\l  %435 = mul nsw i64 %84, 30\l  %436 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %435, i32 0\l  %437 = bitcast double* %436 to \<2 x double\>*\l  %438 = load \<2 x double\>, \<2 x double\>* %437, align 8, !tbaa !5\l  %439 = shufflevector \<2 x double\> %438, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %440 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %47\l  %441 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %440, i64 0,\l... i32 0\l  %442 = load double, double* %441, align 8, !tbaa !9\l  %443 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %440, i64 0,\l... i32 1\l  %444 = load double, double* %443, align 8, !tbaa !11\l  %445 = extractelement \<2 x double\> %438, i64 1\l  %446 = fneg double %445\l  %447 = insertelement \<2 x double\> poison, double %444, i64 0\l  %448 = shufflevector \<2 x double\> %447, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %449 = insertelement \<2 x double\> %438, double %446, i64 1\l  %450 = fmul \<2 x double\> %448, %449\l  %451 = insertelement \<2 x double\> poison, double %442, i64 0\l  %452 = shufflevector \<2 x double\> %451, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %453 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %439, \<2 x double\>\l... %452, \<2 x double\> %450)\l  %454 = fadd \<2 x double\> %434, %453\l  %455 = fsub \<2 x double\> %434, %453\l  %456 = extractelement \<2 x double\> %455, i64 1\l  %457 = fsub \<2 x double\> %434, %453\l  %458 = extractelement \<2 x double\> %457, i64 0\l  %459 = fadd \<2 x double\> %411, %454\l  %460 = fsub \<2 x double\> %411, %454\l  %461 = extractelement \<2 x double\> %460, i64 1\l  %462 = fsub \<2 x double\> %411, %454\l  %463 = extractelement \<2 x double\> %462, i64 0\l  %464 = fadd double %413, %458\l  %465 = fsub double %415, %456\l  %466 = fsub double %413, %458\l  %467 = fadd double %415, %456\l  %468 = fadd \<2 x double\> %364, %459\l  %469 = shufflevector \<2 x double\> %468, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %470 = fsub \<2 x double\> %364, %459\l  %471 = insertelement \<2 x double\> poison, double %465, i64 0\l  %472 = shufflevector \<2 x double\> %471, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %473 = insertelement \<2 x double\> poison, double %464, i64 0\l  %474 = shufflevector \<2 x double\> %473, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %475 = fsub \<2 x double\> %472, %474\l  %476 = fadd \<2 x double\> %472, %474\l  %477 = shufflevector \<2 x double\> %475, \<2 x double\> %476, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %478 = fmul \<2 x double\> %477, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %479 = fadd \<2 x double\> %371, %478\l  %480 = shufflevector \<2 x double\> %479, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %481 = fsub \<2 x double\> %371, %478\l  %482 = fadd double %366, %463\l  %483 = fsub double %368, %461\l  %484 = fsub double %366, %463\l  %485 = fadd double %368, %461\l  %486 = insertelement \<2 x double\> poison, double %467, i64 0\l  %487 = shufflevector \<2 x double\> %486, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %488 = insertelement \<2 x double\> poison, double %466, i64 0\l  %489 = shufflevector \<2 x double\> %488, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %490 = fadd \<2 x double\> %487, %489\l  %491 = fsub \<2 x double\> %487, %489\l  %492 = shufflevector \<2 x double\> %490, \<2 x double\> %491, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %493 = fmul \<2 x double\> %492, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %494 = fadd \<2 x double\> %372, %493\l  %495 = fsub \<2 x double\> %372, %493\l  %496 = shufflevector \<2 x double\> %494, \<2 x double\> %495, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %497 = shufflevector \<2 x double\> %494, \<2 x double\> %495, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %498 = fadd \<2 x double\> %254, %469\l  %499 = fsub \<2 x double\> %254, %469\l  %500 = fmul \<2 x double\> %479, \<double 0x3FD87DE2A6AEA312, double\l... 0xBFD87DE2A6AEA312\>\l  %501 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %480, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %500)\l  %502 = fadd \<2 x double\> %264, %501\l  %503 = fsub \<2 x double\> %264, %501\l  %504 = insertelement \<2 x double\> poison, double %483, i64 0\l  %505 = shufflevector \<2 x double\> %504, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %506 = insertelement \<2 x double\> poison, double %482, i64 0\l  %507 = shufflevector \<2 x double\> %506, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %508 = fadd \<2 x double\> %505, %507\l  %509 = fsub \<2 x double\> %505, %507\l  %510 = shufflevector \<2 x double\> %508, \<2 x double\> %509, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %511 = fmul \<2 x double\> %510, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %512 = fadd \<2 x double\> %268, %511\l  %513 = fsub \<2 x double\> %268, %511\l  %514 = shufflevector \<2 x double\> %495, \<2 x double\> %494, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %515 = fmul \<2 x double\> %514, \<double 0x3FED906BCF32832F, double\l... 0xBFED906BCF32832F\>\l  %516 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %496, \<2 x double\>\l... \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\> %515)\l  %517 = fadd \<2 x double\> %280, %516\l  %518 = fsub \<2 x double\> %280, %516\l  %519 = fadd \<2 x double\> %255, %470\l  %520 = fsub \<2 x double\> %255, %470\l  %521 = shufflevector \<2 x double\> %519, \<2 x double\> %520, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %522 = shufflevector \<2 x double\> %520, \<2 x double\> %519, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %523 = fmul \<2 x double\> %481, \<double 0x3FD87DE2A6AEA312, double\l... 0xBFD87DE2A6AEA312\>\l  %524 = shufflevector \<2 x double\> %523, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %525 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %481, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %524)\l  %526 = fadd \<2 x double\> %265, %525\l  %527 = fsub \<2 x double\> %265, %525\l  %528 = shufflevector \<2 x double\> %526, \<2 x double\> %527, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %529 = shufflevector \<2 x double\> %527, \<2 x double\> %526, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %530 = insertelement \<2 x double\> poison, double %485, i64 0\l  %531 = shufflevector \<2 x double\> %530, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %532 = insertelement \<2 x double\> poison, double %484, i64 0\l  %533 = shufflevector \<2 x double\> %532, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %534 = fsub \<2 x double\> %531, %533\l  %535 = fadd \<2 x double\> %531, %533\l  %536 = shufflevector \<2 x double\> %534, \<2 x double\> %535, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %537 = fmul \<2 x double\> %536, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %538 = fadd \<2 x double\> %269, %537\l  %539 = fsub \<2 x double\> %269, %537\l  %540 = shufflevector \<2 x double\> %538, \<2 x double\> %539, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %541 = shufflevector \<2 x double\> %539, \<2 x double\> %538, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %542 = shufflevector \<2 x double\> %495, \<2 x double\> %494, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %543 = fmul \<2 x double\> %542, \<double 0xBFED906BCF32832F, double\l... 0x3FED906BCF32832F\>\l  %544 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %497, \<2 x double\>\l... \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\> %543)\l  %545 = fadd \<2 x double\> %281, %544\l  %546 = fsub \<2 x double\> %281, %544\l  %547 = shufflevector \<2 x double\> %545, \<2 x double\> %546, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %548 = shufflevector \<2 x double\> %546, \<2 x double\> %545, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %549 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %84,\l... i32 0\l  %550 = bitcast double* %549 to \<2 x double\>*\l  %551 = load \<2 x double\>, \<2 x double\>* %550, align 8, !tbaa !5\l  %552 = shufflevector \<2 x double\> %551, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %553 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %48\l  %554 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %553, i64 0,\l... i32 0\l  %555 = load double, double* %554, align 8, !tbaa !9\l  %556 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %553, i64 0,\l... i32 1\l  %557 = load double, double* %556, align 8, !tbaa !11\l  %558 = extractelement \<2 x double\> %551, i64 1\l  %559 = fneg double %558\l  %560 = insertelement \<2 x double\> poison, double %557, i64 0\l  %561 = shufflevector \<2 x double\> %560, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %562 = insertelement \<2 x double\> %551, double %559, i64 1\l  %563 = fmul \<2 x double\> %561, %562\l  %564 = insertelement \<2 x double\> poison, double %555, i64 0\l  %565 = shufflevector \<2 x double\> %564, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %566 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %552, \<2 x double\>\l... %565, \<2 x double\> %563)\l  %567 = mul nsw i64 %84, 17\l  %568 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %567, i32 0\l  %569 = bitcast double* %568 to \<2 x double\>*\l  %570 = load \<2 x double\>, \<2 x double\>* %569, align 8, !tbaa !5\l  %571 = shufflevector \<2 x double\> %570, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %572 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %50\l  %573 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %572, i64 0,\l... i32 0\l  %574 = load double, double* %573, align 8, !tbaa !9\l  %575 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %572, i64 0,\l... i32 1\l  %576 = load double, double* %575, align 8, !tbaa !11\l  %577 = extractelement \<2 x double\> %570, i64 1\l  %578 = fneg double %577\l  %579 = insertelement \<2 x double\> poison, double %576, i64 0\l  %580 = shufflevector \<2 x double\> %579, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %581 = insertelement \<2 x double\> %570, double %578, i64 1\l  %582 = fmul \<2 x double\> %580, %581\l  %583 = insertelement \<2 x double\> poison, double %574, i64 0\l  %584 = shufflevector \<2 x double\> %583, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %585 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %571, \<2 x double\>\l... %584, \<2 x double\> %582)\l  %586 = fadd \<2 x double\> %566, %585\l  %587 = fsub \<2 x double\> %566, %585\l  %588 = mul nsw i64 %84, 9\l  %589 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %588, i32 0\l  %590 = bitcast double* %589 to \<2 x double\>*\l  %591 = load \<2 x double\>, \<2 x double\>* %590, align 8, !tbaa !5\l  %592 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %52\l  %593 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %592, i64 0,\l... i32 0\l  %594 = load double, double* %593, align 8, !tbaa !9\l  %595 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %592, i64 0,\l... i32 1\l  %596 = load double, double* %595, align 8, !tbaa !11\l  %597 = extractelement \<2 x double\> %591, i64 1\l  %598 = fneg double %597\l  %599 = insertelement \<2 x double\> poison, double %596, i64 0\l  %600 = shufflevector \<2 x double\> %599, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %601 = insertelement \<2 x double\> %591, double %598, i64 1\l  %602 = fmul \<2 x double\> %600, %601\l  %603 = shufflevector \<2 x double\> %602, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %604 = insertelement \<2 x double\> poison, double %594, i64 0\l  %605 = shufflevector \<2 x double\> %604, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %606 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %591, \<2 x double\>\l... %605, \<2 x double\> %603)\l  %607 = mul nsw i64 %84, 25\l  %608 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %607, i32 0\l  %609 = bitcast double* %608 to \<2 x double\>*\l  %610 = load \<2 x double\>, \<2 x double\>* %609, align 8, !tbaa !5\l  %611 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %54\l  %612 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %611, i64 0,\l... i32 0\l  %613 = load double, double* %612, align 8, !tbaa !9\l  %614 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %611, i64 0,\l... i32 1\l  %615 = load double, double* %614, align 8, !tbaa !11\l  %616 = extractelement \<2 x double\> %610, i64 1\l  %617 = fneg double %616\l  %618 = insertelement \<2 x double\> poison, double %615, i64 0\l  %619 = shufflevector \<2 x double\> %618, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %620 = insertelement \<2 x double\> %610, double %617, i64 1\l  %621 = fmul \<2 x double\> %619, %620\l  %622 = shufflevector \<2 x double\> %621, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %623 = insertelement \<2 x double\> poison, double %613, i64 0\l  %624 = shufflevector \<2 x double\> %623, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %625 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %610, \<2 x double\>\l... %624, \<2 x double\> %622)\l  %626 = fadd \<2 x double\> %606, %625\l  %627 = shufflevector \<2 x double\> %626, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %628 = fsub \<2 x double\> %606, %625\l  %629 = fadd \<2 x double\> %586, %627\l  %630 = fsub \<2 x double\> %586, %627\l  %631 = fsub \<2 x double\> %587, %628\l  %632 = fadd \<2 x double\> %587, %628\l  %633 = shufflevector \<2 x double\> %631, \<2 x double\> %632, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %634 = shufflevector \<2 x double\> %632, \<2 x double\> %631, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %635 = mul nsw i64 %84, 5\l  %636 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %635, i32 0\l  %637 = bitcast double* %636 to \<2 x double\>*\l  %638 = load \<2 x double\>, \<2 x double\>* %637, align 8, !tbaa !5\l  %639 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %56\l  %640 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %639, i64 0,\l... i32 0\l  %641 = load double, double* %640, align 8, !tbaa !9\l  %642 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %639, i64 0,\l... i32 1\l  %643 = load double, double* %642, align 8, !tbaa !11\l  %644 = extractelement \<2 x double\> %638, i64 1\l  %645 = fneg double %644\l  %646 = insertelement \<2 x double\> poison, double %643, i64 0\l  %647 = shufflevector \<2 x double\> %646, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %648 = insertelement \<2 x double\> %638, double %645, i64 1\l  %649 = fmul \<2 x double\> %647, %648\l  %650 = shufflevector \<2 x double\> %649, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %651 = insertelement \<2 x double\> poison, double %641, i64 0\l  %652 = shufflevector \<2 x double\> %651, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %653 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %638, \<2 x double\>\l... %652, \<2 x double\> %650)\l  %654 = mul nsw i64 %84, 21\l  %655 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %654, i32 0\l  %656 = bitcast double* %655 to \<2 x double\>*\l  %657 = load \<2 x double\>, \<2 x double\>* %656, align 8, !tbaa !5\l  %658 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %58\l  %659 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %658, i64 0,\l... i32 0\l  %660 = load double, double* %659, align 8, !tbaa !9\l  %661 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %658, i64 0,\l... i32 1\l  %662 = load double, double* %661, align 8, !tbaa !11\l  %663 = extractelement \<2 x double\> %657, i64 1\l  %664 = fneg double %663\l  %665 = insertelement \<2 x double\> poison, double %662, i64 0\l  %666 = shufflevector \<2 x double\> %665, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %667 = insertelement \<2 x double\> %657, double %664, i64 1\l  %668 = fmul \<2 x double\> %666, %667\l  %669 = shufflevector \<2 x double\> %668, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %670 = insertelement \<2 x double\> poison, double %660, i64 0\l  %671 = shufflevector \<2 x double\> %670, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %672 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %657, \<2 x double\>\l... %671, \<2 x double\> %669)\l  %673 = fadd \<2 x double\> %653, %672\l  %674 = fsub \<2 x double\> %653, %672\l  %675 = extractelement \<2 x double\> %674, i64 0\l  %676 = fsub \<2 x double\> %653, %672\l  %677 = extractelement \<2 x double\> %676, i64 1\l  %678 = mul nsw i64 %84, 13\l  %679 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %678, i32 0\l  %680 = bitcast double* %679 to \<2 x double\>*\l  %681 = load \<2 x double\>, \<2 x double\>* %680, align 8, !tbaa !5\l  %682 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %60\l  %683 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %682, i64 0,\l... i32 0\l  %684 = load double, double* %683, align 8, !tbaa !9\l  %685 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %682, i64 0,\l... i32 1\l  %686 = load double, double* %685, align 8, !tbaa !11\l  %687 = extractelement \<2 x double\> %681, i64 1\l  %688 = fneg double %687\l  %689 = insertelement \<2 x double\> poison, double %686, i64 0\l  %690 = shufflevector \<2 x double\> %689, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %691 = insertelement \<2 x double\> %681, double %688, i64 1\l  %692 = fmul \<2 x double\> %690, %691\l  %693 = shufflevector \<2 x double\> %692, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %694 = insertelement \<2 x double\> poison, double %684, i64 0\l  %695 = shufflevector \<2 x double\> %694, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %696 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %681, \<2 x double\>\l... %695, \<2 x double\> %693)\l  %697 = mul nsw i64 %84, 29\l  %698 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %697, i32 0\l  %699 = bitcast double* %698 to \<2 x double\>*\l  %700 = load \<2 x double\>, \<2 x double\>* %699, align 8, !tbaa !5\l  %701 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %62\l  %702 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %701, i64 0,\l... i32 0\l  %703 = load double, double* %702, align 8, !tbaa !9\l  %704 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %701, i64 0,\l... i32 1\l  %705 = load double, double* %704, align 8, !tbaa !11\l  %706 = extractelement \<2 x double\> %700, i64 1\l  %707 = fneg double %706\l  %708 = insertelement \<2 x double\> poison, double %705, i64 0\l  %709 = shufflevector \<2 x double\> %708, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %710 = insertelement \<2 x double\> %700, double %707, i64 1\l  %711 = fmul \<2 x double\> %709, %710\l  %712 = shufflevector \<2 x double\> %711, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %713 = insertelement \<2 x double\> poison, double %703, i64 0\l  %714 = shufflevector \<2 x double\> %713, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %715 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %700, \<2 x double\>\l... %714, \<2 x double\> %712)\l  %716 = fadd \<2 x double\> %696, %715\l  %717 = fsub \<2 x double\> %696, %715\l  %718 = extractelement \<2 x double\> %717, i64 0\l  %719 = fsub \<2 x double\> %696, %715\l  %720 = extractelement \<2 x double\> %719, i64 1\l  %721 = fadd \<2 x double\> %673, %716\l  %722 = shufflevector \<2 x double\> %721, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %723 = fsub \<2 x double\> %673, %716\l  %724 = fadd double %675, %720\l  %725 = fsub double %677, %718\l  %726 = fsub double %675, %720\l  %727 = fadd double %677, %718\l  %728 = fadd \<2 x double\> %629, %722\l  %729 = fsub \<2 x double\> %629, %722\l  %730 = extractelement \<2 x double\> %729, i64 1\l  %731 = fsub \<2 x double\> %629, %722\l  %732 = extractelement \<2 x double\> %731, i64 0\l  %733 = insertelement \<2 x double\> poison, double %725, i64 0\l  %734 = shufflevector \<2 x double\> %733, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %735 = insertelement \<2 x double\> poison, double %724, i64 0\l  %736 = shufflevector \<2 x double\> %735, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %737 = fsub \<2 x double\> %734, %736\l  %738 = fadd \<2 x double\> %734, %736\l  %739 = shufflevector \<2 x double\> %737, \<2 x double\> %738, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %740 = fmul \<2 x double\> %739, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %741 = fadd \<2 x double\> %633, %740\l  %742 = fsub \<2 x double\> %633, %740\l  %743 = fsub \<2 x double\> %630, %723\l  %744 = fadd \<2 x double\> %630, %723\l  %745 = shufflevector \<2 x double\> %743, \<2 x double\> %744, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %746 = shufflevector \<2 x double\> %744, \<2 x double\> %743, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %747 = insertelement \<2 x double\> poison, double %727, i64 0\l  %748 = shufflevector \<2 x double\> %747, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %749 = insertelement \<2 x double\> poison, double %726, i64 0\l  %750 = shufflevector \<2 x double\> %749, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %751 = fadd \<2 x double\> %748, %750\l  %752 = fsub \<2 x double\> %748, %750\l  %753 = shufflevector \<2 x double\> %751, \<2 x double\> %752, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %754 = fmul \<2 x double\> %753, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %755 = fsub \<2 x double\> %634, %754\l  %756 = fadd \<2 x double\> %634, %754\l  %757 = shufflevector \<2 x double\> %755, \<2 x double\> %756, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %758 = shufflevector \<2 x double\> %756, \<2 x double\> %755, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %759 = mul nsw i64 %84, 3\l  %760 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %759, i32 0\l  %761 = bitcast double* %760 to \<2 x double\>*\l  %762 = load \<2 x double\>, \<2 x double\>* %761, align 8, !tbaa !5\l  %763 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %64\l  %764 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %763, i64 0,\l... i32 0\l  %765 = load double, double* %764, align 8, !tbaa !9\l  %766 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %763, i64 0,\l... i32 1\l  %767 = load double, double* %766, align 8, !tbaa !11\l  %768 = extractelement \<2 x double\> %762, i64 1\l  %769 = fneg double %768\l  %770 = insertelement \<2 x double\> poison, double %767, i64 0\l  %771 = shufflevector \<2 x double\> %770, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %772 = insertelement \<2 x double\> %762, double %769, i64 1\l  %773 = fmul \<2 x double\> %771, %772\l  %774 = shufflevector \<2 x double\> %773, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %775 = insertelement \<2 x double\> poison, double %765, i64 0\l  %776 = shufflevector \<2 x double\> %775, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %777 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %762, \<2 x double\>\l... %776, \<2 x double\> %774)\l  %778 = mul nsw i64 %84, 19\l  %779 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %778, i32 0\l  %780 = bitcast double* %779 to \<2 x double\>*\l  %781 = load \<2 x double\>, \<2 x double\>* %780, align 8, !tbaa !5\l  %782 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %66\l  %783 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %782, i64 0,\l... i32 0\l  %784 = load double, double* %783, align 8, !tbaa !9\l  %785 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %782, i64 0,\l... i32 1\l  %786 = load double, double* %785, align 8, !tbaa !11\l  %787 = extractelement \<2 x double\> %781, i64 1\l  %788 = fneg double %787\l  %789 = insertelement \<2 x double\> poison, double %786, i64 0\l  %790 = shufflevector \<2 x double\> %789, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %791 = insertelement \<2 x double\> %781, double %788, i64 1\l  %792 = fmul \<2 x double\> %790, %791\l  %793 = shufflevector \<2 x double\> %792, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %794 = insertelement \<2 x double\> poison, double %784, i64 0\l  %795 = shufflevector \<2 x double\> %794, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %796 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %781, \<2 x double\>\l... %795, \<2 x double\> %793)\l  %797 = fadd \<2 x double\> %777, %796\l  %798 = shufflevector \<2 x double\> %797, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %799 = fsub \<2 x double\> %777, %796\l  %800 = mul nsw i64 %84, 11\l  %801 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %800, i32 0\l  %802 = bitcast double* %801 to \<2 x double\>*\l  %803 = load \<2 x double\>, \<2 x double\>* %802, align 8, !tbaa !5\l  %804 = shufflevector \<2 x double\> %803, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %805 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %68\l  %806 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %805, i64 0,\l... i32 0\l  %807 = load double, double* %806, align 8, !tbaa !9\l  %808 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %805, i64 0,\l... i32 1\l  %809 = load double, double* %808, align 8, !tbaa !11\l  %810 = extractelement \<2 x double\> %803, i64 1\l  %811 = fneg double %810\l  %812 = insertelement \<2 x double\> poison, double %809, i64 0\l  %813 = shufflevector \<2 x double\> %812, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %814 = insertelement \<2 x double\> %803, double %811, i64 1\l  %815 = fmul \<2 x double\> %813, %814\l  %816 = insertelement \<2 x double\> poison, double %807, i64 0\l  %817 = shufflevector \<2 x double\> %816, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %818 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %804, \<2 x double\>\l... %817, \<2 x double\> %815)\l  %819 = mul nsw i64 %84, 27\l  %820 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %819, i32 0\l  %821 = bitcast double* %820 to \<2 x double\>*\l  %822 = load \<2 x double\>, \<2 x double\>* %821, align 8, !tbaa !5\l  %823 = shufflevector \<2 x double\> %822, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %824 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %70\l  %825 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %824, i64 0,\l... i32 0\l  %826 = load double, double* %825, align 8, !tbaa !9\l  %827 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %824, i64 0,\l... i32 1\l  %828 = load double, double* %827, align 8, !tbaa !11\l  %829 = extractelement \<2 x double\> %822, i64 1\l  %830 = fneg double %829\l  %831 = insertelement \<2 x double\> poison, double %828, i64 0\l  %832 = shufflevector \<2 x double\> %831, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %833 = insertelement \<2 x double\> %822, double %830, i64 1\l  %834 = fmul \<2 x double\> %832, %833\l  %835 = insertelement \<2 x double\> poison, double %826, i64 0\l  %836 = shufflevector \<2 x double\> %835, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %837 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %823, \<2 x double\>\l... %836, \<2 x double\> %834)\l  %838 = fadd \<2 x double\> %818, %837\l  %839 = fsub \<2 x double\> %818, %837\l  %840 = fadd \<2 x double\> %798, %838\l  %841 = fsub \<2 x double\> %798, %838\l  %842 = extractelement \<2 x double\> %841, i64 1\l  %843 = fsub \<2 x double\> %798, %838\l  %844 = extractelement \<2 x double\> %843, i64 0\l  %845 = fadd \<2 x double\> %799, %839\l  %846 = fsub \<2 x double\> %799, %839\l  %847 = shufflevector \<2 x double\> %845, \<2 x double\> %846, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %848 = shufflevector \<2 x double\> %846, \<2 x double\> %845, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %849 = mul nsw i64 %84, 7\l  %850 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %849, i32 0\l  %851 = bitcast double* %850 to \<2 x double\>*\l  %852 = load \<2 x double\>, \<2 x double\>* %851, align 8, !tbaa !5\l  %853 = shufflevector \<2 x double\> %852, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %854 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %72\l  %855 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %854, i64 0,\l... i32 0\l  %856 = load double, double* %855, align 8, !tbaa !9\l  %857 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %854, i64 0,\l... i32 1\l  %858 = load double, double* %857, align 8, !tbaa !11\l  %859 = extractelement \<2 x double\> %852, i64 1\l  %860 = fneg double %859\l  %861 = insertelement \<2 x double\> poison, double %858, i64 0\l  %862 = shufflevector \<2 x double\> %861, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %863 = insertelement \<2 x double\> %852, double %860, i64 1\l  %864 = fmul \<2 x double\> %862, %863\l  %865 = insertelement \<2 x double\> poison, double %856, i64 0\l  %866 = shufflevector \<2 x double\> %865, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %867 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %853, \<2 x double\>\l... %866, \<2 x double\> %864)\l  %868 = mul nsw i64 %84, 23\l  %869 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %868, i32 0\l  %870 = bitcast double* %869 to \<2 x double\>*\l  %871 = load \<2 x double\>, \<2 x double\>* %870, align 8, !tbaa !5\l  %872 = shufflevector \<2 x double\> %871, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %873 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %74\l  %874 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %873, i64 0,\l... i32 0\l  %875 = load double, double* %874, align 8, !tbaa !9\l  %876 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %873, i64 0,\l... i32 1\l  %877 = load double, double* %876, align 8, !tbaa !11\l  %878 = extractelement \<2 x double\> %871, i64 1\l  %879 = fneg double %878\l  %880 = insertelement \<2 x double\> poison, double %877, i64 0\l  %881 = shufflevector \<2 x double\> %880, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %882 = insertelement \<2 x double\> %871, double %879, i64 1\l  %883 = fmul \<2 x double\> %881, %882\l  %884 = insertelement \<2 x double\> poison, double %875, i64 0\l  %885 = shufflevector \<2 x double\> %884, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %886 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %872, \<2 x double\>\l... %885, \<2 x double\> %883)\l  %887 = fadd \<2 x double\> %867, %886\l  %888 = fsub \<2 x double\> %867, %886\l  %889 = extractelement \<2 x double\> %888, i64 1\l  %890 = fsub \<2 x double\> %867, %886\l  %891 = extractelement \<2 x double\> %890, i64 0\l  %892 = mul nsw i64 %84, 15\l  %893 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %892, i32 0\l  %894 = bitcast double* %893 to \<2 x double\>*\l  %895 = load \<2 x double\>, \<2 x double\>* %894, align 8, !tbaa !5\l  %896 = shufflevector \<2 x double\> %895, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %897 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %76\l  %898 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %897, i64 0,\l... i32 0\l  %899 = load double, double* %898, align 8, !tbaa !9\l  %900 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %897, i64 0,\l... i32 1\l  %901 = load double, double* %900, align 8, !tbaa !11\l  %902 = extractelement \<2 x double\> %895, i64 1\l  %903 = fneg double %902\l  %904 = insertelement \<2 x double\> poison, double %901, i64 0\l  %905 = shufflevector \<2 x double\> %904, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %906 = insertelement \<2 x double\> %895, double %903, i64 1\l  %907 = fmul \<2 x double\> %905, %906\l  %908 = insertelement \<2 x double\> poison, double %899, i64 0\l  %909 = shufflevector \<2 x double\> %908, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %910 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %896, \<2 x double\>\l... %909, \<2 x double\> %907)\l  %911 = mul nsw i64 %84, 31\l  %912 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %911, i32 0\l  %913 = bitcast double* %912 to \<2 x double\>*\l  %914 = load \<2 x double\>, \<2 x double\>* %913, align 8, !tbaa !5\l  %915 = shufflevector \<2 x double\> %914, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %916 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %87, i64 %78\l  %917 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %916, i64 0,\l... i32 0\l  %918 = load double, double* %917, align 8, !tbaa !9\l  %919 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %916, i64 0,\l... i32 1\l  %920 = load double, double* %919, align 8, !tbaa !11\l  %921 = extractelement \<2 x double\> %914, i64 1\l  %922 = fneg double %921\l  %923 = insertelement \<2 x double\> poison, double %920, i64 0\l  %924 = shufflevector \<2 x double\> %923, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %925 = insertelement \<2 x double\> %914, double %922, i64 1\l  %926 = fmul \<2 x double\> %924, %925\l  %927 = insertelement \<2 x double\> poison, double %918, i64 0\l  %928 = shufflevector \<2 x double\> %927, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %929 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %915, \<2 x double\>\l... %928, \<2 x double\> %926)\l  %930 = fadd \<2 x double\> %910, %929\l  %931 = fsub \<2 x double\> %910, %929\l  %932 = extractelement \<2 x double\> %931, i64 1\l  %933 = fsub \<2 x double\> %910, %929\l  %934 = extractelement \<2 x double\> %933, i64 0\l  %935 = fadd \<2 x double\> %887, %930\l  %936 = fsub \<2 x double\> %887, %930\l  %937 = extractelement \<2 x double\> %936, i64 1\l  %938 = fsub \<2 x double\> %887, %930\l  %939 = extractelement \<2 x double\> %938, i64 0\l  %940 = fadd double %889, %934\l  %941 = fsub double %891, %932\l  %942 = fsub double %889, %934\l  %943 = fadd double %891, %932\l  %944 = fadd \<2 x double\> %840, %935\l  %945 = fsub \<2 x double\> %840, %935\l  %946 = extractelement \<2 x double\> %945, i64 1\l  %947 = fsub \<2 x double\> %840, %935\l  %948 = extractelement \<2 x double\> %947, i64 0\l  %949 = insertelement \<2 x double\> poison, double %941, i64 0\l  %950 = shufflevector \<2 x double\> %949, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %951 = insertelement \<2 x double\> poison, double %940, i64 0\l  %952 = shufflevector \<2 x double\> %951, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %953 = fadd \<2 x double\> %950, %952\l  %954 = fsub \<2 x double\> %950, %952\l  %955 = shufflevector \<2 x double\> %953, \<2 x double\> %954, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %956 = fmul \<2 x double\> %955, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %957 = fadd \<2 x double\> %847, %956\l  %958 = shufflevector \<2 x double\> %957, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %959 = fsub \<2 x double\> %847, %956\l  %960 = fadd double %842, %939\l  %961 = fsub double %844, %937\l  %962 = fsub double %842, %939\l  %963 = fadd double %844, %937\l  %964 = insertelement \<2 x double\> poison, double %943, i64 0\l  %965 = shufflevector \<2 x double\> %964, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %966 = insertelement \<2 x double\> poison, double %942, i64 0\l  %967 = shufflevector \<2 x double\> %966, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %968 = fsub \<2 x double\> %965, %967\l  %969 = fadd \<2 x double\> %965, %967\l  %970 = shufflevector \<2 x double\> %968, \<2 x double\> %969, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %971 = fmul \<2 x double\> %970, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %972 = fsub \<2 x double\> %848, %971\l  %973 = fadd \<2 x double\> %848, %971\l  %974 = shufflevector \<2 x double\> %972, \<2 x double\> %973, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %975 = shufflevector \<2 x double\> %972, \<2 x double\> %973, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %976 = fadd \<2 x double\> %728, %944\l  %977 = shufflevector \<2 x double\> %976, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %978 = fsub \<2 x double\> %728, %944\l  %979 = fmul \<2 x double\> %957, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %980 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %958, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %979)\l  %981 = fadd \<2 x double\> %741, %980\l  %982 = shufflevector \<2 x double\> %981, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %983 = fsub \<2 x double\> %741, %980\l  %984 = insertelement \<2 x double\> poison, double %961, i64 0\l  %985 = shufflevector \<2 x double\> %984, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %986 = insertelement \<2 x double\> poison, double %960, i64 0\l  %987 = shufflevector \<2 x double\> %986, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %988 = fsub \<2 x double\> %985, %987\l  %989 = fadd \<2 x double\> %985, %987\l  %990 = shufflevector \<2 x double\> %988, \<2 x double\> %989, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %991 = fmul \<2 x double\> %990, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %992 = fadd \<2 x double\> %745, %991\l  %993 = shufflevector \<2 x double\> %992, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %994 = fsub \<2 x double\> %745, %991\l  %995 = shufflevector \<2 x double\> %973, \<2 x double\> %972, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %996 = fmul \<2 x double\> %995, \<double 0xBFED906BCF32832F, double\l... 0x3FED906BCF32832F\>\l  %997 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %974, \<2 x double\>\l... \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\> %996)\l  %998 = fadd \<2 x double\> %757, %997\l  %999 = shufflevector \<2 x double\> %998, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %1000 = fsub \<2 x double\> %757, %997\l  %1001 = fadd double %730, %948\l  %1002 = fsub double %732, %946\l  %1003 = fsub double %730, %948\l  %1004 = fadd double %732, %946\l  %1005 = fmul \<2 x double\> %959, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %1006 = shufflevector \<2 x double\> %1005, \<2 x double\> poison, \<2 x i32\>\l... \<i32 1, i32 0\>\l  %1007 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %959, \<2 x\l... double\> \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\>\l... %1006)\l  %1008 = fadd \<2 x double\> %742, %1007\l  %1009 = fsub \<2 x double\> %742, %1007\l  %1010 = shufflevector \<2 x double\> %1008, \<2 x double\> %1009, \<2 x i32\> \<i32\l... 1, i32 2\>\l  %1011 = shufflevector \<2 x double\> %1008, \<2 x double\> %1009, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1012 = insertelement \<2 x double\> poison, double %963, i64 0\l  %1013 = shufflevector \<2 x double\> %1012, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %1014 = insertelement \<2 x double\> poison, double %962, i64 0\l  %1015 = shufflevector \<2 x double\> %1014, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %1016 = fadd \<2 x double\> %1013, %1015\l  %1017 = fsub \<2 x double\> %1013, %1015\l  %1018 = shufflevector \<2 x double\> %1016, \<2 x double\> %1017, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1019 = fmul \<2 x double\> %1018, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %1020 = fadd \<2 x double\> %746, %1019\l  %1021 = fsub \<2 x double\> %746, %1019\l  %1022 = shufflevector \<2 x double\> %1020, \<2 x double\> %1021, \<2 x i32\> \<i32\l... 1, i32 2\>\l  %1023 = shufflevector \<2 x double\> %1020, \<2 x double\> %1021, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1024 = shufflevector \<2 x double\> %973, \<2 x double\> %972, \<2 x i32\> \<i32\l... 1, i32 2\>\l  %1025 = fmul \<2 x double\> %1024, \<double 0x3FED906BCF32832F, double\l... 0xBFED906BCF32832F\>\l  %1026 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %975, \<2 x\l... double\> \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\>\l... %1025)\l  %1027 = fadd \<2 x double\> %758, %1026\l  %1028 = fsub \<2 x double\> %758, %1026\l  %1029 = shufflevector \<2 x double\> %1027, \<2 x double\> %1028, \<2 x i32\> \<i32\l... 1, i32 2\>\l  %1030 = shufflevector \<2 x double\> %1027, \<2 x double\> %1028, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1031 = fadd \<2 x double\> %498, %977\l  %1032 = bitcast %struct.COMPLEX* %85 to \<2 x double\>*\l  store \<2 x double\> %1031, \<2 x double\>* %1032, align 8, !tbaa !5\l  %1033 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %19, i32 0\l  %1034 = fsub \<2 x double\> %498, %977\l  %1035 = bitcast double* %1033 to \<2 x double\>*\l  store \<2 x double\> %1034, \<2 x double\>* %1035, align 8, !tbaa !5\l  %1036 = fmul \<2 x double\> %981, \<double 0x3FC8F8B83C6993FD, double\l... 0xBFC8F8B83C6993FD\>\l  %1037 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %982, \<2 x\l... double\> \<double 0x3FEF6297CFF75494, double 0x3FEF6297CFF75494\>, \<2 x double\>\l... %1036)\l  %1038 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %48, i32 0\l  %1039 = fadd \<2 x double\> %502, %1037\l  %1040 = bitcast double* %1038 to \<2 x double\>*\l  store \<2 x double\> %1039, \<2 x double\>* %1040, align 8, !tbaa !5\l  %1041 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %50, i32 0\l  %1042 = fsub \<2 x double\> %502, %1037\l  %1043 = bitcast double* %1041 to \<2 x double\>*\l  store \<2 x double\> %1042, \<2 x double\>* %1043, align 8, !tbaa !5\l  %1044 = fmul \<2 x double\> %992, \<double 0x3FD87DE2A6AEA312, double\l... 0xBFD87DE2A6AEA312\>\l  %1045 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %993, \<2 x\l... double\> \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\>\l... %1044)\l  %1046 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %33, i32 0\l  %1047 = fadd \<2 x double\> %512, %1045\l  %1048 = bitcast double* %1046 to \<2 x double\>*\l  store \<2 x double\> %1047, \<2 x double\>* %1048, align 8, !tbaa !5\l  %1049 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %35, i32 0\l  %1050 = fsub \<2 x double\> %512, %1045\l  %1051 = bitcast double* %1049 to \<2 x double\>*\l  store \<2 x double\> %1050, \<2 x double\>* %1051, align 8, !tbaa !5\l  %1052 = fmul \<2 x double\> %998, \<double 0x3FE1C73B39AE76C7, double\l... 0xBFE1C73B39AE76C7\>\l  %1053 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %999, \<2 x\l... double\> \<double 0x3FEA9B66290EB1A3, double 0x3FEA9B66290EB1A3\>, \<2 x double\>\l... %1052)\l  %1054 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %64, i32 0\l  %1055 = fadd \<2 x double\> %517, %1053\l  %1056 = bitcast double* %1054 to \<2 x double\>*\l  store \<2 x double\> %1055, \<2 x double\>* %1056, align 8, !tbaa !5\l  %1057 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %66, i32 0\l  %1058 = fsub \<2 x double\> %517, %1053\l  %1059 = bitcast double* %1057 to \<2 x double\>*\l  store \<2 x double\> %1058, \<2 x double\>* %1059, align 8, !tbaa !5\l  %1060 = insertelement \<2 x double\> poison, double %1002, i64 0\l  %1061 = shufflevector \<2 x double\> %1060, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %1062 = insertelement \<2 x double\> poison, double %1001, i64 0\l  %1063 = shufflevector \<2 x double\> %1062, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %1064 = fadd \<2 x double\> %1061, %1063\l  %1065 = fsub \<2 x double\> %1061, %1063\l  %1066 = shufflevector \<2 x double\> %1064, \<2 x double\> %1065, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1067 = fmul \<2 x double\> %1066, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %1068 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %25, i32 0\l  %1069 = fadd \<2 x double\> %521, %1067\l  %1070 = bitcast double* %1068 to \<2 x double\>*\l  store \<2 x double\> %1069, \<2 x double\>* %1070, align 8, !tbaa !5\l  %1071 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %27, i32 0\l  %1072 = fsub \<2 x double\> %521, %1067\l  %1073 = bitcast double* %1071 to \<2 x double\>*\l  store \<2 x double\> %1072, \<2 x double\>* %1073, align 8, !tbaa !5\l  %1074 = shufflevector \<2 x double\> %1009, \<2 x double\> %1008, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1075 = fmul \<2 x double\> %1074, \<double 0x3FEA9B66290EB1A3, double\l... 0xBFEA9B66290EB1A3\>\l  %1076 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %1010, \<2 x\l... double\> \<double 0x3FE1C73B39AE76C7, double 0x3FE1C73B39AE76C7\>, \<2 x double\>\l... %1075)\l  %1077 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %56, i32 0\l  %1078 = fadd \<2 x double\> %528, %1076\l  %1079 = bitcast double* %1077 to \<2 x double\>*\l  store \<2 x double\> %1078, \<2 x double\>* %1079, align 8, !tbaa !5\l  %1080 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %58, i32 0\l  %1081 = fsub \<2 x double\> %528, %1076\l  %1082 = bitcast double* %1080 to \<2 x double\>*\l  store \<2 x double\> %1081, \<2 x double\>* %1082, align 8, !tbaa !5\l  %1083 = shufflevector \<2 x double\> %1021, \<2 x double\> %1020, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1084 = fmul \<2 x double\> %1083, \<double 0x3FED906BCF32832F, double\l... 0xBFED906BCF32832F\>\l  %1085 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %1022, \<2 x\l... double\> \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\>\l... %1084)\l  %1086 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %41, i32 0\l  %1087 = fadd \<2 x double\> %540, %1085\l  %1088 = bitcast double* %1086 to \<2 x double\>*\l  store \<2 x double\> %1087, \<2 x double\>* %1088, align 8, !tbaa !5\l  %1089 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %43, i32 0\l  %1090 = fsub \<2 x double\> %540, %1085\l  %1091 = bitcast double* %1089 to \<2 x double\>*\l  store \<2 x double\> %1090, \<2 x double\>* %1091, align 8, !tbaa !5\l  %1092 = shufflevector \<2 x double\> %1028, \<2 x double\> %1027, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1093 = fmul \<2 x double\> %1092, \<double 0x3FEF6297CFF75494, double\l... 0xBFEF6297CFF75494\>\l  %1094 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %1029, \<2 x\l... double\> \<double 0x3FC8F8B83C6993FD, double 0x3FC8F8B83C6993FD\>, \<2 x double\>\l... %1093)\l  %1095 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %72, i32 0\l  %1096 = fadd \<2 x double\> %547, %1094\l  %1097 = bitcast double* %1095 to \<2 x double\>*\l  store \<2 x double\> %1096, \<2 x double\>* %1097, align 8, !tbaa !5\l  %1098 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %74, i32 0\l  %1099 = fsub \<2 x double\> %547, %1094\l  %1100 = bitcast double* %1098 to \<2 x double\>*\l  store \<2 x double\> %1099, \<2 x double\>* %1100, align 8, !tbaa !5\l  %1101 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %21, i32 0\l  %1102 = fadd \<2 x double\> %499, %978\l  %1103 = fsub \<2 x double\> %499, %978\l  %1104 = shufflevector \<2 x double\> %1102, \<2 x double\> %1103, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1105 = bitcast double* %1101 to \<2 x double\>*\l  store \<2 x double\> %1104, \<2 x double\>* %1105, align 8, !tbaa !5\l  %1106 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %23, i32 0\l  %1107 = shufflevector \<2 x double\> %1103, \<2 x double\> %1102, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1108 = bitcast double* %1106 to \<2 x double\>*\l  store \<2 x double\> %1107, \<2 x double\>* %1108, align 8, !tbaa !5\l  %1109 = fmul \<2 x double\> %983, \<double 0x3FC8F8B83C6993FD, double\l... 0xBFC8F8B83C6993FD\>\l  %1110 = shufflevector \<2 x double\> %1109, \<2 x double\> poison, \<2 x i32\>\l... \<i32 1, i32 0\>\l  %1111 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %983, \<2 x\l... double\> \<double 0x3FEF6297CFF75494, double 0x3FEF6297CFF75494\>, \<2 x double\>\l... %1110)\l  %1112 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %52, i32 0\l  %1113 = fadd \<2 x double\> %503, %1111\l  %1114 = fsub \<2 x double\> %503, %1111\l  %1115 = shufflevector \<2 x double\> %1113, \<2 x double\> %1114, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1116 = bitcast double* %1112 to \<2 x double\>*\l  store \<2 x double\> %1115, \<2 x double\>* %1116, align 8, !tbaa !5\l  %1117 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %54, i32 0\l  %1118 = shufflevector \<2 x double\> %1114, \<2 x double\> %1113, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1119 = bitcast double* %1117 to \<2 x double\>*\l  store \<2 x double\> %1118, \<2 x double\>* %1119, align 8, !tbaa !5\l  %1120 = fmul \<2 x double\> %994, \<double 0x3FD87DE2A6AEA312, double\l... 0xBFD87DE2A6AEA312\>\l  %1121 = shufflevector \<2 x double\> %1120, \<2 x double\> poison, \<2 x i32\>\l... \<i32 1, i32 0\>\l  %1122 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %994, \<2 x\l... double\> \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\>\l... %1121)\l  %1123 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %37, i32 0\l  %1124 = fadd \<2 x double\> %513, %1122\l  %1125 = fsub \<2 x double\> %513, %1122\l  %1126 = shufflevector \<2 x double\> %1124, \<2 x double\> %1125, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1127 = bitcast double* %1123 to \<2 x double\>*\l  store \<2 x double\> %1126, \<2 x double\>* %1127, align 8, !tbaa !5\l  %1128 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %39, i32 0\l  %1129 = shufflevector \<2 x double\> %1125, \<2 x double\> %1124, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1130 = bitcast double* %1128 to \<2 x double\>*\l  store \<2 x double\> %1129, \<2 x double\>* %1130, align 8, !tbaa !5\l  %1131 = fmul \<2 x double\> %1000, \<double 0x3FE1C73B39AE76C7, double\l... 0xBFE1C73B39AE76C7\>\l  %1132 = shufflevector \<2 x double\> %1131, \<2 x double\> poison, \<2 x i32\>\l... \<i32 1, i32 0\>\l  %1133 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %1000, \<2 x\l... double\> \<double 0x3FEA9B66290EB1A3, double 0x3FEA9B66290EB1A3\>, \<2 x double\>\l... %1132)\l  %1134 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %68, i32 0\l  %1135 = fadd \<2 x double\> %518, %1133\l  %1136 = fsub \<2 x double\> %518, %1133\l  %1137 = shufflevector \<2 x double\> %1135, \<2 x double\> %1136, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1138 = bitcast double* %1134 to \<2 x double\>*\l  store \<2 x double\> %1137, \<2 x double\>* %1138, align 8, !tbaa !5\l  %1139 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %70, i32 0\l  %1140 = shufflevector \<2 x double\> %1136, \<2 x double\> %1135, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1141 = bitcast double* %1139 to \<2 x double\>*\l  store \<2 x double\> %1140, \<2 x double\>* %1141, align 8, !tbaa !5\l  %1142 = insertelement \<2 x double\> poison, double %1004, i64 0\l  %1143 = shufflevector \<2 x double\> %1142, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %1144 = insertelement \<2 x double\> poison, double %1003, i64 0\l  %1145 = shufflevector \<2 x double\> %1144, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %1146 = fsub \<2 x double\> %1143, %1145\l  %1147 = fadd \<2 x double\> %1143, %1145\l  %1148 = shufflevector \<2 x double\> %1146, \<2 x double\> %1147, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1149 = fmul \<2 x double\> %1148, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %1150 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %29, i32 0\l  %1151 = fadd \<2 x double\> %522, %1149\l  %1152 = fsub \<2 x double\> %522, %1149\l  %1153 = shufflevector \<2 x double\> %1151, \<2 x double\> %1152, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1154 = bitcast double* %1150 to \<2 x double\>*\l  store \<2 x double\> %1153, \<2 x double\>* %1154, align 8, !tbaa !5\l  %1155 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %31, i32 0\l  %1156 = shufflevector \<2 x double\> %1152, \<2 x double\> %1151, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1157 = bitcast double* %1155 to \<2 x double\>*\l  store \<2 x double\> %1156, \<2 x double\>* %1157, align 8, !tbaa !5\l  %1158 = shufflevector \<2 x double\> %1009, \<2 x double\> %1008, \<2 x i32\> \<i32\l... 1, i32 2\>\l  %1159 = fmul \<2 x double\> %1158, \<double 0xBFEA9B66290EB1A3, double\l... 0x3FEA9B66290EB1A3\>\l  %1160 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %1011, \<2 x\l... double\> \<double 0x3FE1C73B39AE76C7, double 0x3FE1C73B39AE76C7\>, \<2 x double\>\l... %1159)\l  %1161 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %60, i32 0\l  %1162 = fadd \<2 x double\> %529, %1160\l  %1163 = fsub \<2 x double\> %529, %1160\l  %1164 = shufflevector \<2 x double\> %1162, \<2 x double\> %1163, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1165 = bitcast double* %1161 to \<2 x double\>*\l  store \<2 x double\> %1164, \<2 x double\>* %1165, align 8, !tbaa !5\l  %1166 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %62, i32 0\l  %1167 = shufflevector \<2 x double\> %1163, \<2 x double\> %1162, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1168 = bitcast double* %1166 to \<2 x double\>*\l  store \<2 x double\> %1167, \<2 x double\>* %1168, align 8, !tbaa !5\l  %1169 = shufflevector \<2 x double\> %1021, \<2 x double\> %1020, \<2 x i32\> \<i32\l... 1, i32 2\>\l  %1170 = fmul \<2 x double\> %1169, \<double 0xBFED906BCF32832F, double\l... 0x3FED906BCF32832F\>\l  %1171 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %1023, \<2 x\l... double\> \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\>\l... %1170)\l  %1172 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %45, i32 0\l  %1173 = fadd \<2 x double\> %541, %1171\l  %1174 = fsub \<2 x double\> %541, %1171\l  %1175 = shufflevector \<2 x double\> %1173, \<2 x double\> %1174, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1176 = bitcast double* %1172 to \<2 x double\>*\l  store \<2 x double\> %1175, \<2 x double\>* %1176, align 8, !tbaa !5\l  %1177 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %47, i32 0\l  %1178 = shufflevector \<2 x double\> %1174, \<2 x double\> %1173, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1179 = bitcast double* %1177 to \<2 x double\>*\l  store \<2 x double\> %1178, \<2 x double\>* %1179, align 8, !tbaa !5\l  %1180 = shufflevector \<2 x double\> %1028, \<2 x double\> %1027, \<2 x i32\> \<i32\l... 1, i32 2\>\l  %1181 = fmul \<2 x double\> %1180, \<double 0xBFEF6297CFF75494, double\l... 0x3FEF6297CFF75494\>\l  %1182 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %1030, \<2 x\l... double\> \<double 0x3FC8F8B83C6993FD, double 0x3FC8F8B83C6993FD\>, \<2 x double\>\l... %1181)\l  %1183 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %76, i32 0\l  %1184 = fadd \<2 x double\> %548, %1182\l  %1185 = fsub \<2 x double\> %548, %1182\l  %1186 = shufflevector \<2 x double\> %1184, \<2 x double\> %1185, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1187 = bitcast double* %1183 to \<2 x double\>*\l  store \<2 x double\> %1186, \<2 x double\>* %1187, align 8, !tbaa !5\l  %1188 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64\l... %78, i32 0\l  %1189 = shufflevector \<2 x double\> %1185, \<2 x double\> %1184, \<2 x i32\> \<i32\l... 0, i32 3\>\l  %1190 = bitcast double* %1188 to \<2 x double\>*\l  store \<2 x double\> %1189, \<2 x double\>* %1190, align 8, !tbaa !5\l  %1191 = add nsw i64 %83, 1\l  %1192 = add i64 %84, %80\l  %1193 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %85, i64 1\l  %1194 = icmp eq i64 %1191, %81\l  br i1 %1194, label %1201, label %82, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0xc0f180:s0 -> Node0xc0f220;
	Node0xc0f180:s1 -> Node0xc0f180;
	Node0xc0f1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1195:\l1195:                                             \l  %1196 = phi i32 [ %1198, %1195 ], [ %0, %8 ]\l  %1197 = add nsw i32 %1196, %1\l  %1198 = sdiv i32 %1197, 2\l  tail call void @fft_twiddle_32(i32 noundef %1196, i32 noundef %1198,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7)\l  %1199 = sub nsw i32 %1, %1198\l  %1200 = icmp slt i32 %1199, 128\l  br i1 %1200, label %11, label %1195\l|{<s0>T|<s1>F}}"];
	Node0xc0f1d0:s0 -> Node0xc0f0e0;
	Node0xc0f1d0:s1 -> Node0xc0f1d0;
	Node0xc0f220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%1201:\l1201:                                             \l  ret void\l}"];
}

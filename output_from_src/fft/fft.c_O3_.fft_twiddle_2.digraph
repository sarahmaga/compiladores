digraph "CFG for 'fft_twiddle_2' function" {
	label="CFG for 'fft_twiddle_2' function";

	Node0x8f28f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%8:\l  %9 = sub nsw i32 %1, %0\l  %10 = icmp slt i32 %9, 128\l  br i1 %10, label %11, label %56\l|{<s0>T|<s1>F}}"];
	Node0x8f28f0:s0 -> Node0x8f2940;
	Node0x8f28f0:s1 -> Node0x8f2a30;
	Node0x8f2940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%11:\l11:                                               \l  %12 = phi i32 [ %0, %8 ], [ %59, %56 ]\l  %13 = icmp slt i32 %12, %1\l  br i1 %13, label %14, label %62\l|{<s0>T|<s1>F}}"];
	Node0x8f2940:s0 -> Node0x8f2990;
	Node0x8f2940:s1 -> Node0x8f2a80;
	Node0x8f2990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %15\l  %17 = mul i32 %12, %6\l  %18 = sext i32 %7 to i64\l  %19 = sext i32 %17 to i64\l  %20 = sext i32 %6 to i64\l  %21 = sext i32 %1 to i64\l  br label %22\l}"];
	Node0x8f2990 -> Node0x8f29e0;
	Node0x8f29e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi i64 [ %15, %14 ], [ %52, %22 ]\l  %24 = phi i64 [ %19, %14 ], [ %53, %22 ]\l  %25 = phi %struct.COMPLEX* [ %16, %14 ], [ %54, %22 ]\l  %26 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %23\l  %27 = bitcast %struct.COMPLEX* %26 to \<2 x double\>*\l  %28 = load \<2 x double\>, \<2 x double\>* %27, align 8, !tbaa !5\l  %29 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %24,\l... i32 0\l  %30 = bitcast double* %29 to \<2 x double\>*\l  %31 = load \<2 x double\>, \<2 x double\>* %30, align 8, !tbaa !5\l  %32 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %26, i64 %18\l  %33 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %32, i64 0,\l... i32 0\l  %34 = load double, double* %33, align 8, !tbaa !9\l  %35 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %32, i64 0,\l... i32 1\l  %36 = load double, double* %35, align 8, !tbaa !11\l  %37 = extractelement \<2 x double\> %31, i64 1\l  %38 = fneg double %37\l  %39 = insertelement \<2 x double\> poison, double %36, i64 0\l  %40 = shufflevector \<2 x double\> %39, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %41 = insertelement \<2 x double\> %31, double %38, i64 1\l  %42 = fmul \<2 x double\> %40, %41\l  %43 = shufflevector \<2 x double\> %42, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %44 = insertelement \<2 x double\> poison, double %34, i64 0\l  %45 = shufflevector \<2 x double\> %44, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %46 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %31, \<2 x double\>\l... %45, \<2 x double\> %43)\l  %47 = fadd \<2 x double\> %28, %46\l  %48 = bitcast %struct.COMPLEX* %25 to \<2 x double\>*\l  store \<2 x double\> %47, \<2 x double\>* %48, align 8, !tbaa !5\l  %49 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %25, i64 %18,\l... i32 0\l  %50 = fsub \<2 x double\> %28, %46\l  %51 = bitcast double* %49 to \<2 x double\>*\l  store \<2 x double\> %50, \<2 x double\>* %51, align 8, !tbaa !5\l  %52 = add nsw i64 %23, 1\l  %53 = add i64 %24, %20\l  %54 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %25, i64 1\l  %55 = icmp eq i64 %52, %21\l  br i1 %55, label %62, label %22, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x8f29e0:s0 -> Node0x8f2a80;
	Node0x8f29e0:s1 -> Node0x8f29e0;
	Node0x8f2a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = phi i32 [ %59, %56 ], [ %0, %8 ]\l  %58 = add nsw i32 %57, %1\l  %59 = sdiv i32 %58, 2\l  tail call void @fft_twiddle_2(i32 noundef %57, i32 noundef %59,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7)\l  %60 = sub nsw i32 %1, %59\l  %61 = icmp slt i32 %60, 128\l  br i1 %61, label %11, label %56\l|{<s0>T|<s1>F}}"];
	Node0x8f2a30:s0 -> Node0x8f2940;
	Node0x8f2a30:s1 -> Node0x8f2a30;
	Node0x8f2a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%62:\l62:                                               \l  ret void\l}"];
}

digraph "CFG for 'fft_base_32' function" {
	label="CFG for 'fft_base_32' function";

	Node0xc02a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = bitcast %struct.COMPLEX* %0 to \<2 x double\>*\l  %4 = load \<2 x double\>, \<2 x double\>* %3, align 8, !tbaa !5\l  %5 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 16,\l... i32 0\l  %6 = bitcast double* %5 to \<2 x double\>*\l  %7 = load \<2 x double\>, \<2 x double\>* %6, align 8, !tbaa !5\l  %8 = fadd \<2 x double\> %4, %7\l  %9 = fsub \<2 x double\> %4, %7\l  %10 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 8,\l... i32 0\l  %11 = bitcast double* %10 to \<2 x double\>*\l  %12 = load \<2 x double\>, \<2 x double\>* %11, align 8, !tbaa !5\l  %13 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 24,\l... i32 0\l  %14 = bitcast double* %13 to \<2 x double\>*\l  %15 = load \<2 x double\>, \<2 x double\>* %14, align 8, !tbaa !5\l  %16 = fadd \<2 x double\> %12, %15\l  %17 = fsub \<2 x double\> %12, %15\l  %18 = shufflevector \<2 x double\> %17, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %19 = fadd \<2 x double\> %8, %16\l  %20 = fsub \<2 x double\> %8, %16\l  %21 = fadd \<2 x double\> %9, %18\l  %22 = fsub \<2 x double\> %9, %18\l  %23 = shufflevector \<2 x double\> %21, \<2 x double\> %22, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %24 = shufflevector \<2 x double\> %22, \<2 x double\> %21, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %25 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 4,\l... i32 0\l  %26 = bitcast double* %25 to \<2 x double\>*\l  %27 = load \<2 x double\>, \<2 x double\>* %26, align 8, !tbaa !5\l  %28 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 20,\l... i32 0\l  %29 = bitcast double* %28 to \<2 x double\>*\l  %30 = load \<2 x double\>, \<2 x double\>* %29, align 8, !tbaa !5\l  %31 = fadd \<2 x double\> %27, %30\l  %32 = fsub \<2 x double\> %27, %30\l  %33 = extractelement \<2 x double\> %32, i64 0\l  %34 = fsub \<2 x double\> %27, %30\l  %35 = extractelement \<2 x double\> %34, i64 1\l  %36 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 12,\l... i32 0\l  %37 = bitcast double* %36 to \<2 x double\>*\l  %38 = load \<2 x double\>, \<2 x double\>* %37, align 8, !tbaa !5\l  %39 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 28,\l... i32 0\l  %40 = bitcast double* %39 to \<2 x double\>*\l  %41 = load \<2 x double\>, \<2 x double\>* %40, align 8, !tbaa !5\l  %42 = fadd \<2 x double\> %38, %41\l  %43 = fsub \<2 x double\> %38, %41\l  %44 = extractelement \<2 x double\> %43, i64 0\l  %45 = fsub \<2 x double\> %38, %41\l  %46 = extractelement \<2 x double\> %45, i64 1\l  %47 = fadd \<2 x double\> %31, %42\l  %48 = fsub \<2 x double\> %31, %42\l  %49 = shufflevector \<2 x double\> %48, \<2 x double\> poison, \<2 x i32\> \<i32 1,\l... i32 0\>\l  %50 = fadd double %33, %46\l  %51 = fsub double %35, %44\l  %52 = fsub double %33, %46\l  %53 = fadd double %35, %44\l  %54 = fadd \<2 x double\> %19, %47\l  %55 = fsub \<2 x double\> %19, %47\l  %56 = insertelement \<2 x double\> poison, double %51, i64 0\l  %57 = shufflevector \<2 x double\> %56, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %58 = insertelement \<2 x double\> poison, double %50, i64 0\l  %59 = shufflevector \<2 x double\> %58, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %60 = fadd \<2 x double\> %57, %59\l  %61 = fsub \<2 x double\> %57, %59\l  %62 = shufflevector \<2 x double\> %60, \<2 x double\> %61, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %63 = fmul \<2 x double\> %62, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %64 = fadd \<2 x double\> %23, %63\l  %65 = fsub \<2 x double\> %23, %63\l  %66 = fadd \<2 x double\> %20, %49\l  %67 = fsub \<2 x double\> %20, %49\l  %68 = shufflevector \<2 x double\> %66, \<2 x double\> %67, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %69 = fsub \<2 x double\> %20, %49\l  %70 = extractelement \<2 x double\> %69, i64 0\l  %71 = fadd \<2 x double\> %20, %49\l  %72 = extractelement \<2 x double\> %71, i64 1\l  %73 = insertelement \<2 x double\> poison, double %53, i64 0\l  %74 = shufflevector \<2 x double\> %73, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %75 = insertelement \<2 x double\> poison, double %52, i64 0\l  %76 = shufflevector \<2 x double\> %75, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %77 = fsub \<2 x double\> %74, %76\l  %78 = fadd \<2 x double\> %74, %76\l  %79 = shufflevector \<2 x double\> %77, \<2 x double\> %78, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %80 = fmul \<2 x double\> %79, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %81 = fadd \<2 x double\> %24, %80\l  %82 = fsub \<2 x double\> %24, %80\l  %83 = shufflevector \<2 x double\> %81, \<2 x double\> %82, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %84 = shufflevector \<2 x double\> %82, \<2 x double\> %81, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %85 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 2,\l... i32 0\l  %86 = bitcast double* %85 to \<2 x double\>*\l  %87 = load \<2 x double\>, \<2 x double\>* %86, align 8, !tbaa !5\l  %88 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 18,\l... i32 0\l  %89 = bitcast double* %88 to \<2 x double\>*\l  %90 = load \<2 x double\>, \<2 x double\>* %89, align 8, !tbaa !5\l  %91 = fadd \<2 x double\> %87, %90\l  %92 = fsub \<2 x double\> %87, %90\l  %93 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 10,\l... i32 0\l  %94 = bitcast double* %93 to \<2 x double\>*\l  %95 = load \<2 x double\>, \<2 x double\>* %94, align 8, !tbaa !5\l  %96 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 26,\l... i32 0\l  %97 = bitcast double* %96 to \<2 x double\>*\l  %98 = load \<2 x double\>, \<2 x double\>* %97, align 8, !tbaa !5\l  %99 = fadd \<2 x double\> %95, %98\l  %100 = fsub \<2 x double\> %95, %98\l  %101 = shufflevector \<2 x double\> %100, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %102 = fadd \<2 x double\> %91, %99\l  %103 = fsub \<2 x double\> %91, %99\l  %104 = extractelement \<2 x double\> %103, i64 0\l  %105 = fsub \<2 x double\> %91, %99\l  %106 = extractelement \<2 x double\> %105, i64 1\l  %107 = fadd \<2 x double\> %92, %101\l  %108 = fsub \<2 x double\> %92, %101\l  %109 = shufflevector \<2 x double\> %107, \<2 x double\> %108, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %110 = shufflevector \<2 x double\> %108, \<2 x double\> %107, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %111 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 6,\l... i32 0\l  %112 = bitcast double* %111 to \<2 x double\>*\l  %113 = load \<2 x double\>, \<2 x double\>* %112, align 8, !tbaa !5\l  %114 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 22,\l... i32 0\l  %115 = bitcast double* %114 to \<2 x double\>*\l  %116 = load \<2 x double\>, \<2 x double\>* %115, align 8, !tbaa !5\l  %117 = fadd \<2 x double\> %113, %116\l  %118 = fsub \<2 x double\> %113, %116\l  %119 = extractelement \<2 x double\> %118, i64 0\l  %120 = fsub \<2 x double\> %113, %116\l  %121 = extractelement \<2 x double\> %120, i64 1\l  %122 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 14,\l... i32 0\l  %123 = bitcast double* %122 to \<2 x double\>*\l  %124 = load \<2 x double\>, \<2 x double\>* %123, align 8, !tbaa !5\l  %125 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 30,\l... i32 0\l  %126 = bitcast double* %125 to \<2 x double\>*\l  %127 = load \<2 x double\>, \<2 x double\>* %126, align 8, !tbaa !5\l  %128 = fadd \<2 x double\> %124, %127\l  %129 = fsub \<2 x double\> %124, %127\l  %130 = extractelement \<2 x double\> %129, i64 0\l  %131 = fsub \<2 x double\> %124, %127\l  %132 = extractelement \<2 x double\> %131, i64 1\l  %133 = fadd \<2 x double\> %117, %128\l  %134 = fsub \<2 x double\> %117, %128\l  %135 = extractelement \<2 x double\> %134, i64 0\l  %136 = fsub \<2 x double\> %117, %128\l  %137 = extractelement \<2 x double\> %136, i64 1\l  %138 = fadd double %119, %132\l  %139 = fsub double %121, %130\l  %140 = fsub double %119, %132\l  %141 = fadd double %121, %130\l  %142 = fadd \<2 x double\> %102, %133\l  %143 = fsub \<2 x double\> %102, %133\l  %144 = shufflevector \<2 x double\> %143, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %145 = insertelement \<2 x double\> poison, double %139, i64 0\l  %146 = shufflevector \<2 x double\> %145, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %147 = insertelement \<2 x double\> poison, double %138, i64 0\l  %148 = shufflevector \<2 x double\> %147, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %149 = fadd \<2 x double\> %146, %148\l  %150 = fsub \<2 x double\> %146, %148\l  %151 = shufflevector \<2 x double\> %149, \<2 x double\> %150, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %152 = fmul \<2 x double\> %151, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %153 = fadd \<2 x double\> %109, %152\l  %154 = fsub \<2 x double\> %109, %152\l  %155 = shufflevector \<2 x double\> %154, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %156 = fadd double %104, %137\l  %157 = fsub double %106, %135\l  %158 = fsub double %104, %137\l  %159 = fadd double %106, %135\l  %160 = insertelement \<2 x double\> poison, double %141, i64 0\l  %161 = shufflevector \<2 x double\> %160, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %162 = insertelement \<2 x double\> poison, double %140, i64 0\l  %163 = shufflevector \<2 x double\> %162, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %164 = fsub \<2 x double\> %161, %163\l  %165 = fadd \<2 x double\> %161, %163\l  %166 = shufflevector \<2 x double\> %164, \<2 x double\> %165, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %167 = fmul \<2 x double\> %166, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %168 = fadd \<2 x double\> %110, %167\l  %169 = fsub \<2 x double\> %110, %167\l  %170 = shufflevector \<2 x double\> %168, \<2 x double\> %169, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %171 = shufflevector \<2 x double\> %168, \<2 x double\> %169, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %172 = fadd \<2 x double\> %54, %142\l  %173 = fsub \<2 x double\> %54, %142\l  %174 = fmul \<2 x double\> %153, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %175 = shufflevector \<2 x double\> %174, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %176 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %153, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %175)\l  %177 = fadd \<2 x double\> %64, %176\l  %178 = fsub \<2 x double\> %64, %176\l  %179 = insertelement \<2 x double\> poison, double %157, i64 0\l  %180 = shufflevector \<2 x double\> %179, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %181 = insertelement \<2 x double\> poison, double %156, i64 0\l  %182 = shufflevector \<2 x double\> %181, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %183 = fadd \<2 x double\> %180, %182\l  %184 = fsub \<2 x double\> %180, %182\l  %185 = shufflevector \<2 x double\> %183, \<2 x double\> %184, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %186 = fmul \<2 x double\> %185, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %187 = fadd \<2 x double\> %68, %186\l  %188 = fsub \<2 x double\> %68, %186\l  %189 = shufflevector \<2 x double\> %169, \<2 x double\> %168, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %190 = fmul \<2 x double\> %189, \<double 0x3FED906BCF32832F, double\l... 0xBFED906BCF32832F\>\l  %191 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %170, \<2 x double\>\l... \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\> %190)\l  %192 = fadd \<2 x double\> %83, %191\l  %193 = fsub \<2 x double\> %83, %191\l  %194 = fadd \<2 x double\> %55, %144\l  %195 = fsub \<2 x double\> %55, %144\l  %196 = shufflevector \<2 x double\> %194, \<2 x double\> %195, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %197 = fsub \<2 x double\> %55, %144\l  %198 = extractelement \<2 x double\> %197, i64 0\l  %199 = fadd \<2 x double\> %55, %144\l  %200 = extractelement \<2 x double\> %199, i64 1\l  %201 = fmul \<2 x double\> %154, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %202 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %155, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %201)\l  %203 = fadd \<2 x double\> %65, %202\l  %204 = fsub \<2 x double\> %65, %202\l  %205 = shufflevector \<2 x double\> %203, \<2 x double\> %204, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %206 = shufflevector \<2 x double\> %204, \<2 x double\> %203, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %207 = fsub double %159, %158\l  %208 = fmul double %207, 0x3FE6A09E667F4BB8\l  %209 = fadd double %159, %158\l  %210 = fmul double %209, 0x3FE6A09E667F4BB8\l  %211 = fadd double %70, %208\l  %212 = fsub double %72, %210\l  %213 = fsub double %70, %208\l  %214 = fadd double %72, %210\l  %215 = shufflevector \<2 x double\> %169, \<2 x double\> %168, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %216 = fmul \<2 x double\> %215, \<double 0xBFED906BCF32832F, double\l... 0x3FED906BCF32832F\>\l  %217 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %171, \<2 x double\>\l... \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\> %216)\l  %218 = fadd \<2 x double\> %84, %217\l  %219 = fsub \<2 x double\> %84, %217\l  %220 = shufflevector \<2 x double\> %218, \<2 x double\> %219, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %221 = shufflevector \<2 x double\> %219, \<2 x double\> %218, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %222 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 1,\l... i32 0\l  %223 = bitcast double* %222 to \<2 x double\>*\l  %224 = load \<2 x double\>, \<2 x double\>* %223, align 8, !tbaa !5\l  %225 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 17,\l... i32 0\l  %226 = bitcast double* %225 to \<2 x double\>*\l  %227 = load \<2 x double\>, \<2 x double\>* %226, align 8, !tbaa !5\l  %228 = fadd \<2 x double\> %224, %227\l  %229 = fsub \<2 x double\> %224, %227\l  %230 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 9,\l... i32 0\l  %231 = bitcast double* %230 to \<2 x double\>*\l  %232 = load \<2 x double\>, \<2 x double\>* %231, align 8, !tbaa !5\l  %233 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 25,\l... i32 0\l  %234 = bitcast double* %233 to \<2 x double\>*\l  %235 = load \<2 x double\>, \<2 x double\>* %234, align 8, !tbaa !5\l  %236 = fadd \<2 x double\> %232, %235\l  %237 = fsub \<2 x double\> %232, %235\l  %238 = shufflevector \<2 x double\> %237, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %239 = fadd \<2 x double\> %228, %236\l  %240 = fsub \<2 x double\> %228, %236\l  %241 = fadd \<2 x double\> %229, %238\l  %242 = fsub \<2 x double\> %229, %238\l  %243 = shufflevector \<2 x double\> %241, \<2 x double\> %242, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %244 = shufflevector \<2 x double\> %242, \<2 x double\> %241, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %245 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 5,\l... i32 0\l  %246 = bitcast double* %245 to \<2 x double\>*\l  %247 = load \<2 x double\>, \<2 x double\>* %246, align 8, !tbaa !5\l  %248 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 21,\l... i32 0\l  %249 = bitcast double* %248 to \<2 x double\>*\l  %250 = load \<2 x double\>, \<2 x double\>* %249, align 8, !tbaa !5\l  %251 = fadd \<2 x double\> %247, %250\l  %252 = fsub \<2 x double\> %247, %250\l  %253 = extractelement \<2 x double\> %252, i64 0\l  %254 = fsub \<2 x double\> %247, %250\l  %255 = extractelement \<2 x double\> %254, i64 1\l  %256 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 13,\l... i32 0\l  %257 = bitcast double* %256 to \<2 x double\>*\l  %258 = load \<2 x double\>, \<2 x double\>* %257, align 8, !tbaa !5\l  %259 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 29,\l... i32 0\l  %260 = bitcast double* %259 to \<2 x double\>*\l  %261 = load \<2 x double\>, \<2 x double\>* %260, align 8, !tbaa !5\l  %262 = fadd \<2 x double\> %258, %261\l  %263 = fsub \<2 x double\> %258, %261\l  %264 = extractelement \<2 x double\> %263, i64 0\l  %265 = fsub \<2 x double\> %258, %261\l  %266 = extractelement \<2 x double\> %265, i64 1\l  %267 = fadd \<2 x double\> %251, %262\l  %268 = fsub \<2 x double\> %251, %262\l  %269 = shufflevector \<2 x double\> %268, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %270 = fadd double %253, %266\l  %271 = fsub double %255, %264\l  %272 = fsub double %253, %266\l  %273 = fadd double %255, %264\l  %274 = fadd \<2 x double\> %239, %267\l  %275 = fsub \<2 x double\> %239, %267\l  %276 = extractelement \<2 x double\> %275, i64 0\l  %277 = fsub \<2 x double\> %239, %267\l  %278 = extractelement \<2 x double\> %277, i64 1\l  %279 = insertelement \<2 x double\> poison, double %271, i64 0\l  %280 = shufflevector \<2 x double\> %279, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %281 = insertelement \<2 x double\> poison, double %270, i64 0\l  %282 = shufflevector \<2 x double\> %281, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %283 = fadd \<2 x double\> %280, %282\l  %284 = fsub \<2 x double\> %280, %282\l  %285 = shufflevector \<2 x double\> %283, \<2 x double\> %284, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %286 = fmul \<2 x double\> %285, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %287 = fadd \<2 x double\> %243, %286\l  %288 = fsub \<2 x double\> %243, %286\l  %289 = fadd \<2 x double\> %240, %269\l  %290 = fsub \<2 x double\> %240, %269\l  %291 = shufflevector \<2 x double\> %289, \<2 x double\> %290, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %292 = fsub \<2 x double\> %240, %269\l  %293 = extractelement \<2 x double\> %292, i64 0\l  %294 = fadd \<2 x double\> %240, %269\l  %295 = extractelement \<2 x double\> %294, i64 1\l  %296 = insertelement \<2 x double\> poison, double %273, i64 0\l  %297 = shufflevector \<2 x double\> %296, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %298 = insertelement \<2 x double\> poison, double %272, i64 0\l  %299 = shufflevector \<2 x double\> %298, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %300 = fsub \<2 x double\> %297, %299\l  %301 = fadd \<2 x double\> %297, %299\l  %302 = shufflevector \<2 x double\> %300, \<2 x double\> %301, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %303 = fmul \<2 x double\> %302, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %304 = fadd \<2 x double\> %244, %303\l  %305 = fsub \<2 x double\> %244, %303\l  %306 = shufflevector \<2 x double\> %304, \<2 x double\> %305, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %307 = shufflevector \<2 x double\> %305, \<2 x double\> %304, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %308 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 3,\l... i32 0\l  %309 = bitcast double* %308 to \<2 x double\>*\l  %310 = load \<2 x double\>, \<2 x double\>* %309, align 8, !tbaa !5\l  %311 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 19,\l... i32 0\l  %312 = bitcast double* %311 to \<2 x double\>*\l  %313 = load \<2 x double\>, \<2 x double\>* %312, align 8, !tbaa !5\l  %314 = fadd \<2 x double\> %310, %313\l  %315 = fsub \<2 x double\> %310, %313\l  %316 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 11,\l... i32 0\l  %317 = bitcast double* %316 to \<2 x double\>*\l  %318 = load \<2 x double\>, \<2 x double\>* %317, align 8, !tbaa !5\l  %319 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 27,\l... i32 0\l  %320 = bitcast double* %319 to \<2 x double\>*\l  %321 = load \<2 x double\>, \<2 x double\>* %320, align 8, !tbaa !5\l  %322 = fadd \<2 x double\> %318, %321\l  %323 = fsub \<2 x double\> %318, %321\l  %324 = shufflevector \<2 x double\> %323, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %325 = fadd \<2 x double\> %314, %322\l  %326 = fsub \<2 x double\> %314, %322\l  %327 = extractelement \<2 x double\> %326, i64 0\l  %328 = fsub \<2 x double\> %314, %322\l  %329 = extractelement \<2 x double\> %328, i64 1\l  %330 = fadd \<2 x double\> %315, %324\l  %331 = fsub \<2 x double\> %315, %324\l  %332 = shufflevector \<2 x double\> %330, \<2 x double\> %331, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %333 = shufflevector \<2 x double\> %331, \<2 x double\> %330, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %334 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 7,\l... i32 0\l  %335 = bitcast double* %334 to \<2 x double\>*\l  %336 = load \<2 x double\>, \<2 x double\>* %335, align 8, !tbaa !5\l  %337 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 23,\l... i32 0\l  %338 = bitcast double* %337 to \<2 x double\>*\l  %339 = load \<2 x double\>, \<2 x double\>* %338, align 8, !tbaa !5\l  %340 = fadd \<2 x double\> %336, %339\l  %341 = fsub \<2 x double\> %336, %339\l  %342 = extractelement \<2 x double\> %341, i64 0\l  %343 = fsub \<2 x double\> %336, %339\l  %344 = extractelement \<2 x double\> %343, i64 1\l  %345 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 15,\l... i32 0\l  %346 = bitcast double* %345 to \<2 x double\>*\l  %347 = load \<2 x double\>, \<2 x double\>* %346, align 8, !tbaa !5\l  %348 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %0, i64 31,\l... i32 0\l  %349 = bitcast double* %348 to \<2 x double\>*\l  %350 = load \<2 x double\>, \<2 x double\>* %349, align 8, !tbaa !5\l  %351 = fadd \<2 x double\> %347, %350\l  %352 = fsub \<2 x double\> %347, %350\l  %353 = extractelement \<2 x double\> %352, i64 0\l  %354 = fsub \<2 x double\> %347, %350\l  %355 = extractelement \<2 x double\> %354, i64 1\l  %356 = fadd \<2 x double\> %340, %351\l  %357 = fsub \<2 x double\> %340, %351\l  %358 = extractelement \<2 x double\> %357, i64 0\l  %359 = fsub \<2 x double\> %340, %351\l  %360 = extractelement \<2 x double\> %359, i64 1\l  %361 = fadd double %342, %355\l  %362 = fsub double %344, %353\l  %363 = fsub double %342, %355\l  %364 = fadd double %344, %353\l  %365 = fadd \<2 x double\> %325, %356\l  %366 = fsub \<2 x double\> %325, %356\l  %367 = extractelement \<2 x double\> %366, i64 0\l  %368 = fsub \<2 x double\> %325, %356\l  %369 = extractelement \<2 x double\> %368, i64 1\l  %370 = insertelement \<2 x double\> poison, double %362, i64 0\l  %371 = shufflevector \<2 x double\> %370, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %372 = insertelement \<2 x double\> poison, double %361, i64 0\l  %373 = shufflevector \<2 x double\> %372, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %374 = fadd \<2 x double\> %371, %373\l  %375 = fsub \<2 x double\> %371, %373\l  %376 = shufflevector \<2 x double\> %374, \<2 x double\> %375, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %377 = fmul \<2 x double\> %376, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %378 = fadd \<2 x double\> %332, %377\l  %379 = fsub \<2 x double\> %332, %377\l  %380 = shufflevector \<2 x double\> %379, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %381 = fadd double %327, %360\l  %382 = fsub double %329, %358\l  %383 = fsub double %327, %360\l  %384 = fadd double %329, %358\l  %385 = insertelement \<2 x double\> poison, double %364, i64 0\l  %386 = shufflevector \<2 x double\> %385, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %387 = insertelement \<2 x double\> poison, double %363, i64 0\l  %388 = shufflevector \<2 x double\> %387, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %389 = fsub \<2 x double\> %386, %388\l  %390 = fadd \<2 x double\> %386, %388\l  %391 = shufflevector \<2 x double\> %389, \<2 x double\> %390, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %392 = fmul \<2 x double\> %391, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %393 = fadd \<2 x double\> %333, %392\l  %394 = fsub \<2 x double\> %333, %392\l  %395 = shufflevector \<2 x double\> %393, \<2 x double\> %394, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %396 = shufflevector \<2 x double\> %393, \<2 x double\> %394, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %397 = fadd \<2 x double\> %274, %365\l  %398 = fsub \<2 x double\> %274, %365\l  %399 = shufflevector \<2 x double\> %398, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %400 = fmul \<2 x double\> %378, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %401 = shufflevector \<2 x double\> %400, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %402 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %378, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %401)\l  %403 = fadd \<2 x double\> %287, %402\l  %404 = fsub \<2 x double\> %287, %402\l  %405 = shufflevector \<2 x double\> %404, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %406 = insertelement \<2 x double\> poison, double %382, i64 0\l  %407 = shufflevector \<2 x double\> %406, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %408 = insertelement \<2 x double\> poison, double %381, i64 0\l  %409 = shufflevector \<2 x double\> %408, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %410 = fadd \<2 x double\> %407, %409\l  %411 = fsub \<2 x double\> %407, %409\l  %412 = shufflevector \<2 x double\> %410, \<2 x double\> %411, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %413 = fmul \<2 x double\> %412, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %414 = fadd \<2 x double\> %291, %413\l  %415 = fsub \<2 x double\> %291, %413\l  %416 = shufflevector \<2 x double\> %415, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %417 = shufflevector \<2 x double\> %394, \<2 x double\> %393, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %418 = fmul \<2 x double\> %417, \<double 0x3FED906BCF32832F, double\l... 0xBFED906BCF32832F\>\l  %419 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %395, \<2 x double\>\l... \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\> %418)\l  %420 = fadd \<2 x double\> %306, %419\l  %421 = fsub \<2 x double\> %306, %419\l  %422 = shufflevector \<2 x double\> %421, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %423 = fadd double %276, %369\l  %424 = fsub double %278, %367\l  %425 = fsub double %276, %369\l  %426 = fadd double %278, %367\l  %427 = fmul \<2 x double\> %379, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %428 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %380, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %427)\l  %429 = fadd \<2 x double\> %288, %428\l  %430 = fsub \<2 x double\> %288, %428\l  %431 = shufflevector \<2 x double\> %429, \<2 x double\> %430, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %432 = shufflevector \<2 x double\> %429, \<2 x double\> %430, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %433 = fsub double %384, %383\l  %434 = fmul double %433, 0x3FE6A09E667F4BB8\l  %435 = fadd double %384, %383\l  %436 = fmul double %435, 0x3FE6A09E667F4BB8\l  %437 = fadd double %293, %434\l  %438 = fsub double %295, %436\l  %439 = fsub double %293, %434\l  %440 = fadd double %295, %436\l  %441 = shufflevector \<2 x double\> %394, \<2 x double\> %393, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %442 = fmul \<2 x double\> %441, \<double 0xBFED906BCF32832F, double\l... 0x3FED906BCF32832F\>\l  %443 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %396, \<2 x double\>\l... \<double 0x3FD87DE2A6AEA312, double 0x3FD87DE2A6AEA312\>, \<2 x double\> %442)\l  %444 = fadd \<2 x double\> %307, %443\l  %445 = fsub \<2 x double\> %307, %443\l  %446 = shufflevector \<2 x double\> %444, \<2 x double\> %445, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %447 = shufflevector \<2 x double\> %444, \<2 x double\> %445, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %448 = fadd \<2 x double\> %172, %397\l  %449 = bitcast %struct.COMPLEX* %1 to \<2 x double\>*\l  store \<2 x double\> %448, \<2 x double\>* %449, align 8, !tbaa !5\l  %450 = fsub \<2 x double\> %172, %397\l  %451 = extractelement \<2 x double\> %450, i64 0\l  %452 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 16,\l... i32 0\l  store double %451, double* %452, align 8, !tbaa !9\l  %453 = fsub \<2 x double\> %172, %397\l  %454 = extractelement \<2 x double\> %453, i64 1\l  %455 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 16,\l... i32 1\l  store double %454, double* %455, align 8, !tbaa !11\l  %456 = fmul \<2 x double\> %403, \<double 0xBFC8F8B83C6993FD, double\l... 0x3FC8F8B83C6993FD\>\l  %457 = shufflevector \<2 x double\> %456, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %458 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %403, \<2 x double\>\l... \<double 0x3FEF6297CFF75494, double 0x3FEF6297CFF75494\>, \<2 x double\> %457)\l  %459 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 1,\l... i32 0\l  %460 = fadd \<2 x double\> %177, %458\l  %461 = bitcast double* %459 to \<2 x double\>*\l  store \<2 x double\> %460, \<2 x double\>* %461, align 8, !tbaa !5\l  %462 = fsub \<2 x double\> %177, %458\l  %463 = extractelement \<2 x double\> %462, i64 0\l  %464 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 17,\l... i32 0\l  store double %463, double* %464, align 8, !tbaa !9\l  %465 = fsub \<2 x double\> %177, %458\l  %466 = extractelement \<2 x double\> %465, i64 1\l  %467 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 17,\l... i32 1\l  store double %466, double* %467, align 8, !tbaa !11\l  %468 = fmul \<2 x double\> %414, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %469 = shufflevector \<2 x double\> %468, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %470 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %414, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %469)\l  %471 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 2,\l... i32 0\l  %472 = fadd \<2 x double\> %187, %470\l  %473 = bitcast double* %471 to \<2 x double\>*\l  store \<2 x double\> %472, \<2 x double\>* %473, align 8, !tbaa !5\l  %474 = fsub \<2 x double\> %187, %470\l  %475 = extractelement \<2 x double\> %474, i64 0\l  %476 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 18,\l... i32 0\l  store double %475, double* %476, align 8, !tbaa !9\l  %477 = fsub \<2 x double\> %187, %470\l  %478 = extractelement \<2 x double\> %477, i64 1\l  %479 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 18,\l... i32 1\l  store double %478, double* %479, align 8, !tbaa !11\l  %480 = fmul \<2 x double\> %420, \<double 0xBFE1C73B39AE76C7, double\l... 0x3FE1C73B39AE76C7\>\l  %481 = shufflevector \<2 x double\> %480, \<2 x double\> poison, \<2 x i32\> \<i32\l... 1, i32 0\>\l  %482 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %420, \<2 x double\>\l... \<double 0x3FEA9B66290EB1A3, double 0x3FEA9B66290EB1A3\>, \<2 x double\> %481)\l  %483 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 3,\l... i32 0\l  %484 = fadd \<2 x double\> %192, %482\l  %485 = bitcast double* %483 to \<2 x double\>*\l  store \<2 x double\> %484, \<2 x double\>* %485, align 8, !tbaa !5\l  %486 = fsub \<2 x double\> %192, %482\l  %487 = extractelement \<2 x double\> %486, i64 0\l  %488 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 19,\l... i32 0\l  store double %487, double* %488, align 8, !tbaa !9\l  %489 = fsub \<2 x double\> %192, %482\l  %490 = extractelement \<2 x double\> %489, i64 1\l  %491 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 19,\l... i32 1\l  store double %490, double* %491, align 8, !tbaa !11\l  %492 = insertelement \<2 x double\> poison, double %424, i64 0\l  %493 = shufflevector \<2 x double\> %492, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %494 = insertelement \<2 x double\> poison, double %423, i64 0\l  %495 = shufflevector \<2 x double\> %494, \<2 x double\> poison, \<2 x i32\>\l... zeroinitializer\l  %496 = fadd \<2 x double\> %493, %495\l  %497 = fsub \<2 x double\> %493, %495\l  %498 = shufflevector \<2 x double\> %496, \<2 x double\> %497, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %499 = fmul \<2 x double\> %498, \<double 0x3FE6A09E667F4BB8, double\l... 0x3FE6A09E667F4BB8\>\l  %500 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 4,\l... i32 0\l  %501 = fadd \<2 x double\> %196, %499\l  %502 = bitcast double* %500 to \<2 x double\>*\l  store \<2 x double\> %501, \<2 x double\>* %502, align 8, !tbaa !5\l  %503 = fsub \<2 x double\> %196, %499\l  %504 = extractelement \<2 x double\> %503, i64 0\l  %505 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 20,\l... i32 0\l  store double %504, double* %505, align 8, !tbaa !9\l  %506 = fsub \<2 x double\> %196, %499\l  %507 = extractelement \<2 x double\> %506, i64 1\l  %508 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 20,\l... i32 1\l  store double %507, double* %508, align 8, !tbaa !11\l  %509 = shufflevector \<2 x double\> %430, \<2 x double\> %429, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %510 = fmul \<2 x double\> %509, \<double 0x3FEA9B66290EB1A3, double\l... 0xBFEA9B66290EB1A3\>\l  %511 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %431, \<2 x double\>\l... \<double 0x3FE1C73B39AE76C7, double 0x3FE1C73B39AE76C7\>, \<2 x double\> %510)\l  %512 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 5,\l... i32 0\l  %513 = fadd \<2 x double\> %205, %511\l  %514 = bitcast double* %512 to \<2 x double\>*\l  store \<2 x double\> %513, \<2 x double\>* %514, align 8, !tbaa !5\l  %515 = fsub \<2 x double\> %205, %511\l  %516 = extractelement \<2 x double\> %515, i64 0\l  %517 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 21,\l... i32 0\l  store double %516, double* %517, align 8, !tbaa !9\l  %518 = fsub \<2 x double\> %205, %511\l  %519 = extractelement \<2 x double\> %518, i64 1\l  %520 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 21,\l... i32 1\l  store double %519, double* %520, align 8, !tbaa !11\l  %521 = fmul double %438, 0x3FED906BCF32832F\l  %522 = tail call double @llvm.fmuladd.f64(double %437, double\l... 0x3FD87DE2A6AEA312, double %521)\l  %523 = fmul double %437, 0xBFED906BCF32832F\l  %524 = tail call double @llvm.fmuladd.f64(double %438, double\l... 0x3FD87DE2A6AEA312, double %523)\l  %525 = fadd double %211, %522\l  %526 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 6,\l... i32 0\l  store double %525, double* %526, align 8, !tbaa !9\l  %527 = fadd double %212, %524\l  %528 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 6,\l... i32 1\l  store double %527, double* %528, align 8, !tbaa !11\l  %529 = fsub double %211, %522\l  %530 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 22,\l... i32 0\l  store double %529, double* %530, align 8, !tbaa !9\l  %531 = fsub double %212, %524\l  %532 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 22,\l... i32 1\l  store double %531, double* %532, align 8, !tbaa !11\l  %533 = shufflevector \<2 x double\> %445, \<2 x double\> %444, \<2 x i32\> \<i32 1,\l... i32 2\>\l  %534 = fmul \<2 x double\> %533, \<double 0x3FEF6297CFF75494, double\l... 0xBFEF6297CFF75494\>\l  %535 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %446, \<2 x double\>\l... \<double 0x3FC8F8B83C6993FD, double 0x3FC8F8B83C6993FD\>, \<2 x double\> %534)\l  %536 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 7,\l... i32 0\l  %537 = fadd \<2 x double\> %220, %535\l  %538 = bitcast double* %536 to \<2 x double\>*\l  store \<2 x double\> %537, \<2 x double\>* %538, align 8, !tbaa !5\l  %539 = fsub \<2 x double\> %220, %535\l  %540 = extractelement \<2 x double\> %539, i64 0\l  %541 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 23,\l... i32 0\l  store double %540, double* %541, align 8, !tbaa !9\l  %542 = fsub \<2 x double\> %220, %535\l  %543 = extractelement \<2 x double\> %542, i64 1\l  %544 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 23,\l... i32 1\l  store double %543, double* %544, align 8, !tbaa !11\l  %545 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 8,\l... i32 0\l  %546 = fadd \<2 x double\> %173, %399\l  %547 = fsub \<2 x double\> %173, %399\l  %548 = shufflevector \<2 x double\> %546, \<2 x double\> %547, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %549 = bitcast double* %545 to \<2 x double\>*\l  store \<2 x double\> %548, \<2 x double\>* %549, align 8, !tbaa !5\l  %550 = fsub \<2 x double\> %173, %399\l  %551 = extractelement \<2 x double\> %550, i64 0\l  %552 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 24,\l... i32 0\l  store double %551, double* %552, align 8, !tbaa !9\l  %553 = fadd \<2 x double\> %173, %399\l  %554 = extractelement \<2 x double\> %553, i64 1\l  %555 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 24,\l... i32 1\l  store double %554, double* %555, align 8, !tbaa !11\l  %556 = fmul \<2 x double\> %404, \<double 0xBFC8F8B83C6993FD, double\l... 0x3FC8F8B83C6993FD\>\l  %557 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %405, \<2 x double\>\l... \<double 0x3FEF6297CFF75494, double 0x3FEF6297CFF75494\>, \<2 x double\> %556)\l  %558 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 9,\l... i32 0\l  %559 = fadd \<2 x double\> %178, %557\l  %560 = fsub \<2 x double\> %178, %557\l  %561 = shufflevector \<2 x double\> %559, \<2 x double\> %560, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %562 = bitcast double* %558 to \<2 x double\>*\l  store \<2 x double\> %561, \<2 x double\>* %562, align 8, !tbaa !5\l  %563 = fsub \<2 x double\> %178, %557\l  %564 = extractelement \<2 x double\> %563, i64 0\l  %565 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 25,\l... i32 0\l  store double %564, double* %565, align 8, !tbaa !9\l  %566 = fadd \<2 x double\> %178, %557\l  %567 = extractelement \<2 x double\> %566, i64 1\l  %568 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 25,\l... i32 1\l  store double %567, double* %568, align 8, !tbaa !11\l  %569 = fmul \<2 x double\> %415, \<double 0xBFD87DE2A6AEA312, double\l... 0x3FD87DE2A6AEA312\>\l  %570 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %416, \<2 x double\>\l... \<double 0x3FED906BCF32832F, double 0x3FED906BCF32832F\>, \<2 x double\> %569)\l  %571 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 10,\l... i32 0\l  %572 = fadd \<2 x double\> %188, %570\l  %573 = fsub \<2 x double\> %188, %570\l  %574 = shufflevector \<2 x double\> %572, \<2 x double\> %573, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %575 = bitcast double* %571 to \<2 x double\>*\l  store \<2 x double\> %574, \<2 x double\>* %575, align 8, !tbaa !5\l  %576 = fsub \<2 x double\> %188, %570\l  %577 = extractelement \<2 x double\> %576, i64 0\l  %578 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 26,\l... i32 0\l  store double %577, double* %578, align 8, !tbaa !9\l  %579 = fadd \<2 x double\> %188, %570\l  %580 = extractelement \<2 x double\> %579, i64 1\l  %581 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 26,\l... i32 1\l  store double %580, double* %581, align 8, !tbaa !11\l  %582 = fmul \<2 x double\> %421, \<double 0xBFE1C73B39AE76C7, double\l... 0x3FE1C73B39AE76C7\>\l  %583 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %422, \<2 x double\>\l... \<double 0x3FEA9B66290EB1A3, double 0x3FEA9B66290EB1A3\>, \<2 x double\> %582)\l  %584 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 11,\l... i32 0\l  %585 = fadd \<2 x double\> %193, %583\l  %586 = fsub \<2 x double\> %193, %583\l  %587 = shufflevector \<2 x double\> %585, \<2 x double\> %586, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %588 = bitcast double* %584 to \<2 x double\>*\l  store \<2 x double\> %587, \<2 x double\>* %588, align 8, !tbaa !5\l  %589 = fsub \<2 x double\> %193, %583\l  %590 = extractelement \<2 x double\> %589, i64 0\l  %591 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 27,\l... i32 0\l  store double %590, double* %591, align 8, !tbaa !9\l  %592 = fadd \<2 x double\> %193, %583\l  %593 = extractelement \<2 x double\> %592, i64 1\l  %594 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 27,\l... i32 1\l  store double %593, double* %594, align 8, !tbaa !11\l  %595 = fsub double %426, %425\l  %596 = fmul double %595, 0x3FE6A09E667F4BB8\l  %597 = fadd double %426, %425\l  %598 = fmul double %597, 0x3FE6A09E667F4BB8\l  %599 = fadd double %198, %596\l  %600 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 12,\l... i32 0\l  store double %599, double* %600, align 8, !tbaa !9\l  %601 = fsub double %200, %598\l  %602 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 12,\l... i32 1\l  store double %601, double* %602, align 8, !tbaa !11\l  %603 = fsub double %198, %596\l  %604 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 28,\l... i32 0\l  store double %603, double* %604, align 8, !tbaa !9\l  %605 = fadd double %200, %598\l  %606 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 28,\l... i32 1\l  store double %605, double* %606, align 8, !tbaa !11\l  %607 = shufflevector \<2 x double\> %430, \<2 x double\> %429, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %608 = fmul \<2 x double\> %607, \<double 0xBFEA9B66290EB1A3, double\l... 0x3FEA9B66290EB1A3\>\l  %609 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %432, \<2 x double\>\l... \<double 0x3FE1C73B39AE76C7, double 0x3FE1C73B39AE76C7\>, \<2 x double\> %608)\l  %610 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 13,\l... i32 0\l  %611 = fadd \<2 x double\> %206, %609\l  %612 = fsub \<2 x double\> %206, %609\l  %613 = shufflevector \<2 x double\> %611, \<2 x double\> %612, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %614 = bitcast double* %610 to \<2 x double\>*\l  store \<2 x double\> %613, \<2 x double\>* %614, align 8, !tbaa !5\l  %615 = fsub \<2 x double\> %206, %609\l  %616 = extractelement \<2 x double\> %615, i64 0\l  %617 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 29,\l... i32 0\l  store double %616, double* %617, align 8, !tbaa !9\l  %618 = fadd \<2 x double\> %206, %609\l  %619 = extractelement \<2 x double\> %618, i64 1\l  %620 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 29,\l... i32 1\l  store double %619, double* %620, align 8, !tbaa !11\l  %621 = fmul double %439, 0xBFED906BCF32832F\l  %622 = tail call double @llvm.fmuladd.f64(double %440, double\l... 0x3FD87DE2A6AEA312, double %621)\l  %623 = fmul double %440, 0x3FED906BCF32832F\l  %624 = tail call double @llvm.fmuladd.f64(double %439, double\l... 0x3FD87DE2A6AEA312, double %623)\l  %625 = fadd double %213, %622\l  %626 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 14,\l... i32 0\l  store double %625, double* %626, align 8, !tbaa !9\l  %627 = fsub double %214, %624\l  %628 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 14,\l... i32 1\l  store double %627, double* %628, align 8, !tbaa !11\l  %629 = fsub double %213, %622\l  %630 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 30,\l... i32 0\l  store double %629, double* %630, align 8, !tbaa !9\l  %631 = fadd double %214, %624\l  %632 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 30,\l... i32 1\l  store double %631, double* %632, align 8, !tbaa !11\l  %633 = shufflevector \<2 x double\> %445, \<2 x double\> %444, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %634 = fmul \<2 x double\> %633, \<double 0xBFEF6297CFF75494, double\l... 0x3FEF6297CFF75494\>\l  %635 = call \<2 x double\> @llvm.fmuladd.v2f64(\<2 x double\> %447, \<2 x double\>\l... \<double 0x3FC8F8B83C6993FD, double 0x3FC8F8B83C6993FD\>, \<2 x double\> %634)\l  %636 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 15,\l... i32 0\l  %637 = fadd \<2 x double\> %221, %635\l  %638 = fsub \<2 x double\> %221, %635\l  %639 = shufflevector \<2 x double\> %637, \<2 x double\> %638, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %640 = bitcast double* %636 to \<2 x double\>*\l  store \<2 x double\> %639, \<2 x double\>* %640, align 8, !tbaa !5\l  %641 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 31,\l... i32 0\l  %642 = shufflevector \<2 x double\> %638, \<2 x double\> %637, \<2 x i32\> \<i32 0,\l... i32 3\>\l  %643 = bitcast double* %641 to \<2 x double\>*\l  store \<2 x double\> %642, \<2 x double\>* %643, align 8, !tbaa !5\l  ret void\l}"];
}

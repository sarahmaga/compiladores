digraph "CFG for 'fft_twiddle_32' function" {
	label="CFG for 'fft_twiddle_32' function";

	Node0x13fb310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%8:\l  %9 = sub nsw i32 %1, %0\l  %10 = icmp slt i32 %9, 128\l  br i1 %10, label %11, label %1085\l|{<s0>T|<s1>F}}"];
	Node0x13fb310:s0 -> Node0x143eeb0;
	Node0x13fb310:s1 -> Node0x144caa0;
	Node0x143eeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%11:\l11:                                               \l  %12 = icmp sgt i32 %1, %0\l  br i1 %12, label %13, label %1088\l|{<s0>T|<s1>F}}"];
	Node0x143eeb0:s0 -> Node0x144ca00;
	Node0x143eeb0:s1 -> Node0x144caf0;
	Node0x144ca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%13:\l13:                                               \l  %14 = sext i32 %0 to i64\l  %15 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %14\l  %16 = mul i32 %6, %0\l  %17 = shl nsw i32 %7, 4\l  %18 = sext i32 %17 to i64\l  %19 = shl nsw i32 %7, 3\l  %20 = sext i32 %19 to i64\l  %21 = mul nsw i32 %7, 24\l  %22 = sext i32 %21 to i64\l  %23 = shl nsw i32 %7, 2\l  %24 = sext i32 %23 to i64\l  %25 = mul nsw i32 %7, 20\l  %26 = sext i32 %25 to i64\l  %27 = mul nsw i32 %7, 12\l  %28 = sext i32 %27 to i64\l  %29 = mul nsw i32 %7, 28\l  %30 = sext i32 %29 to i64\l  %31 = shl nsw i32 %7, 1\l  %32 = sext i32 %31 to i64\l  %33 = mul nsw i32 %7, 18\l  %34 = sext i32 %33 to i64\l  %35 = mul nsw i32 %7, 10\l  %36 = sext i32 %35 to i64\l  %37 = mul nsw i32 %7, 26\l  %38 = sext i32 %37 to i64\l  %39 = mul nsw i32 %7, 6\l  %40 = sext i32 %39 to i64\l  %41 = mul nsw i32 %7, 22\l  %42 = sext i32 %41 to i64\l  %43 = mul nsw i32 %7, 14\l  %44 = sext i32 %43 to i64\l  %45 = mul nsw i32 %7, 30\l  %46 = sext i32 %45 to i64\l  %47 = sext i32 %7 to i64\l  %48 = mul nsw i32 %7, 17\l  %49 = sext i32 %48 to i64\l  %50 = mul nsw i32 %7, 9\l  %51 = sext i32 %50 to i64\l  %52 = mul nsw i32 %7, 25\l  %53 = sext i32 %52 to i64\l  %54 = mul nsw i32 %7, 5\l  %55 = sext i32 %54 to i64\l  %56 = mul nsw i32 %7, 21\l  %57 = sext i32 %56 to i64\l  %58 = mul nsw i32 %7, 13\l  %59 = sext i32 %58 to i64\l  %60 = mul nsw i32 %7, 29\l  %61 = sext i32 %60 to i64\l  %62 = mul nsw i32 %7, 3\l  %63 = sext i32 %62 to i64\l  %64 = mul nsw i32 %7, 19\l  %65 = sext i32 %64 to i64\l  %66 = mul nsw i32 %7, 11\l  %67 = sext i32 %66 to i64\l  %68 = mul nsw i32 %7, 27\l  %69 = sext i32 %68 to i64\l  %70 = mul nsw i32 %7, 7\l  %71 = sext i32 %70 to i64\l  %72 = mul nsw i32 %7, 23\l  %73 = sext i32 %72 to i64\l  %74 = mul nsw i32 %7, 15\l  %75 = sext i32 %74 to i64\l  %76 = mul nsw i32 %7, 31\l  %77 = sext i32 %76 to i64\l  %78 = sext i32 %16 to i64\l  %79 = sext i32 %6 to i64\l  %80 = sext i32 %1 to i64\l  br label %81\l}"];
	Node0x144ca00 -> Node0x144ca50;
	Node0x144ca50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i64 [ %14, %13 ], [ %1081, %81 ]\l  %83 = phi i64 [ %78, %13 ], [ %1082, %81 ]\l  %84 = phi %struct.COMPLEX* [ %15, %13 ], [ %1083, %81 ]\l  %85 = trunc i64 %83 to i32\l  %86 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %82\l  %87 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 0,\l... i32 0\l  %88 = load double, double* %87, align 8, !tbaa !5\l  %89 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %82,\l... i32 1\l  %90 = load double, double* %89, align 8, !tbaa !10\l  %91 = shl nsw i32 %85, 4\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %92,\l... i32 0\l  %94 = load double, double* %93, align 8, !tbaa !5\l  %95 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %92,\l... i32 1\l  %96 = load double, double* %95, align 8, !tbaa !10\l  %97 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %18\l  %98 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %97, i64 0,\l... i32 0\l  %99 = load double, double* %98, align 8, !tbaa !5\l  %100 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %97, i64 0,\l... i32 1\l  %101 = load double, double* %100, align 8, !tbaa !10\l  %102 = fneg double %96\l  %103 = fmul double %101, %102\l  %104 = call double @llvm.fmuladd.f64(double %94, double %99, double %103)\l  %105 = fmul double %94, %101\l  %106 = call double @llvm.fmuladd.f64(double %96, double %99, double %105)\l  %107 = fadd double %88, %104\l  %108 = fadd double %90, %106\l  %109 = fsub double %88, %104\l  %110 = fsub double %90, %106\l  %111 = shl nsw i32 %85, 3\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %112, i32 0\l  %114 = load double, double* %113, align 8, !tbaa !5\l  %115 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %112, i32 1\l  %116 = load double, double* %115, align 8, !tbaa !10\l  %117 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %20\l  %118 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %117, i64 0,\l... i32 0\l  %119 = load double, double* %118, align 8, !tbaa !5\l  %120 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %117, i64 0,\l... i32 1\l  %121 = load double, double* %120, align 8, !tbaa !10\l  %122 = fneg double %116\l  %123 = fmul double %121, %122\l  %124 = call double @llvm.fmuladd.f64(double %114, double %119, double %123)\l  %125 = fmul double %114, %121\l  %126 = call double @llvm.fmuladd.f64(double %116, double %119, double %125)\l  %127 = mul nsw i64 %83, 24\l  %128 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %127, i32 0\l  %129 = load double, double* %128, align 8, !tbaa !5\l  %130 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %127, i32 1\l  %131 = load double, double* %130, align 8, !tbaa !10\l  %132 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %22\l  %133 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %132, i64 0,\l... i32 0\l  %134 = load double, double* %133, align 8, !tbaa !5\l  %135 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %132, i64 0,\l... i32 1\l  %136 = load double, double* %135, align 8, !tbaa !10\l  %137 = fneg double %131\l  %138 = fmul double %136, %137\l  %139 = call double @llvm.fmuladd.f64(double %129, double %134, double %138)\l  %140 = fmul double %129, %136\l  %141 = call double @llvm.fmuladd.f64(double %131, double %134, double %140)\l  %142 = fadd double %124, %139\l  %143 = fadd double %126, %141\l  %144 = fsub double %124, %139\l  %145 = fsub double %126, %141\l  %146 = fadd double %107, %142\l  %147 = fadd double %108, %143\l  %148 = fsub double %107, %142\l  %149 = fsub double %108, %143\l  %150 = fadd double %109, %145\l  %151 = fsub double %110, %144\l  %152 = fsub double %109, %145\l  %153 = fadd double %110, %144\l  %154 = trunc i64 %83 to i32\l  %155 = shl nsw i32 %154, 2\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %156, i32 0\l  %158 = load double, double* %157, align 8, !tbaa !5\l  %159 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %156, i32 1\l  %160 = load double, double* %159, align 8, !tbaa !10\l  %161 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %24\l  %162 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %161, i64 0,\l... i32 0\l  %163 = load double, double* %162, align 8, !tbaa !5\l  %164 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %161, i64 0,\l... i32 1\l  %165 = load double, double* %164, align 8, !tbaa !10\l  %166 = fneg double %160\l  %167 = fmul double %165, %166\l  %168 = call double @llvm.fmuladd.f64(double %158, double %163, double %167)\l  %169 = fmul double %158, %165\l  %170 = call double @llvm.fmuladd.f64(double %160, double %163, double %169)\l  %171 = mul nsw i64 %83, 20\l  %172 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %171, i32 0\l  %173 = load double, double* %172, align 8, !tbaa !5\l  %174 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %171, i32 1\l  %175 = load double, double* %174, align 8, !tbaa !10\l  %176 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %26\l  %177 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %176, i64 0,\l... i32 0\l  %178 = load double, double* %177, align 8, !tbaa !5\l  %179 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %176, i64 0,\l... i32 1\l  %180 = load double, double* %179, align 8, !tbaa !10\l  %181 = fneg double %175\l  %182 = fmul double %180, %181\l  %183 = call double @llvm.fmuladd.f64(double %173, double %178, double %182)\l  %184 = fmul double %173, %180\l  %185 = call double @llvm.fmuladd.f64(double %175, double %178, double %184)\l  %186 = fadd double %168, %183\l  %187 = fadd double %170, %185\l  %188 = fsub double %168, %183\l  %189 = fsub double %170, %185\l  %190 = mul nsw i64 %83, 12\l  %191 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %190, i32 0\l  %192 = load double, double* %191, align 8, !tbaa !5\l  %193 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %190, i32 1\l  %194 = load double, double* %193, align 8, !tbaa !10\l  %195 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %28\l  %196 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %195, i64 0,\l... i32 0\l  %197 = load double, double* %196, align 8, !tbaa !5\l  %198 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %195, i64 0,\l... i32 1\l  %199 = load double, double* %198, align 8, !tbaa !10\l  %200 = fneg double %194\l  %201 = fmul double %199, %200\l  %202 = call double @llvm.fmuladd.f64(double %192, double %197, double %201)\l  %203 = fmul double %192, %199\l  %204 = call double @llvm.fmuladd.f64(double %194, double %197, double %203)\l  %205 = mul nsw i64 %83, 28\l  %206 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %205, i32 0\l  %207 = load double, double* %206, align 8, !tbaa !5\l  %208 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %205, i32 1\l  %209 = load double, double* %208, align 8, !tbaa !10\l  %210 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %30\l  %211 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %210, i64 0,\l... i32 0\l  %212 = load double, double* %211, align 8, !tbaa !5\l  %213 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %210, i64 0,\l... i32 1\l  %214 = load double, double* %213, align 8, !tbaa !10\l  %215 = fneg double %209\l  %216 = fmul double %214, %215\l  %217 = call double @llvm.fmuladd.f64(double %207, double %212, double %216)\l  %218 = fmul double %207, %214\l  %219 = call double @llvm.fmuladd.f64(double %209, double %212, double %218)\l  %220 = fadd double %202, %217\l  %221 = fadd double %204, %219\l  %222 = fsub double %202, %217\l  %223 = fsub double %204, %219\l  %224 = fadd double %186, %220\l  %225 = fadd double %187, %221\l  %226 = fsub double %186, %220\l  %227 = fsub double %187, %221\l  %228 = fadd double %188, %223\l  %229 = fsub double %189, %222\l  %230 = fsub double %188, %223\l  %231 = fadd double %189, %222\l  %232 = fadd double %146, %224\l  %233 = fadd double %147, %225\l  %234 = fsub double %146, %224\l  %235 = fsub double %147, %225\l  %236 = fadd double %228, %229\l  %237 = fmul double %236, 0x3FE6A09E667F4BB8\l  %238 = fsub double %229, %228\l  %239 = fmul double %238, 0x3FE6A09E667F4BB8\l  %240 = fadd double %150, %237\l  %241 = fadd double %151, %239\l  %242 = fsub double %150, %237\l  %243 = fsub double %151, %239\l  %244 = fadd double %148, %227\l  %245 = fsub double %149, %226\l  %246 = fsub double %148, %227\l  %247 = fadd double %149, %226\l  %248 = fsub double %231, %230\l  %249 = fmul double %248, 0x3FE6A09E667F4BB8\l  %250 = fadd double %230, %231\l  %251 = fmul double %250, 0x3FE6A09E667F4BB8\l  %252 = fadd double %152, %249\l  %253 = fsub double %153, %251\l  %254 = fsub double %152, %249\l  %255 = fadd double %153, %251\l  %256 = trunc i64 %83 to i32\l  %257 = shl nsw i32 %256, 1\l  %258 = sext i32 %257 to i64\l  %259 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %258, i32 0\l  %260 = load double, double* %259, align 8, !tbaa !5\l  %261 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %258, i32 1\l  %262 = load double, double* %261, align 8, !tbaa !10\l  %263 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %32\l  %264 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %263, i64 0,\l... i32 0\l  %265 = load double, double* %264, align 8, !tbaa !5\l  %266 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %263, i64 0,\l... i32 1\l  %267 = load double, double* %266, align 8, !tbaa !10\l  %268 = fneg double %262\l  %269 = fmul double %267, %268\l  %270 = call double @llvm.fmuladd.f64(double %260, double %265, double %269)\l  %271 = fmul double %260, %267\l  %272 = call double @llvm.fmuladd.f64(double %262, double %265, double %271)\l  %273 = mul nsw i64 %83, 18\l  %274 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %273, i32 0\l  %275 = load double, double* %274, align 8, !tbaa !5\l  %276 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %273, i32 1\l  %277 = load double, double* %276, align 8, !tbaa !10\l  %278 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %34\l  %279 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %278, i64 0,\l... i32 0\l  %280 = load double, double* %279, align 8, !tbaa !5\l  %281 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %278, i64 0,\l... i32 1\l  %282 = load double, double* %281, align 8, !tbaa !10\l  %283 = fneg double %277\l  %284 = fmul double %282, %283\l  %285 = call double @llvm.fmuladd.f64(double %275, double %280, double %284)\l  %286 = fmul double %275, %282\l  %287 = call double @llvm.fmuladd.f64(double %277, double %280, double %286)\l  %288 = fadd double %270, %285\l  %289 = fadd double %272, %287\l  %290 = fsub double %270, %285\l  %291 = fsub double %272, %287\l  %292 = mul nsw i64 %83, 10\l  %293 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %292, i32 0\l  %294 = load double, double* %293, align 8, !tbaa !5\l  %295 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %292, i32 1\l  %296 = load double, double* %295, align 8, !tbaa !10\l  %297 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %36\l  %298 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %297, i64 0,\l... i32 0\l  %299 = load double, double* %298, align 8, !tbaa !5\l  %300 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %297, i64 0,\l... i32 1\l  %301 = load double, double* %300, align 8, !tbaa !10\l  %302 = fneg double %296\l  %303 = fmul double %301, %302\l  %304 = call double @llvm.fmuladd.f64(double %294, double %299, double %303)\l  %305 = fmul double %294, %301\l  %306 = call double @llvm.fmuladd.f64(double %296, double %299, double %305)\l  %307 = mul nsw i64 %83, 26\l  %308 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %307, i32 0\l  %309 = load double, double* %308, align 8, !tbaa !5\l  %310 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %307, i32 1\l  %311 = load double, double* %310, align 8, !tbaa !10\l  %312 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %38\l  %313 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %312, i64 0,\l... i32 0\l  %314 = load double, double* %313, align 8, !tbaa !5\l  %315 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %312, i64 0,\l... i32 1\l  %316 = load double, double* %315, align 8, !tbaa !10\l  %317 = fneg double %311\l  %318 = fmul double %316, %317\l  %319 = call double @llvm.fmuladd.f64(double %309, double %314, double %318)\l  %320 = fmul double %309, %316\l  %321 = call double @llvm.fmuladd.f64(double %311, double %314, double %320)\l  %322 = fadd double %304, %319\l  %323 = fadd double %306, %321\l  %324 = fsub double %304, %319\l  %325 = fsub double %306, %321\l  %326 = fadd double %288, %322\l  %327 = fadd double %289, %323\l  %328 = fsub double %288, %322\l  %329 = fsub double %289, %323\l  %330 = fadd double %290, %325\l  %331 = fsub double %291, %324\l  %332 = fsub double %290, %325\l  %333 = fadd double %291, %324\l  %334 = mul nsw i64 %83, 6\l  %335 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %334, i32 0\l  %336 = load double, double* %335, align 8, !tbaa !5\l  %337 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %334, i32 1\l  %338 = load double, double* %337, align 8, !tbaa !10\l  %339 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %40\l  %340 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %339, i64 0,\l... i32 0\l  %341 = load double, double* %340, align 8, !tbaa !5\l  %342 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %339, i64 0,\l... i32 1\l  %343 = load double, double* %342, align 8, !tbaa !10\l  %344 = fneg double %338\l  %345 = fmul double %343, %344\l  %346 = call double @llvm.fmuladd.f64(double %336, double %341, double %345)\l  %347 = fmul double %336, %343\l  %348 = call double @llvm.fmuladd.f64(double %338, double %341, double %347)\l  %349 = mul nsw i64 %83, 22\l  %350 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %349, i32 0\l  %351 = load double, double* %350, align 8, !tbaa !5\l  %352 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %349, i32 1\l  %353 = load double, double* %352, align 8, !tbaa !10\l  %354 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %42\l  %355 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %354, i64 0,\l... i32 0\l  %356 = load double, double* %355, align 8, !tbaa !5\l  %357 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %354, i64 0,\l... i32 1\l  %358 = load double, double* %357, align 8, !tbaa !10\l  %359 = fneg double %353\l  %360 = fmul double %358, %359\l  %361 = call double @llvm.fmuladd.f64(double %351, double %356, double %360)\l  %362 = fmul double %351, %358\l  %363 = call double @llvm.fmuladd.f64(double %353, double %356, double %362)\l  %364 = fadd double %346, %361\l  %365 = fadd double %348, %363\l  %366 = fsub double %346, %361\l  %367 = fsub double %348, %363\l  %368 = mul nsw i64 %83, 14\l  %369 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %368, i32 0\l  %370 = load double, double* %369, align 8, !tbaa !5\l  %371 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %368, i32 1\l  %372 = load double, double* %371, align 8, !tbaa !10\l  %373 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %44\l  %374 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %373, i64 0,\l... i32 0\l  %375 = load double, double* %374, align 8, !tbaa !5\l  %376 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %373, i64 0,\l... i32 1\l  %377 = load double, double* %376, align 8, !tbaa !10\l  %378 = fneg double %372\l  %379 = fmul double %377, %378\l  %380 = call double @llvm.fmuladd.f64(double %370, double %375, double %379)\l  %381 = fmul double %370, %377\l  %382 = call double @llvm.fmuladd.f64(double %372, double %375, double %381)\l  %383 = mul nsw i64 %83, 30\l  %384 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %383, i32 0\l  %385 = load double, double* %384, align 8, !tbaa !5\l  %386 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %383, i32 1\l  %387 = load double, double* %386, align 8, !tbaa !10\l  %388 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %46\l  %389 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %388, i64 0,\l... i32 0\l  %390 = load double, double* %389, align 8, !tbaa !5\l  %391 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %388, i64 0,\l... i32 1\l  %392 = load double, double* %391, align 8, !tbaa !10\l  %393 = fneg double %387\l  %394 = fmul double %392, %393\l  %395 = call double @llvm.fmuladd.f64(double %385, double %390, double %394)\l  %396 = fmul double %385, %392\l  %397 = call double @llvm.fmuladd.f64(double %387, double %390, double %396)\l  %398 = fadd double %380, %395\l  %399 = fadd double %382, %397\l  %400 = fsub double %380, %395\l  %401 = fsub double %382, %397\l  %402 = fadd double %364, %398\l  %403 = fadd double %365, %399\l  %404 = fsub double %364, %398\l  %405 = fsub double %365, %399\l  %406 = fadd double %366, %401\l  %407 = fsub double %367, %400\l  %408 = fsub double %366, %401\l  %409 = fadd double %367, %400\l  %410 = fadd double %326, %402\l  %411 = fadd double %327, %403\l  %412 = fsub double %326, %402\l  %413 = fsub double %327, %403\l  %414 = fadd double %406, %407\l  %415 = fmul double %414, 0x3FE6A09E667F4BB8\l  %416 = fsub double %407, %406\l  %417 = fmul double %416, 0x3FE6A09E667F4BB8\l  %418 = fadd double %330, %415\l  %419 = fadd double %331, %417\l  %420 = fsub double %330, %415\l  %421 = fsub double %331, %417\l  %422 = fadd double %328, %405\l  %423 = fsub double %329, %404\l  %424 = fsub double %328, %405\l  %425 = fadd double %329, %404\l  %426 = fsub double %409, %408\l  %427 = fmul double %426, 0x3FE6A09E667F4BB8\l  %428 = fadd double %408, %409\l  %429 = fmul double %428, 0x3FE6A09E667F4BB8\l  %430 = fadd double %332, %427\l  %431 = fsub double %333, %429\l  %432 = fsub double %332, %427\l  %433 = fadd double %333, %429\l  %434 = fadd double %232, %410\l  %435 = fadd double %233, %411\l  %436 = fsub double %232, %410\l  %437 = fsub double %233, %411\l  %438 = fmul double %419, 0x3FD87DE2A6AEA312\l  %439 = call double @llvm.fmuladd.f64(double %418, double 0x3FED906BCF32832F,\l... double %438)\l  %440 = fmul double %418, 0xBFD87DE2A6AEA312\l  %441 = call double @llvm.fmuladd.f64(double %419, double 0x3FED906BCF32832F,\l... double %440)\l  %442 = fadd double %240, %439\l  %443 = fadd double %241, %441\l  %444 = fsub double %240, %439\l  %445 = fsub double %241, %441\l  %446 = fadd double %422, %423\l  %447 = fmul double %446, 0x3FE6A09E667F4BB8\l  %448 = fsub double %423, %422\l  %449 = fmul double %448, 0x3FE6A09E667F4BB8\l  %450 = fadd double %244, %447\l  %451 = fadd double %245, %449\l  %452 = fsub double %244, %447\l  %453 = fsub double %245, %449\l  %454 = fmul double %431, 0x3FED906BCF32832F\l  %455 = call double @llvm.fmuladd.f64(double %430, double 0x3FD87DE2A6AEA312,\l... double %454)\l  %456 = fmul double %430, 0xBFED906BCF32832F\l  %457 = call double @llvm.fmuladd.f64(double %431, double 0x3FD87DE2A6AEA312,\l... double %456)\l  %458 = fadd double %252, %455\l  %459 = fadd double %253, %457\l  %460 = fsub double %252, %455\l  %461 = fsub double %253, %457\l  %462 = fadd double %234, %413\l  %463 = fsub double %235, %412\l  %464 = fsub double %234, %413\l  %465 = fadd double %235, %412\l  %466 = fmul double %420, 0xBFD87DE2A6AEA312\l  %467 = call double @llvm.fmuladd.f64(double %421, double 0x3FED906BCF32832F,\l... double %466)\l  %468 = fmul double %421, 0x3FD87DE2A6AEA312\l  %469 = call double @llvm.fmuladd.f64(double %420, double 0x3FED906BCF32832F,\l... double %468)\l  %470 = fadd double %242, %467\l  %471 = fsub double %243, %469\l  %472 = fsub double %242, %467\l  %473 = fadd double %243, %469\l  %474 = fsub double %425, %424\l  %475 = fmul double %474, 0x3FE6A09E667F4BB8\l  %476 = fadd double %424, %425\l  %477 = fmul double %476, 0x3FE6A09E667F4BB8\l  %478 = fadd double %246, %475\l  %479 = fsub double %247, %477\l  %480 = fsub double %246, %475\l  %481 = fadd double %247, %477\l  %482 = fmul double %432, 0xBFED906BCF32832F\l  %483 = call double @llvm.fmuladd.f64(double %433, double 0x3FD87DE2A6AEA312,\l... double %482)\l  %484 = fmul double %433, 0x3FED906BCF32832F\l  %485 = call double @llvm.fmuladd.f64(double %432, double 0x3FD87DE2A6AEA312,\l... double %484)\l  %486 = fadd double %254, %483\l  %487 = fsub double %255, %485\l  %488 = fsub double %254, %483\l  %489 = fadd double %255, %485\l  %490 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %83,\l... i32 0\l  %491 = load double, double* %490, align 8, !tbaa !5\l  %492 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %83,\l... i32 1\l  %493 = load double, double* %492, align 8, !tbaa !10\l  %494 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %47\l  %495 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %494, i64 0,\l... i32 0\l  %496 = load double, double* %495, align 8, !tbaa !5\l  %497 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %494, i64 0,\l... i32 1\l  %498 = load double, double* %497, align 8, !tbaa !10\l  %499 = fneg double %493\l  %500 = fmul double %498, %499\l  %501 = call double @llvm.fmuladd.f64(double %491, double %496, double %500)\l  %502 = fmul double %491, %498\l  %503 = call double @llvm.fmuladd.f64(double %493, double %496, double %502)\l  %504 = mul nsw i64 %83, 17\l  %505 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %504, i32 0\l  %506 = load double, double* %505, align 8, !tbaa !5\l  %507 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %504, i32 1\l  %508 = load double, double* %507, align 8, !tbaa !10\l  %509 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %49\l  %510 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %509, i64 0,\l... i32 0\l  %511 = load double, double* %510, align 8, !tbaa !5\l  %512 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %509, i64 0,\l... i32 1\l  %513 = load double, double* %512, align 8, !tbaa !10\l  %514 = fneg double %508\l  %515 = fmul double %513, %514\l  %516 = call double @llvm.fmuladd.f64(double %506, double %511, double %515)\l  %517 = fmul double %506, %513\l  %518 = call double @llvm.fmuladd.f64(double %508, double %511, double %517)\l  %519 = fadd double %501, %516\l  %520 = fadd double %503, %518\l  %521 = fsub double %501, %516\l  %522 = fsub double %503, %518\l  %523 = mul nsw i64 %83, 9\l  %524 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %523, i32 0\l  %525 = load double, double* %524, align 8, !tbaa !5\l  %526 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %523, i32 1\l  %527 = load double, double* %526, align 8, !tbaa !10\l  %528 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %51\l  %529 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %528, i64 0,\l... i32 0\l  %530 = load double, double* %529, align 8, !tbaa !5\l  %531 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %528, i64 0,\l... i32 1\l  %532 = load double, double* %531, align 8, !tbaa !10\l  %533 = fneg double %527\l  %534 = fmul double %532, %533\l  %535 = call double @llvm.fmuladd.f64(double %525, double %530, double %534)\l  %536 = fmul double %525, %532\l  %537 = call double @llvm.fmuladd.f64(double %527, double %530, double %536)\l  %538 = mul nsw i64 %83, 25\l  %539 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %538, i32 0\l  %540 = load double, double* %539, align 8, !tbaa !5\l  %541 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %538, i32 1\l  %542 = load double, double* %541, align 8, !tbaa !10\l  %543 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %53\l  %544 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %543, i64 0,\l... i32 0\l  %545 = load double, double* %544, align 8, !tbaa !5\l  %546 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %543, i64 0,\l... i32 1\l  %547 = load double, double* %546, align 8, !tbaa !10\l  %548 = fneg double %542\l  %549 = fmul double %547, %548\l  %550 = call double @llvm.fmuladd.f64(double %540, double %545, double %549)\l  %551 = fmul double %540, %547\l  %552 = call double @llvm.fmuladd.f64(double %542, double %545, double %551)\l  %553 = fadd double %535, %550\l  %554 = fadd double %537, %552\l  %555 = fsub double %535, %550\l  %556 = fsub double %537, %552\l  %557 = fadd double %519, %553\l  %558 = fadd double %520, %554\l  %559 = fsub double %519, %553\l  %560 = fsub double %520, %554\l  %561 = fadd double %521, %556\l  %562 = fsub double %522, %555\l  %563 = fsub double %521, %556\l  %564 = fadd double %522, %555\l  %565 = mul nsw i64 %83, 5\l  %566 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %565, i32 0\l  %567 = load double, double* %566, align 8, !tbaa !5\l  %568 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %565, i32 1\l  %569 = load double, double* %568, align 8, !tbaa !10\l  %570 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %55\l  %571 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %570, i64 0,\l... i32 0\l  %572 = load double, double* %571, align 8, !tbaa !5\l  %573 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %570, i64 0,\l... i32 1\l  %574 = load double, double* %573, align 8, !tbaa !10\l  %575 = fneg double %569\l  %576 = fmul double %574, %575\l  %577 = call double @llvm.fmuladd.f64(double %567, double %572, double %576)\l  %578 = fmul double %567, %574\l  %579 = call double @llvm.fmuladd.f64(double %569, double %572, double %578)\l  %580 = mul nsw i64 %83, 21\l  %581 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %580, i32 0\l  %582 = load double, double* %581, align 8, !tbaa !5\l  %583 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %580, i32 1\l  %584 = load double, double* %583, align 8, !tbaa !10\l  %585 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %57\l  %586 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %585, i64 0,\l... i32 0\l  %587 = load double, double* %586, align 8, !tbaa !5\l  %588 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %585, i64 0,\l... i32 1\l  %589 = load double, double* %588, align 8, !tbaa !10\l  %590 = fneg double %584\l  %591 = fmul double %589, %590\l  %592 = call double @llvm.fmuladd.f64(double %582, double %587, double %591)\l  %593 = fmul double %582, %589\l  %594 = call double @llvm.fmuladd.f64(double %584, double %587, double %593)\l  %595 = fadd double %577, %592\l  %596 = fadd double %579, %594\l  %597 = fsub double %577, %592\l  %598 = fsub double %579, %594\l  %599 = mul nsw i64 %83, 13\l  %600 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %599, i32 0\l  %601 = load double, double* %600, align 8, !tbaa !5\l  %602 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %599, i32 1\l  %603 = load double, double* %602, align 8, !tbaa !10\l  %604 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %59\l  %605 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %604, i64 0,\l... i32 0\l  %606 = load double, double* %605, align 8, !tbaa !5\l  %607 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %604, i64 0,\l... i32 1\l  %608 = load double, double* %607, align 8, !tbaa !10\l  %609 = fneg double %603\l  %610 = fmul double %608, %609\l  %611 = call double @llvm.fmuladd.f64(double %601, double %606, double %610)\l  %612 = fmul double %601, %608\l  %613 = call double @llvm.fmuladd.f64(double %603, double %606, double %612)\l  %614 = mul nsw i64 %83, 29\l  %615 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %614, i32 0\l  %616 = load double, double* %615, align 8, !tbaa !5\l  %617 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %614, i32 1\l  %618 = load double, double* %617, align 8, !tbaa !10\l  %619 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %61\l  %620 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %619, i64 0,\l... i32 0\l  %621 = load double, double* %620, align 8, !tbaa !5\l  %622 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %619, i64 0,\l... i32 1\l  %623 = load double, double* %622, align 8, !tbaa !10\l  %624 = fneg double %618\l  %625 = fmul double %623, %624\l  %626 = call double @llvm.fmuladd.f64(double %616, double %621, double %625)\l  %627 = fmul double %616, %623\l  %628 = call double @llvm.fmuladd.f64(double %618, double %621, double %627)\l  %629 = fadd double %611, %626\l  %630 = fadd double %613, %628\l  %631 = fsub double %611, %626\l  %632 = fsub double %613, %628\l  %633 = fadd double %595, %629\l  %634 = fadd double %596, %630\l  %635 = fsub double %595, %629\l  %636 = fsub double %596, %630\l  %637 = fadd double %597, %632\l  %638 = fsub double %598, %631\l  %639 = fsub double %597, %632\l  %640 = fadd double %598, %631\l  %641 = fadd double %557, %633\l  %642 = fadd double %558, %634\l  %643 = fsub double %557, %633\l  %644 = fsub double %558, %634\l  %645 = fadd double %637, %638\l  %646 = fmul double %645, 0x3FE6A09E667F4BB8\l  %647 = fsub double %638, %637\l  %648 = fmul double %647, 0x3FE6A09E667F4BB8\l  %649 = fadd double %561, %646\l  %650 = fadd double %562, %648\l  %651 = fsub double %561, %646\l  %652 = fsub double %562, %648\l  %653 = fadd double %559, %636\l  %654 = fsub double %560, %635\l  %655 = fsub double %559, %636\l  %656 = fadd double %560, %635\l  %657 = fsub double %640, %639\l  %658 = fmul double %657, 0x3FE6A09E667F4BB8\l  %659 = fadd double %639, %640\l  %660 = fmul double %659, 0x3FE6A09E667F4BB8\l  %661 = fadd double %563, %658\l  %662 = fsub double %564, %660\l  %663 = fsub double %563, %658\l  %664 = fadd double %564, %660\l  %665 = mul nsw i64 %83, 3\l  %666 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %665, i32 0\l  %667 = load double, double* %666, align 8, !tbaa !5\l  %668 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %665, i32 1\l  %669 = load double, double* %668, align 8, !tbaa !10\l  %670 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %63\l  %671 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %670, i64 0,\l... i32 0\l  %672 = load double, double* %671, align 8, !tbaa !5\l  %673 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %670, i64 0,\l... i32 1\l  %674 = load double, double* %673, align 8, !tbaa !10\l  %675 = fneg double %669\l  %676 = fmul double %674, %675\l  %677 = call double @llvm.fmuladd.f64(double %667, double %672, double %676)\l  %678 = fmul double %667, %674\l  %679 = call double @llvm.fmuladd.f64(double %669, double %672, double %678)\l  %680 = mul nsw i64 %83, 19\l  %681 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %680, i32 0\l  %682 = load double, double* %681, align 8, !tbaa !5\l  %683 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %680, i32 1\l  %684 = load double, double* %683, align 8, !tbaa !10\l  %685 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %65\l  %686 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %685, i64 0,\l... i32 0\l  %687 = load double, double* %686, align 8, !tbaa !5\l  %688 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %685, i64 0,\l... i32 1\l  %689 = load double, double* %688, align 8, !tbaa !10\l  %690 = fneg double %684\l  %691 = fmul double %689, %690\l  %692 = call double @llvm.fmuladd.f64(double %682, double %687, double %691)\l  %693 = fmul double %682, %689\l  %694 = call double @llvm.fmuladd.f64(double %684, double %687, double %693)\l  %695 = fadd double %677, %692\l  %696 = fadd double %679, %694\l  %697 = fsub double %677, %692\l  %698 = fsub double %679, %694\l  %699 = mul nsw i64 %83, 11\l  %700 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %699, i32 0\l  %701 = load double, double* %700, align 8, !tbaa !5\l  %702 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %699, i32 1\l  %703 = load double, double* %702, align 8, !tbaa !10\l  %704 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %67\l  %705 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %704, i64 0,\l... i32 0\l  %706 = load double, double* %705, align 8, !tbaa !5\l  %707 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %704, i64 0,\l... i32 1\l  %708 = load double, double* %707, align 8, !tbaa !10\l  %709 = fneg double %703\l  %710 = fmul double %708, %709\l  %711 = call double @llvm.fmuladd.f64(double %701, double %706, double %710)\l  %712 = fmul double %701, %708\l  %713 = call double @llvm.fmuladd.f64(double %703, double %706, double %712)\l  %714 = mul nsw i64 %83, 27\l  %715 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %714, i32 0\l  %716 = load double, double* %715, align 8, !tbaa !5\l  %717 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %714, i32 1\l  %718 = load double, double* %717, align 8, !tbaa !10\l  %719 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %69\l  %720 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %719, i64 0,\l... i32 0\l  %721 = load double, double* %720, align 8, !tbaa !5\l  %722 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %719, i64 0,\l... i32 1\l  %723 = load double, double* %722, align 8, !tbaa !10\l  %724 = fneg double %718\l  %725 = fmul double %723, %724\l  %726 = call double @llvm.fmuladd.f64(double %716, double %721, double %725)\l  %727 = fmul double %716, %723\l  %728 = call double @llvm.fmuladd.f64(double %718, double %721, double %727)\l  %729 = fadd double %711, %726\l  %730 = fadd double %713, %728\l  %731 = fsub double %711, %726\l  %732 = fsub double %713, %728\l  %733 = fadd double %695, %729\l  %734 = fadd double %696, %730\l  %735 = fsub double %695, %729\l  %736 = fsub double %696, %730\l  %737 = fadd double %697, %732\l  %738 = fsub double %698, %731\l  %739 = fsub double %697, %732\l  %740 = fadd double %698, %731\l  %741 = mul nsw i64 %83, 7\l  %742 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %741, i32 0\l  %743 = load double, double* %742, align 8, !tbaa !5\l  %744 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %741, i32 1\l  %745 = load double, double* %744, align 8, !tbaa !10\l  %746 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %71\l  %747 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %746, i64 0,\l... i32 0\l  %748 = load double, double* %747, align 8, !tbaa !5\l  %749 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %746, i64 0,\l... i32 1\l  %750 = load double, double* %749, align 8, !tbaa !10\l  %751 = fneg double %745\l  %752 = fmul double %750, %751\l  %753 = call double @llvm.fmuladd.f64(double %743, double %748, double %752)\l  %754 = fmul double %743, %750\l  %755 = call double @llvm.fmuladd.f64(double %745, double %748, double %754)\l  %756 = mul nsw i64 %83, 23\l  %757 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %756, i32 0\l  %758 = load double, double* %757, align 8, !tbaa !5\l  %759 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %756, i32 1\l  %760 = load double, double* %759, align 8, !tbaa !10\l  %761 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %73\l  %762 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %761, i64 0,\l... i32 0\l  %763 = load double, double* %762, align 8, !tbaa !5\l  %764 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %761, i64 0,\l... i32 1\l  %765 = load double, double* %764, align 8, !tbaa !10\l  %766 = fneg double %760\l  %767 = fmul double %765, %766\l  %768 = call double @llvm.fmuladd.f64(double %758, double %763, double %767)\l  %769 = fmul double %758, %765\l  %770 = call double @llvm.fmuladd.f64(double %760, double %763, double %769)\l  %771 = fadd double %753, %768\l  %772 = fadd double %755, %770\l  %773 = fsub double %753, %768\l  %774 = fsub double %755, %770\l  %775 = mul nsw i64 %83, 15\l  %776 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %775, i32 0\l  %777 = load double, double* %776, align 8, !tbaa !5\l  %778 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %775, i32 1\l  %779 = load double, double* %778, align 8, !tbaa !10\l  %780 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %75\l  %781 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %780, i64 0,\l... i32 0\l  %782 = load double, double* %781, align 8, !tbaa !5\l  %783 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %780, i64 0,\l... i32 1\l  %784 = load double, double* %783, align 8, !tbaa !10\l  %785 = fneg double %779\l  %786 = fmul double %784, %785\l  %787 = call double @llvm.fmuladd.f64(double %777, double %782, double %786)\l  %788 = fmul double %777, %784\l  %789 = call double @llvm.fmuladd.f64(double %779, double %782, double %788)\l  %790 = mul nsw i64 %83, 31\l  %791 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %790, i32 0\l  %792 = load double, double* %791, align 8, !tbaa !5\l  %793 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %790, i32 1\l  %794 = load double, double* %793, align 8, !tbaa !10\l  %795 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %86, i64 %77\l  %796 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %795, i64 0,\l... i32 0\l  %797 = load double, double* %796, align 8, !tbaa !5\l  %798 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %795, i64 0,\l... i32 1\l  %799 = load double, double* %798, align 8, !tbaa !10\l  %800 = fneg double %794\l  %801 = fmul double %799, %800\l  %802 = call double @llvm.fmuladd.f64(double %792, double %797, double %801)\l  %803 = fmul double %792, %799\l  %804 = call double @llvm.fmuladd.f64(double %794, double %797, double %803)\l  %805 = fadd double %787, %802\l  %806 = fadd double %789, %804\l  %807 = fsub double %787, %802\l  %808 = fsub double %789, %804\l  %809 = fadd double %771, %805\l  %810 = fadd double %772, %806\l  %811 = fsub double %771, %805\l  %812 = fsub double %772, %806\l  %813 = fadd double %773, %808\l  %814 = fsub double %774, %807\l  %815 = fsub double %773, %808\l  %816 = fadd double %774, %807\l  %817 = fadd double %733, %809\l  %818 = fadd double %734, %810\l  %819 = fsub double %733, %809\l  %820 = fsub double %734, %810\l  %821 = fadd double %813, %814\l  %822 = fmul double %821, 0x3FE6A09E667F4BB8\l  %823 = fsub double %814, %813\l  %824 = fmul double %823, 0x3FE6A09E667F4BB8\l  %825 = fadd double %737, %822\l  %826 = fadd double %738, %824\l  %827 = fsub double %737, %822\l  %828 = fsub double %738, %824\l  %829 = fadd double %735, %812\l  %830 = fsub double %736, %811\l  %831 = fsub double %735, %812\l  %832 = fadd double %736, %811\l  %833 = fsub double %816, %815\l  %834 = fmul double %833, 0x3FE6A09E667F4BB8\l  %835 = fadd double %815, %816\l  %836 = fmul double %835, 0x3FE6A09E667F4BB8\l  %837 = fadd double %739, %834\l  %838 = fsub double %740, %836\l  %839 = fsub double %739, %834\l  %840 = fadd double %740, %836\l  %841 = fadd double %641, %817\l  %842 = fadd double %642, %818\l  %843 = fsub double %641, %817\l  %844 = fsub double %642, %818\l  %845 = fmul double %826, 0x3FD87DE2A6AEA312\l  %846 = call double @llvm.fmuladd.f64(double %825, double 0x3FED906BCF32832F,\l... double %845)\l  %847 = fmul double %825, 0xBFD87DE2A6AEA312\l  %848 = call double @llvm.fmuladd.f64(double %826, double 0x3FED906BCF32832F,\l... double %847)\l  %849 = fadd double %649, %846\l  %850 = fadd double %650, %848\l  %851 = fsub double %649, %846\l  %852 = fsub double %650, %848\l  %853 = fadd double %829, %830\l  %854 = fmul double %853, 0x3FE6A09E667F4BB8\l  %855 = fsub double %830, %829\l  %856 = fmul double %855, 0x3FE6A09E667F4BB8\l  %857 = fadd double %653, %854\l  %858 = fadd double %654, %856\l  %859 = fsub double %653, %854\l  %860 = fsub double %654, %856\l  %861 = fmul double %838, 0x3FED906BCF32832F\l  %862 = call double @llvm.fmuladd.f64(double %837, double 0x3FD87DE2A6AEA312,\l... double %861)\l  %863 = fmul double %837, 0xBFED906BCF32832F\l  %864 = call double @llvm.fmuladd.f64(double %838, double 0x3FD87DE2A6AEA312,\l... double %863)\l  %865 = fadd double %661, %862\l  %866 = fadd double %662, %864\l  %867 = fsub double %661, %862\l  %868 = fsub double %662, %864\l  %869 = fadd double %643, %820\l  %870 = fsub double %644, %819\l  %871 = fsub double %643, %820\l  %872 = fadd double %644, %819\l  %873 = fmul double %827, 0xBFD87DE2A6AEA312\l  %874 = call double @llvm.fmuladd.f64(double %828, double 0x3FED906BCF32832F,\l... double %873)\l  %875 = fmul double %828, 0x3FD87DE2A6AEA312\l  %876 = call double @llvm.fmuladd.f64(double %827, double 0x3FED906BCF32832F,\l... double %875)\l  %877 = fadd double %651, %874\l  %878 = fsub double %652, %876\l  %879 = fsub double %651, %874\l  %880 = fadd double %652, %876\l  %881 = fsub double %832, %831\l  %882 = fmul double %881, 0x3FE6A09E667F4BB8\l  %883 = fadd double %831, %832\l  %884 = fmul double %883, 0x3FE6A09E667F4BB8\l  %885 = fadd double %655, %882\l  %886 = fsub double %656, %884\l  %887 = fsub double %655, %882\l  %888 = fadd double %656, %884\l  %889 = fmul double %839, 0xBFED906BCF32832F\l  %890 = call double @llvm.fmuladd.f64(double %840, double 0x3FD87DE2A6AEA312,\l... double %889)\l  %891 = fmul double %840, 0x3FED906BCF32832F\l  %892 = call double @llvm.fmuladd.f64(double %839, double 0x3FD87DE2A6AEA312,\l... double %891)\l  %893 = fadd double %663, %890\l  %894 = fsub double %664, %892\l  %895 = fsub double %663, %890\l  %896 = fadd double %664, %892\l  %897 = fadd double %434, %841\l  %898 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64 0,\l... i32 0\l  store double %897, double* %898, align 8, !tbaa !5\l  %899 = fadd double %435, %842\l  %900 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64 0,\l... i32 1\l  store double %899, double* %900, align 8, !tbaa !10\l  %901 = fsub double %434, %841\l  %902 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %18, i32 0\l  store double %901, double* %902, align 8, !tbaa !5\l  %903 = fsub double %435, %842\l  %904 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %18, i32 1\l  store double %903, double* %904, align 8, !tbaa !10\l  %905 = fmul double %850, 0x3FC8F8B83C6993FD\l  %906 = call double @llvm.fmuladd.f64(double %849, double 0x3FEF6297CFF75494,\l... double %905)\l  %907 = fmul double %849, 0xBFC8F8B83C6993FD\l  %908 = call double @llvm.fmuladd.f64(double %850, double 0x3FEF6297CFF75494,\l... double %907)\l  %909 = fadd double %442, %906\l  %910 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %47, i32 0\l  store double %909, double* %910, align 8, !tbaa !5\l  %911 = fadd double %443, %908\l  %912 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %47, i32 1\l  store double %911, double* %912, align 8, !tbaa !10\l  %913 = fsub double %442, %906\l  %914 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %49, i32 0\l  store double %913, double* %914, align 8, !tbaa !5\l  %915 = fsub double %443, %908\l  %916 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %49, i32 1\l  store double %915, double* %916, align 8, !tbaa !10\l  %917 = fmul double %858, 0x3FD87DE2A6AEA312\l  %918 = call double @llvm.fmuladd.f64(double %857, double 0x3FED906BCF32832F,\l... double %917)\l  %919 = fmul double %857, 0xBFD87DE2A6AEA312\l  %920 = call double @llvm.fmuladd.f64(double %858, double 0x3FED906BCF32832F,\l... double %919)\l  %921 = fadd double %450, %918\l  %922 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %32, i32 0\l  store double %921, double* %922, align 8, !tbaa !5\l  %923 = fadd double %451, %920\l  %924 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %32, i32 1\l  store double %923, double* %924, align 8, !tbaa !10\l  %925 = fsub double %450, %918\l  %926 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %34, i32 0\l  store double %925, double* %926, align 8, !tbaa !5\l  %927 = fsub double %451, %920\l  %928 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %34, i32 1\l  store double %927, double* %928, align 8, !tbaa !10\l  %929 = fmul double %866, 0x3FE1C73B39AE76C7\l  %930 = call double @llvm.fmuladd.f64(double %865, double 0x3FEA9B66290EB1A3,\l... double %929)\l  %931 = fmul double %865, 0xBFE1C73B39AE76C7\l  %932 = call double @llvm.fmuladd.f64(double %866, double 0x3FEA9B66290EB1A3,\l... double %931)\l  %933 = fadd double %458, %930\l  %934 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %63, i32 0\l  store double %933, double* %934, align 8, !tbaa !5\l  %935 = fadd double %459, %932\l  %936 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %63, i32 1\l  store double %935, double* %936, align 8, !tbaa !10\l  %937 = fsub double %458, %930\l  %938 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %65, i32 0\l  store double %937, double* %938, align 8, !tbaa !5\l  %939 = fsub double %459, %932\l  %940 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %65, i32 1\l  store double %939, double* %940, align 8, !tbaa !10\l  %941 = fadd double %869, %870\l  %942 = fmul double %941, 0x3FE6A09E667F4BB8\l  %943 = fsub double %870, %869\l  %944 = fmul double %943, 0x3FE6A09E667F4BB8\l  %945 = fadd double %462, %942\l  %946 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %24, i32 0\l  store double %945, double* %946, align 8, !tbaa !5\l  %947 = fadd double %463, %944\l  %948 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %24, i32 1\l  store double %947, double* %948, align 8, !tbaa !10\l  %949 = fsub double %462, %942\l  %950 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %26, i32 0\l  store double %949, double* %950, align 8, !tbaa !5\l  %951 = fsub double %463, %944\l  %952 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %26, i32 1\l  store double %951, double* %952, align 8, !tbaa !10\l  %953 = fmul double %878, 0x3FEA9B66290EB1A3\l  %954 = call double @llvm.fmuladd.f64(double %877, double 0x3FE1C73B39AE76C7,\l... double %953)\l  %955 = fmul double %877, 0xBFEA9B66290EB1A3\l  %956 = call double @llvm.fmuladd.f64(double %878, double 0x3FE1C73B39AE76C7,\l... double %955)\l  %957 = fadd double %470, %954\l  %958 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %55, i32 0\l  store double %957, double* %958, align 8, !tbaa !5\l  %959 = fadd double %471, %956\l  %960 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %55, i32 1\l  store double %959, double* %960, align 8, !tbaa !10\l  %961 = fsub double %470, %954\l  %962 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %57, i32 0\l  store double %961, double* %962, align 8, !tbaa !5\l  %963 = fsub double %471, %956\l  %964 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %57, i32 1\l  store double %963, double* %964, align 8, !tbaa !10\l  %965 = fmul double %886, 0x3FED906BCF32832F\l  %966 = call double @llvm.fmuladd.f64(double %885, double 0x3FD87DE2A6AEA312,\l... double %965)\l  %967 = fmul double %885, 0xBFED906BCF32832F\l  %968 = call double @llvm.fmuladd.f64(double %886, double 0x3FD87DE2A6AEA312,\l... double %967)\l  %969 = fadd double %478, %966\l  %970 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %40, i32 0\l  store double %969, double* %970, align 8, !tbaa !5\l  %971 = fadd double %479, %968\l  %972 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %40, i32 1\l  store double %971, double* %972, align 8, !tbaa !10\l  %973 = fsub double %478, %966\l  %974 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %42, i32 0\l  store double %973, double* %974, align 8, !tbaa !5\l  %975 = fsub double %479, %968\l  %976 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %42, i32 1\l  store double %975, double* %976, align 8, !tbaa !10\l  %977 = fmul double %894, 0x3FEF6297CFF75494\l  %978 = call double @llvm.fmuladd.f64(double %893, double 0x3FC8F8B83C6993FD,\l... double %977)\l  %979 = fmul double %893, 0xBFEF6297CFF75494\l  %980 = call double @llvm.fmuladd.f64(double %894, double 0x3FC8F8B83C6993FD,\l... double %979)\l  %981 = fadd double %486, %978\l  %982 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %71, i32 0\l  store double %981, double* %982, align 8, !tbaa !5\l  %983 = fadd double %487, %980\l  %984 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %71, i32 1\l  store double %983, double* %984, align 8, !tbaa !10\l  %985 = fsub double %486, %978\l  %986 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %73, i32 0\l  store double %985, double* %986, align 8, !tbaa !5\l  %987 = fsub double %487, %980\l  %988 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %73, i32 1\l  store double %987, double* %988, align 8, !tbaa !10\l  %989 = fadd double %436, %844\l  %990 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %20, i32 0\l  store double %989, double* %990, align 8, !tbaa !5\l  %991 = fsub double %437, %843\l  %992 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %20, i32 1\l  store double %991, double* %992, align 8, !tbaa !10\l  %993 = fsub double %436, %844\l  %994 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %22, i32 0\l  store double %993, double* %994, align 8, !tbaa !5\l  %995 = fadd double %437, %843\l  %996 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %22, i32 1\l  store double %995, double* %996, align 8, !tbaa !10\l  %997 = fmul double %851, 0xBFC8F8B83C6993FD\l  %998 = call double @llvm.fmuladd.f64(double %852, double 0x3FEF6297CFF75494,\l... double %997)\l  %999 = fmul double %852, 0x3FC8F8B83C6993FD\l  %1000 = call double @llvm.fmuladd.f64(double %851, double\l... 0x3FEF6297CFF75494, double %999)\l  %1001 = fadd double %444, %998\l  %1002 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %51, i32 0\l  store double %1001, double* %1002, align 8, !tbaa !5\l  %1003 = fsub double %445, %1000\l  %1004 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %51, i32 1\l  store double %1003, double* %1004, align 8, !tbaa !10\l  %1005 = fsub double %444, %998\l  %1006 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %53, i32 0\l  store double %1005, double* %1006, align 8, !tbaa !5\l  %1007 = fadd double %445, %1000\l  %1008 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %53, i32 1\l  store double %1007, double* %1008, align 8, !tbaa !10\l  %1009 = fmul double %859, 0xBFD87DE2A6AEA312\l  %1010 = call double @llvm.fmuladd.f64(double %860, double\l... 0x3FED906BCF32832F, double %1009)\l  %1011 = fmul double %860, 0x3FD87DE2A6AEA312\l  %1012 = call double @llvm.fmuladd.f64(double %859, double\l... 0x3FED906BCF32832F, double %1011)\l  %1013 = fadd double %452, %1010\l  %1014 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %36, i32 0\l  store double %1013, double* %1014, align 8, !tbaa !5\l  %1015 = fsub double %453, %1012\l  %1016 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %36, i32 1\l  store double %1015, double* %1016, align 8, !tbaa !10\l  %1017 = fsub double %452, %1010\l  %1018 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %38, i32 0\l  store double %1017, double* %1018, align 8, !tbaa !5\l  %1019 = fadd double %453, %1012\l  %1020 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %38, i32 1\l  store double %1019, double* %1020, align 8, !tbaa !10\l  %1021 = fmul double %867, 0xBFE1C73B39AE76C7\l  %1022 = call double @llvm.fmuladd.f64(double %868, double\l... 0x3FEA9B66290EB1A3, double %1021)\l  %1023 = fmul double %868, 0x3FE1C73B39AE76C7\l  %1024 = call double @llvm.fmuladd.f64(double %867, double\l... 0x3FEA9B66290EB1A3, double %1023)\l  %1025 = fadd double %460, %1022\l  %1026 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %67, i32 0\l  store double %1025, double* %1026, align 8, !tbaa !5\l  %1027 = fsub double %461, %1024\l  %1028 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %67, i32 1\l  store double %1027, double* %1028, align 8, !tbaa !10\l  %1029 = fsub double %460, %1022\l  %1030 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %69, i32 0\l  store double %1029, double* %1030, align 8, !tbaa !5\l  %1031 = fadd double %461, %1024\l  %1032 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %69, i32 1\l  store double %1031, double* %1032, align 8, !tbaa !10\l  %1033 = fsub double %872, %871\l  %1034 = fmul double %1033, 0x3FE6A09E667F4BB8\l  %1035 = fadd double %871, %872\l  %1036 = fmul double %1035, 0x3FE6A09E667F4BB8\l  %1037 = fadd double %464, %1034\l  %1038 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %28, i32 0\l  store double %1037, double* %1038, align 8, !tbaa !5\l  %1039 = fsub double %465, %1036\l  %1040 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %28, i32 1\l  store double %1039, double* %1040, align 8, !tbaa !10\l  %1041 = fsub double %464, %1034\l  %1042 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %30, i32 0\l  store double %1041, double* %1042, align 8, !tbaa !5\l  %1043 = fadd double %465, %1036\l  %1044 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %30, i32 1\l  store double %1043, double* %1044, align 8, !tbaa !10\l  %1045 = fmul double %879, 0xBFEA9B66290EB1A3\l  %1046 = call double @llvm.fmuladd.f64(double %880, double\l... 0x3FE1C73B39AE76C7, double %1045)\l  %1047 = fmul double %880, 0x3FEA9B66290EB1A3\l  %1048 = call double @llvm.fmuladd.f64(double %879, double\l... 0x3FE1C73B39AE76C7, double %1047)\l  %1049 = fadd double %472, %1046\l  %1050 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %59, i32 0\l  store double %1049, double* %1050, align 8, !tbaa !5\l  %1051 = fsub double %473, %1048\l  %1052 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %59, i32 1\l  store double %1051, double* %1052, align 8, !tbaa !10\l  %1053 = fsub double %472, %1046\l  %1054 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %61, i32 0\l  store double %1053, double* %1054, align 8, !tbaa !5\l  %1055 = fadd double %473, %1048\l  %1056 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %61, i32 1\l  store double %1055, double* %1056, align 8, !tbaa !10\l  %1057 = fmul double %887, 0xBFED906BCF32832F\l  %1058 = call double @llvm.fmuladd.f64(double %888, double\l... 0x3FD87DE2A6AEA312, double %1057)\l  %1059 = fmul double %888, 0x3FED906BCF32832F\l  %1060 = call double @llvm.fmuladd.f64(double %887, double\l... 0x3FD87DE2A6AEA312, double %1059)\l  %1061 = fadd double %480, %1058\l  %1062 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %44, i32 0\l  store double %1061, double* %1062, align 8, !tbaa !5\l  %1063 = fsub double %481, %1060\l  %1064 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %44, i32 1\l  store double %1063, double* %1064, align 8, !tbaa !10\l  %1065 = fsub double %480, %1058\l  %1066 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %46, i32 0\l  store double %1065, double* %1066, align 8, !tbaa !5\l  %1067 = fadd double %481, %1060\l  %1068 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %46, i32 1\l  store double %1067, double* %1068, align 8, !tbaa !10\l  %1069 = fmul double %895, 0xBFEF6297CFF75494\l  %1070 = call double @llvm.fmuladd.f64(double %896, double\l... 0x3FC8F8B83C6993FD, double %1069)\l  %1071 = fmul double %896, 0x3FEF6297CFF75494\l  %1072 = call double @llvm.fmuladd.f64(double %895, double\l... 0x3FC8F8B83C6993FD, double %1071)\l  %1073 = fadd double %488, %1070\l  %1074 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %75, i32 0\l  store double %1073, double* %1074, align 8, !tbaa !5\l  %1075 = fsub double %489, %1072\l  %1076 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %75, i32 1\l  store double %1075, double* %1076, align 8, !tbaa !10\l  %1077 = fsub double %488, %1070\l  %1078 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %77, i32 0\l  store double %1077, double* %1078, align 8, !tbaa !5\l  %1079 = fadd double %489, %1072\l  %1080 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64\l... %77, i32 1\l  store double %1079, double* %1080, align 8, !tbaa !10\l  %1081 = add nsw i64 %82, 1\l  %1082 = add i64 %83, %79\l  %1083 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64 1\l  %1084 = icmp eq i64 %1081, %80\l  br i1 %1084, label %1088, label %81, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x144ca50:s0 -> Node0x144caf0;
	Node0x144ca50:s1 -> Node0x144ca50;
	Node0x144caa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%1085:\l1085:                                             \l  %1086 = add nsw i32 %1, %0\l  %1087 = sdiv i32 %1086, 2\l  call void @fft_twiddle_32(i32 noundef %0, i32 noundef %1087,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7)\l  call void @fft_twiddle_32(i32 noundef %1087, i32 noundef %1,\l... %struct.COMPLEX* noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX*\l... noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7)\l  br label %1088\l}"];
	Node0x144caa0 -> Node0x144caf0;
	Node0x144caf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1088:\l1088:                                             \l  ret void\l}"];
}

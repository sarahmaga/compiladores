digraph "CFG for 'fft_twiddle_8' function" {
	label="CFG for 'fft_twiddle_8' function";

	Node0x1422f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%8:\l  %9 = sub nsw i32 %1, %0\l  %10 = icmp slt i32 %9, 128\l  br i1 %10, label %11, label %225\l|{<s0>T|<s1>F}}"];
	Node0x1422f60:s0 -> Node0x1423400;
	Node0x1422f60:s1 -> Node0x14234f0;
	Node0x1423400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%11:\l11:                                               \l  %12 = icmp sgt i32 %1, %0\l  br i1 %12, label %13, label %228\l|{<s0>T|<s1>F}}"];
	Node0x1423400:s0 -> Node0x1423450;
	Node0x1423400:s1 -> Node0x1423540;
	Node0x1423450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%13:\l13:                                               \l  %14 = sext i32 %0 to i64\l  %15 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %3, i64 %14\l  %16 = mul i32 %6, %0\l  %17 = shl nsw i32 %7, 2\l  %18 = sext i32 %17 to i64\l  %19 = shl nsw i32 %7, 1\l  %20 = sext i32 %19 to i64\l  %21 = mul nsw i32 %7, 6\l  %22 = sext i32 %21 to i64\l  %23 = sext i32 %7 to i64\l  %24 = mul nsw i32 %7, 5\l  %25 = sext i32 %24 to i64\l  %26 = mul nsw i32 %7, 3\l  %27 = sext i32 %26 to i64\l  %28 = mul nsw i32 %7, 7\l  %29 = sext i32 %28 to i64\l  %30 = sext i32 %16 to i64\l  %31 = sext i32 %6 to i64\l  %32 = sext i32 %1 to i64\l  br label %33\l}"];
	Node0x1423450 -> Node0x14234a0;
	Node0x14234a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i64 [ %14, %13 ], [ %221, %33 ]\l  %35 = phi i64 [ %30, %13 ], [ %222, %33 ]\l  %36 = phi %struct.COMPLEX* [ %15, %13 ], [ %223, %33 ]\l  %37 = trunc i64 %35 to i32\l  %38 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %34\l  %39 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 0,\l... i32 0\l  %40 = load double, double* %39, align 8, !tbaa !5\l  %41 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %34,\l... i32 1\l  %42 = load double, double* %41, align 8, !tbaa !10\l  %43 = shl nsw i32 %37, 2\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %44,\l... i32 0\l  %46 = load double, double* %45, align 8, !tbaa !5\l  %47 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %44,\l... i32 1\l  %48 = load double, double* %47, align 8, !tbaa !10\l  %49 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 %18\l  %50 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %49, i64 0,\l... i32 0\l  %51 = load double, double* %50, align 8, !tbaa !5\l  %52 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %49, i64 0,\l... i32 1\l  %53 = load double, double* %52, align 8, !tbaa !10\l  %54 = fneg double %48\l  %55 = fmul double %53, %54\l  %56 = call double @llvm.fmuladd.f64(double %46, double %51, double %55)\l  %57 = fmul double %46, %53\l  %58 = call double @llvm.fmuladd.f64(double %48, double %51, double %57)\l  %59 = fadd double %40, %56\l  %60 = fadd double %42, %58\l  %61 = fsub double %40, %56\l  %62 = fsub double %42, %58\l  %63 = shl nsw i32 %37, 1\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %64,\l... i32 0\l  %66 = load double, double* %65, align 8, !tbaa !5\l  %67 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %64,\l... i32 1\l  %68 = load double, double* %67, align 8, !tbaa !10\l  %69 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 %20\l  %70 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %69, i64 0,\l... i32 0\l  %71 = load double, double* %70, align 8, !tbaa !5\l  %72 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %69, i64 0,\l... i32 1\l  %73 = load double, double* %72, align 8, !tbaa !10\l  %74 = fneg double %68\l  %75 = fmul double %73, %74\l  %76 = call double @llvm.fmuladd.f64(double %66, double %71, double %75)\l  %77 = fmul double %66, %73\l  %78 = call double @llvm.fmuladd.f64(double %68, double %71, double %77)\l  %79 = mul nsw i64 %35, 6\l  %80 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %79,\l... i32 0\l  %81 = load double, double* %80, align 8, !tbaa !5\l  %82 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %79,\l... i32 1\l  %83 = load double, double* %82, align 8, !tbaa !10\l  %84 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 %22\l  %85 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64 0,\l... i32 0\l  %86 = load double, double* %85, align 8, !tbaa !5\l  %87 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %84, i64 0,\l... i32 1\l  %88 = load double, double* %87, align 8, !tbaa !10\l  %89 = fneg double %83\l  %90 = fmul double %88, %89\l  %91 = call double @llvm.fmuladd.f64(double %81, double %86, double %90)\l  %92 = fmul double %81, %88\l  %93 = call double @llvm.fmuladd.f64(double %83, double %86, double %92)\l  %94 = fadd double %76, %91\l  %95 = fadd double %78, %93\l  %96 = fsub double %76, %91\l  %97 = fsub double %78, %93\l  %98 = fadd double %59, %94\l  %99 = fadd double %60, %95\l  %100 = fsub double %59, %94\l  %101 = fsub double %60, %95\l  %102 = fadd double %61, %97\l  %103 = fsub double %62, %96\l  %104 = fsub double %61, %97\l  %105 = fadd double %62, %96\l  %106 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %35,\l... i32 0\l  %107 = load double, double* %106, align 8, !tbaa !5\l  %108 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64 %35,\l... i32 1\l  %109 = load double, double* %108, align 8, !tbaa !10\l  %110 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 %23\l  %111 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %110, i64 0,\l... i32 0\l  %112 = load double, double* %111, align 8, !tbaa !5\l  %113 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %110, i64 0,\l... i32 1\l  %114 = load double, double* %113, align 8, !tbaa !10\l  %115 = fneg double %109\l  %116 = fmul double %114, %115\l  %117 = call double @llvm.fmuladd.f64(double %107, double %112, double %116)\l  %118 = fmul double %107, %114\l  %119 = call double @llvm.fmuladd.f64(double %109, double %112, double %118)\l  %120 = mul nsw i64 %35, 5\l  %121 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %120, i32 0\l  %122 = load double, double* %121, align 8, !tbaa !5\l  %123 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %120, i32 1\l  %124 = load double, double* %123, align 8, !tbaa !10\l  %125 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 %25\l  %126 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %125, i64 0,\l... i32 0\l  %127 = load double, double* %126, align 8, !tbaa !5\l  %128 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %125, i64 0,\l... i32 1\l  %129 = load double, double* %128, align 8, !tbaa !10\l  %130 = fneg double %124\l  %131 = fmul double %129, %130\l  %132 = call double @llvm.fmuladd.f64(double %122, double %127, double %131)\l  %133 = fmul double %122, %129\l  %134 = call double @llvm.fmuladd.f64(double %124, double %127, double %133)\l  %135 = fadd double %117, %132\l  %136 = fadd double %119, %134\l  %137 = fsub double %117, %132\l  %138 = fsub double %119, %134\l  %139 = mul nsw i64 %35, 3\l  %140 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %139, i32 0\l  %141 = load double, double* %140, align 8, !tbaa !5\l  %142 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %139, i32 1\l  %143 = load double, double* %142, align 8, !tbaa !10\l  %144 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 %27\l  %145 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %144, i64 0,\l... i32 0\l  %146 = load double, double* %145, align 8, !tbaa !5\l  %147 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %144, i64 0,\l... i32 1\l  %148 = load double, double* %147, align 8, !tbaa !10\l  %149 = fneg double %143\l  %150 = fmul double %148, %149\l  %151 = call double @llvm.fmuladd.f64(double %141, double %146, double %150)\l  %152 = fmul double %141, %148\l  %153 = call double @llvm.fmuladd.f64(double %143, double %146, double %152)\l  %154 = mul nsw i64 %35, 7\l  %155 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %154, i32 0\l  %156 = load double, double* %155, align 8, !tbaa !5\l  %157 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %4, i64\l... %154, i32 1\l  %158 = load double, double* %157, align 8, !tbaa !10\l  %159 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %38, i64 %29\l  %160 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %159, i64 0,\l... i32 0\l  %161 = load double, double* %160, align 8, !tbaa !5\l  %162 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %159, i64 0,\l... i32 1\l  %163 = load double, double* %162, align 8, !tbaa !10\l  %164 = fneg double %158\l  %165 = fmul double %163, %164\l  %166 = call double @llvm.fmuladd.f64(double %156, double %161, double %165)\l  %167 = fmul double %156, %163\l  %168 = call double @llvm.fmuladd.f64(double %158, double %161, double %167)\l  %169 = fadd double %151, %166\l  %170 = fadd double %153, %168\l  %171 = fsub double %151, %166\l  %172 = fsub double %153, %168\l  %173 = fadd double %135, %169\l  %174 = fadd double %136, %170\l  %175 = fsub double %135, %169\l  %176 = fsub double %136, %170\l  %177 = fadd double %137, %172\l  %178 = fsub double %138, %171\l  %179 = fsub double %137, %172\l  %180 = fadd double %138, %171\l  %181 = fadd double %98, %173\l  %182 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64 0,\l... i32 0\l  store double %181, double* %182, align 8, !tbaa !5\l  %183 = fadd double %99, %174\l  %184 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64 0,\l... i32 1\l  store double %183, double* %184, align 8, !tbaa !10\l  %185 = fsub double %98, %173\l  %186 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %18, i32 0\l  store double %185, double* %186, align 8, !tbaa !5\l  %187 = fsub double %99, %174\l  %188 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %18, i32 1\l  store double %187, double* %188, align 8, !tbaa !10\l  %189 = fadd double %177, %178\l  %190 = fmul double %189, 0x3FE6A09E667F4BB8\l  %191 = fsub double %178, %177\l  %192 = fmul double %191, 0x3FE6A09E667F4BB8\l  %193 = fadd double %102, %190\l  %194 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %23, i32 0\l  store double %193, double* %194, align 8, !tbaa !5\l  %195 = fadd double %103, %192\l  %196 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %23, i32 1\l  store double %195, double* %196, align 8, !tbaa !10\l  %197 = fsub double %102, %190\l  %198 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %25, i32 0\l  store double %197, double* %198, align 8, !tbaa !5\l  %199 = fsub double %103, %192\l  %200 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %25, i32 1\l  store double %199, double* %200, align 8, !tbaa !10\l  %201 = fadd double %100, %176\l  %202 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %20, i32 0\l  store double %201, double* %202, align 8, !tbaa !5\l  %203 = fsub double %101, %175\l  %204 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %20, i32 1\l  store double %203, double* %204, align 8, !tbaa !10\l  %205 = fsub double %100, %176\l  %206 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %22, i32 0\l  store double %205, double* %206, align 8, !tbaa !5\l  %207 = fadd double %101, %175\l  %208 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %22, i32 1\l  store double %207, double* %208, align 8, !tbaa !10\l  %209 = fsub double %180, %179\l  %210 = fmul double %209, 0x3FE6A09E667F4BB8\l  %211 = fadd double %179, %180\l  %212 = fmul double %211, 0x3FE6A09E667F4BB8\l  %213 = fadd double %104, %210\l  %214 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %27, i32 0\l  store double %213, double* %214, align 8, !tbaa !5\l  %215 = fsub double %105, %212\l  %216 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %27, i32 1\l  store double %215, double* %216, align 8, !tbaa !10\l  %217 = fsub double %104, %210\l  %218 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %29, i32 0\l  store double %217, double* %218, align 8, !tbaa !5\l  %219 = fadd double %105, %212\l  %220 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64\l... %29, i32 1\l  store double %219, double* %220, align 8, !tbaa !10\l  %221 = add nsw i64 %34, 1\l  %222 = add i64 %35, %31\l  %223 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %36, i64 1\l  %224 = icmp eq i64 %221, %32\l  br i1 %224, label %228, label %33, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x14234a0:s0 -> Node0x1423540;
	Node0x14234a0:s1 -> Node0x14234a0;
	Node0x14234f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%225:\l225:                                              \l  %226 = add nsw i32 %1, %0\l  %227 = sdiv i32 %226, 2\l  call void @fft_twiddle_8(i32 noundef %0, i32 noundef %227, %struct.COMPLEX*\l... noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX* noundef %4, i32\l... noundef %5, i32 noundef %6, i32 noundef %7)\l  call void @fft_twiddle_8(i32 noundef %227, i32 noundef %1, %struct.COMPLEX*\l... noundef %2, %struct.COMPLEX* noundef %3, %struct.COMPLEX* noundef %4, i32\l... noundef %5, i32 noundef %6, i32 noundef %7)\l  br label %228\l}"];
	Node0x14234f0 -> Node0x1423540;
	Node0x1423540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%228:\l228:                                              \l  ret void\l}"];
}

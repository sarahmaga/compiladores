digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x20c96e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%2:\l  %3 = getelementptr inbounds i8*, i8** %1, i64 1\l  %4 = load i8*, i8** %3, align 8, !tbaa !5\l  %5 = tail call i64 @strtol(i8* nocapture noundef nonnull %4, i8** noundef\l... null, i32 noundef 10) #16\l  %6 = trunc i64 %5 to i32\l  %7 = shl i64 %5, 32\l  %8 = ashr exact i64 %7, 28\l  %9 = tail call noalias i8* @malloc(i64 noundef %8) #16\l  %10 = bitcast i8* %9 to %struct.COMPLEX*\l  %11 = tail call noalias i8* @malloc(i64 noundef %8) #16\l  %12 = icmp sgt i32 %6, 0\l  br i1 %12, label %13, label %60\l|{<s0>T|<s1>F}}"];
	Node0x20c96e0:s0 -> Node0x20c9770;
	Node0x20c96e0:s1 -> Node0x20c9900;
	Node0x20c9770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%13:\l13:                                               \l  %14 = and i64 %5, 4294967295\l  %15 = add nsw i64 %14, -1\l  %16 = and i64 %5, 7\l  %17 = icmp ult i64 %15, 7\l  br i1 %17, label %49, label %18\l|{<s0>T|<s1>F}}"];
	Node0x20c9770:s0 -> Node0x20c9860;
	Node0x20c9770:s1 -> Node0x20c97c0;
	Node0x20c97c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%18:\l18:                                               \l  %19 = sub nsw i64 %14, %16\l  br label %20\l}"];
	Node0x20c97c0 -> Node0x20c9810;
	Node0x20c9810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%20:\l20:                                               \l  %21 = phi i64 [ 0, %18 ], [ %46, %20 ]\l  %22 = phi i64 [ 0, %18 ], [ %47, %20 ]\l  %23 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %10, i64 %21,\l... i32 0\l  %24 = bitcast double* %23 to \<2 x double\>*\l  store \<2 x double\> \<double 1.000000e+00, double 1.000000e+00\>, \<2 x double\>*\l... %24, align 8, !tbaa !9\l  %25 = or i64 %21, 1\l  %26 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %10, i64 %25,\l... i32 0\l  %27 = bitcast double* %26 to \<2 x double\>*\l  store \<2 x double\> \<double 1.000000e+00, double 1.000000e+00\>, \<2 x double\>*\l... %27, align 8, !tbaa !9\l  %28 = or i64 %21, 2\l  %29 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %10, i64 %28,\l... i32 0\l  %30 = bitcast double* %29 to \<2 x double\>*\l  store \<2 x double\> \<double 1.000000e+00, double 1.000000e+00\>, \<2 x double\>*\l... %30, align 8, !tbaa !9\l  %31 = or i64 %21, 3\l  %32 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %10, i64 %31,\l... i32 0\l  %33 = bitcast double* %32 to \<2 x double\>*\l  store \<2 x double\> \<double 1.000000e+00, double 1.000000e+00\>, \<2 x double\>*\l... %33, align 8, !tbaa !9\l  %34 = or i64 %21, 4\l  %35 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %10, i64 %34,\l... i32 0\l  %36 = bitcast double* %35 to \<2 x double\>*\l  store \<2 x double\> \<double 1.000000e+00, double 1.000000e+00\>, \<2 x double\>*\l... %36, align 8, !tbaa !9\l  %37 = or i64 %21, 5\l  %38 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %10, i64 %37,\l... i32 0\l  %39 = bitcast double* %38 to \<2 x double\>*\l  store \<2 x double\> \<double 1.000000e+00, double 1.000000e+00\>, \<2 x double\>*\l... %39, align 8, !tbaa !9\l  %40 = or i64 %21, 6\l  %41 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %10, i64 %40,\l... i32 0\l  %42 = bitcast double* %41 to \<2 x double\>*\l  store \<2 x double\> \<double 1.000000e+00, double 1.000000e+00\>, \<2 x double\>*\l... %42, align 8, !tbaa !9\l  %43 = or i64 %21, 7\l  %44 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %10, i64 %43,\l... i32 0\l  %45 = bitcast double* %44 to \<2 x double\>*\l  store \<2 x double\> \<double 1.000000e+00, double 1.000000e+00\>, \<2 x double\>*\l... %45, align 8, !tbaa !9\l  %46 = add nuw nsw i64 %21, 8\l  %47 = add i64 %22, 8\l  %48 = icmp eq i64 %47, %19\l  br i1 %48, label %49, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x20c9810:s0 -> Node0x20c9860;
	Node0x20c9810:s1 -> Node0x20c9810;
	Node0x20c9860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%49:\l49:                                               \l  %50 = phi i64 [ 0, %13 ], [ %46, %20 ]\l  %51 = icmp eq i64 %16, 0\l  br i1 %51, label %60, label %52\l|{<s0>T|<s1>F}}"];
	Node0x20c9860:s0 -> Node0x20c9900;
	Node0x20c9860:s1 -> Node0x20c98b0;
	Node0x20c98b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i64 [ %57, %52 ], [ %50, %49 ]\l  %54 = phi i64 [ %58, %52 ], [ 0, %49 ]\l  %55 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %10, i64 %53,\l... i32 0\l  %56 = bitcast double* %55 to \<2 x double\>*\l  store \<2 x double\> \<double 1.000000e+00, double 1.000000e+00\>, \<2 x double\>*\l... %56, align 8, !tbaa !9\l  %57 = add nuw nsw i64 %53, 1\l  %58 = add i64 %54, 1\l  %59 = icmp eq i64 %58, %16\l  br i1 %59, label %60, label %52, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x20c98b0:s0 -> Node0x20c9900;
	Node0x20c98b0:s1 -> Node0x20c98b0;
	Node0x20c9900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%60:\l60:                                               \l  %61 = bitcast i8* %11 to %struct.COMPLEX*\l  tail call void @fft(i32 noundef %6, %struct.COMPLEX* noundef %10,\l... %struct.COMPLEX* noundef %61)\l  ret i32 0\l}"];
}

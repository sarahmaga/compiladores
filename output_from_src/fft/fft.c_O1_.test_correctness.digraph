digraph "CFG for 'test_correctness' function" {
	label="CFG for 'test_correctness' function";

	Node0x14c14c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%3:\l  %4 = icmp sgt i32 %0, 0\l  br i1 %4, label %5, label %37\l|{<s0>T|<s1>F}}"];
	Node0x14c14c0:s0 -> Node0x14c1510;
	Node0x14c14c0:s1 -> Node0x14c15b0;
	Node0x14c1510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%5:\l5:                                                \l  %6 = zext i32 %0 to i64\l  br label %7\l}"];
	Node0x14c1510 -> Node0x14c1560;
	Node0x14c1560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l7:                                                \l  %8 = phi i64 [ 0, %5 ], [ %35, %7 ]\l  %9 = phi double [ 0.000000e+00, %5 ], [ %34, %7 ]\l  %10 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 %8,\l... i32 0\l  %11 = load double, double* %10, align 8, !tbaa !5\l  %12 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %8,\l... i32 0\l  %13 = load double, double* %12, align 8, !tbaa !5\l  %14 = fsub double %11, %13\l  %15 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %1, i64 %8,\l... i32 1\l  %16 = load double, double* %15, align 8, !tbaa !10\l  %17 = getelementptr inbounds %struct.COMPLEX, %struct.COMPLEX* %2, i64 %8,\l... i32 1\l  %18 = load double, double* %17, align 8, !tbaa !10\l  %19 = fsub double %16, %18\l  %20 = fmul double %19, %19\l  %21 = call double @llvm.fmuladd.f64(double %14, double %14, double %20)\l  %22 = call double @sqrt(double noundef %21) #16\l  %23 = load double, double* %12, align 8, !tbaa !5\l  %24 = load double, double* %17, align 8, !tbaa !10\l  %25 = fmul double %24, %24\l  %26 = call double @llvm.fmuladd.f64(double %23, double %23, double %25)\l  %27 = call double @sqrt(double noundef %26) #16\l  %28 = fcmp olt double %27, -1.000000e-10\l  %29 = fcmp ogt double %27, 1.000000e-10\l  %30 = or i1 %28, %29\l  %31 = select i1 %30, double %27, double 1.000000e+00\l  %32 = fdiv double %22, %31\l  %33 = fcmp ogt double %32, %9\l  %34 = select i1 %33, double %32, double %9\l  %35 = add nuw nsw i64 %8, 1\l  %36 = icmp eq i64 %35, %6\l  br i1 %36, label %37, label %7, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x14c1560:s0 -> Node0x14c15b0;
	Node0x14c1560:s1 -> Node0x14c1560;
	Node0x14c15b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%37:\l37:                                               \l  %38 = phi double [ 0.000000e+00, %3 ], [ %34, %7 ]\l  %39 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), double\l... noundef %38)\l  %40 = fcmp ogt double %38, 1.000000e-03\l  %41 = select i1 %40, i32 -1, i32 1\l  ret i32 %41\l}"];
}

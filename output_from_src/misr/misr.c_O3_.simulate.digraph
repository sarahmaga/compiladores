digraph "CFG for 'simulate' function" {
	label="CFG for 'simulate' function";

	Node0x1bb4e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%4:\l  %5 = load i32, i32* @reg_len, align 4, !tbaa !5\l  %6 = add nsw i32 %5, -1\l  %7 = sdiv i32 %6, 31\l  %8 = srem i32 %6, 31\l  %9 = icmp sgt i32 %0, 0\l  br i1 %9, label %10, label %22\l|{<s0>T|<s1>F}}"];
	Node0x1bb4e60:s0 -> Node0x1bb4f70;
	Node0x1bb4e60:s1 -> Node0x1bb5060;
	Node0x1bb4f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%10:\l10:                                               \l  %11 = icmp sgt i32 %5, 31\l  %12 = icmp sgt i32 %8, 0\l  %13 = mul nsw i32 %7, 31\l  %14 = call i32 @llvm.smax.i32(i32 %7, i32 1)\l  %15 = sext i32 %13 to i64\l  %16 = zext i32 %14 to i64\l  %17 = zext i32 %8 to i64\l  br label %18\l}"];
	Node0x1bb4f70 -> Node0x1bb4fc0;
	Node0x1bb4fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%18:\l18:                                               \l  %19 = phi i32 [ 0, %10 ], [ %157, %138 ]\l  br i1 %11, label %31, label %80\l|{<s0>T|<s1>F}}"];
	Node0x1bb4fc0:s0 -> Node0x1bb5150;
	Node0x1bb4fc0:s1 -> Node0x1bb52e0;
	Node0x1bb5010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%20:\l20:                                               \l  %21 = load i32, i32* @reg_len, align 4, !tbaa !5\l  br label %22\l}"];
	Node0x1bb5010 -> Node0x1bb5060;
	Node0x1bb5060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%22:\l22:                                               \l  %23 = phi i32 [ %21, %20 ], [ %5, %4 ]\l  %24 = icmp sgt i32 %23, 0\l  br i1 %24, label %25, label %216\l|{<s0>T|<s1>F}}"];
	Node0x1bb5060:s0 -> Node0x1bb50b0;
	Node0x1bb5060:s1 -> Node0x1bb5600;
	Node0x1bb50b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%25:\l25:                                               \l  %26 = add i32 %23, -1\l  %27 = and i32 %23, 3\l  %28 = icmp ult i32 %26, 3\l  br i1 %28, label %197, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1bb50b0:s0 -> Node0x1bb5560;
	Node0x1bb50b0:s1 -> Node0x1bb5100;
	Node0x1bb5100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%29:\l29:                                               \l  %30 = and i32 %23, -4\l  br label %159\l}"];
	Node0x1bb5100 -> Node0x1bb5510;
	Node0x1bb5150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%31:\l31:                                               \l  %32 = phi i64 [ %78, %77 ], [ 0, %18 ]\l  %33 = phi %struct.cells* [ %67, %77 ], [ %1, %18 ]\l  %34 = phi \<2 x i32\> [ %51, %77 ], [ zeroinitializer, %18 ]\l  %35 = tail call i64 @lrand48() #13\l  %36 = mul nuw nsw i64 %32, 31\l  br label %37\l}"];
	Node0x1bb5150 -> Node0x1bb51a0;
	Node0x1bb51a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i64 [ 0, %31 ], [ %75, %50 ]\l  %39 = phi i64 [ %35, %31 ], [ %74, %50 ]\l  %40 = phi %struct.cells* [ %33, %31 ], [ %67, %50 ]\l  %41 = phi \<2 x i32\> [ %34, %31 ], [ %51, %50 ]\l  %42 = add nuw nsw i64 %38, %36\l  %43 = getelementptr inbounds i8, i8* %3, i64 %42\l  %44 = load i8, i8* %43, align 1, !tbaa !9\l  %45 = icmp eq i8 %44, 49\l  br i1 %45, label %46, label %50\l|{<s0>T|<s1>F}}"];
	Node0x1bb51a0:s0 -> Node0x1bb51f0;
	Node0x1bb51a0:s1 -> Node0x1bb5240;
	Node0x1bb51f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%46:\l46:                                               \l  %47 = bitcast %struct.cells* %40 to \<2 x i32\>*\l  %48 = load \<2 x i32\>, \<2 x i32\>* %47, align 8, !tbaa !5\l  %49 = add nsw \<2 x i32\> %48, %41\l  br label %50\l}"];
	Node0x1bb51f0 -> Node0x1bb5240;
	Node0x1bb5240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi \<2 x i32\> [ %49, %46 ], [ %41, %37 ]\l  %52 = getelementptr inbounds %struct.cells, %struct.cells* %40, i64 0, i32 2\l  %53 = load %struct.cells*, %struct.cells** %52, align 8, !tbaa !10\l  %54 = getelementptr inbounds %struct.cells, %struct.cells* %53, i64 0, i32 0\l  %55 = load i32, i32* %54, align 8, !tbaa !13\l  %56 = trunc i64 %39 to i32\l  %57 = add i32 %55, %56\l  %58 = and i32 %57, 1\l  %59 = getelementptr inbounds %struct.cells, %struct.cells* %40, i64 0, i32 0\l  store i32 %58, i32* %59, align 8, !tbaa !13\l  %60 = tail call i64 @lrand48() #13\l  %61 = srem i64 %60, 1000\l  %62 = sitofp i64 %61 to double\l  %63 = fdiv double %62, 1.000000e+03\l  %64 = fcmp olt double %63, %2\l  %65 = zext i1 %64 to i64\l  %66 = xor i64 %39, %65\l  %67 = load %struct.cells*, %struct.cells** %52, align 8, !tbaa !10\l  %68 = getelementptr inbounds %struct.cells, %struct.cells* %67, i64 0, i32 1\l  %69 = load i32, i32* %68, align 4, !tbaa !14\l  %70 = trunc i64 %66 to i32\l  %71 = add i32 %69, %70\l  %72 = and i32 %71, 1\l  %73 = getelementptr inbounds %struct.cells, %struct.cells* %40, i64 0, i32 1\l  store i32 %72, i32* %73, align 4, !tbaa !14\l  %74 = ashr i64 %39, 1\l  %75 = add nuw nsw i64 %38, 1\l  %76 = icmp eq i64 %75, 31\l  br i1 %76, label %77, label %37, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x1bb5240:s0 -> Node0x1bb5290;
	Node0x1bb5240:s1 -> Node0x1bb51a0;
	Node0x1bb5290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%77:\l77:                                               \l  %78 = add nuw nsw i64 %32, 1\l  %79 = icmp eq i64 %78, %16\l  br i1 %79, label %80, label %31, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x1bb5290:s0 -> Node0x1bb52e0;
	Node0x1bb5290:s1 -> Node0x1bb5150;
	Node0x1bb52e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%80:\l80:                                               \l  %81 = phi %struct.cells* [ %1, %18 ], [ %67, %77 ]\l  %82 = phi \<2 x i32\> [ zeroinitializer, %18 ], [ %51, %77 ]\l  %83 = tail call i64 @lrand48() #13\l  br i1 %12, label %84, label %124\l|{<s0>T|<s1>F}}"];
	Node0x1bb52e0:s0 -> Node0x1bb5330;
	Node0x1bb52e0:s1 -> Node0x1bb5420;
	Node0x1bb5330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%84:\l84:                                               \l  %85 = phi i64 [ %122, %97 ], [ 0, %80 ]\l  %86 = phi i64 [ %121, %97 ], [ %83, %80 ]\l  %87 = phi %struct.cells* [ %114, %97 ], [ %81, %80 ]\l  %88 = phi \<2 x i32\> [ %98, %97 ], [ %82, %80 ]\l  %89 = add nsw i64 %85, %15\l  %90 = getelementptr inbounds i8, i8* %3, i64 %89\l  %91 = load i8, i8* %90, align 1, !tbaa !9\l  %92 = icmp eq i8 %91, 49\l  br i1 %92, label %93, label %97\l|{<s0>T|<s1>F}}"];
	Node0x1bb5330:s0 -> Node0x1bb5380;
	Node0x1bb5330:s1 -> Node0x1bb53d0;
	Node0x1bb5380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%93:\l93:                                               \l  %94 = bitcast %struct.cells* %87 to \<2 x i32\>*\l  %95 = load \<2 x i32\>, \<2 x i32\>* %94, align 8, !tbaa !5\l  %96 = add nsw \<2 x i32\> %95, %88\l  br label %97\l}"];
	Node0x1bb5380 -> Node0x1bb53d0;
	Node0x1bb53d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%97:\l97:                                               \l  %98 = phi \<2 x i32\> [ %96, %93 ], [ %88, %84 ]\l  %99 = getelementptr inbounds %struct.cells, %struct.cells* %87, i64 0, i32 2\l  %100 = load %struct.cells*, %struct.cells** %99, align 8, !tbaa !10\l  %101 = getelementptr inbounds %struct.cells, %struct.cells* %100, i64 0, i32\l... 0\l  %102 = load i32, i32* %101, align 8, !tbaa !13\l  %103 = trunc i64 %86 to i32\l  %104 = add i32 %102, %103\l  %105 = and i32 %104, 1\l  %106 = getelementptr inbounds %struct.cells, %struct.cells* %87, i64 0, i32 0\l  store i32 %105, i32* %106, align 8, !tbaa !13\l  %107 = tail call i64 @lrand48() #13\l  %108 = srem i64 %107, 1000\l  %109 = sitofp i64 %108 to double\l  %110 = fdiv double %109, 1.000000e+03\l  %111 = fcmp olt double %110, %2\l  %112 = zext i1 %111 to i64\l  %113 = xor i64 %86, %112\l  %114 = load %struct.cells*, %struct.cells** %99, align 8, !tbaa !10\l  %115 = getelementptr inbounds %struct.cells, %struct.cells* %114, i64 0, i32\l... 1\l  %116 = load i32, i32* %115, align 4, !tbaa !14\l  %117 = trunc i64 %113 to i32\l  %118 = add i32 %116, %117\l  %119 = and i32 %118, 1\l  %120 = getelementptr inbounds %struct.cells, %struct.cells* %87, i64 0, i32 1\l  store i32 %119, i32* %120, align 4, !tbaa !14\l  %121 = ashr i64 %86, 1\l  %122 = add nuw nsw i64 %85, 1\l  %123 = icmp eq i64 %122, %17\l  br i1 %123, label %124, label %84, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x1bb53d0:s0 -> Node0x1bb5420;
	Node0x1bb53d0:s1 -> Node0x1bb5330;
	Node0x1bb5420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%124:\l124:                                              \l  %125 = phi %struct.cells* [ %81, %80 ], [ %114, %97 ]\l  %126 = phi \<2 x i32\> [ %82, %80 ], [ %98, %97 ]\l  %127 = tail call i64 @lrand48() #13\l  %128 = load i32, i32* @reg_len, align 4, !tbaa !5\l  %129 = add nsw i32 %128, -1\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds i8, i8* %3, i64 %130\l  %132 = load i8, i8* %131, align 1, !tbaa !9\l  %133 = icmp eq i8 %132, 49\l  br i1 %133, label %134, label %138\l|{<s0>T|<s1>F}}"];
	Node0x1bb5420:s0 -> Node0x1bb5470;
	Node0x1bb5420:s1 -> Node0x1bb54c0;
	Node0x1bb5470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%134:\l134:                                              \l  %135 = bitcast %struct.cells* %125 to \<2 x i32\>*\l  %136 = load \<2 x i32\>, \<2 x i32\>* %135, align 8, !tbaa !5\l  %137 = add nsw \<2 x i32\> %136, %126\l  br label %138\l}"];
	Node0x1bb5470 -> Node0x1bb54c0;
	Node0x1bb54c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%138:\l138:                                              \l  %139 = phi \<2 x i32\> [ %137, %134 ], [ %126, %124 ]\l  %140 = trunc i64 %127 to i32\l  %141 = extractelement \<2 x i32\> %139, i64 0\l  %142 = add i32 %141, %140\l  %143 = and i32 %142, 1\l  %144 = getelementptr inbounds %struct.cells, %struct.cells* %125, i64 0, i32\l... 0\l  store i32 %143, i32* %144, align 8, !tbaa !13\l  %145 = tail call i64 @lrand48() #13\l  %146 = srem i64 %145, 10000\l  %147 = sitofp i64 %146 to double\l  %148 = fdiv double %147, 1.000000e+04\l  %149 = fcmp olt double %148, %2\l  %150 = zext i1 %149 to i64\l  %151 = xor i64 %127, %150\l  %152 = trunc i64 %151 to i32\l  %153 = extractelement \<2 x i32\> %139, i64 1\l  %154 = add i32 %153, %152\l  %155 = and i32 %154, 1\l  %156 = getelementptr inbounds %struct.cells, %struct.cells* %125, i64 0, i32\l... 1\l  store i32 %155, i32* %156, align 4, !tbaa !14\l  %157 = add nuw nsw i32 %19, 1\l  %158 = icmp eq i32 %157, %0\l  br i1 %158, label %20, label %18, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x1bb54c0:s0 -> Node0x1bb5010;
	Node0x1bb54c0:s1 -> Node0x1bb4fc0;
	Node0x1bb5510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%159:\l159:                                              \l  %160 = phi %struct.cells* [ %1, %29 ], [ %194, %159 ]\l  %161 = phi i32 [ 0, %29 ], [ %192, %159 ]\l  %162 = phi i32 [ 0, %29 ], [ %195, %159 ]\l  %163 = getelementptr inbounds %struct.cells, %struct.cells* %160, i64 0, i32\l... 0\l  %164 = load i32, i32* %163, align 8, !tbaa !13\l  %165 = getelementptr inbounds %struct.cells, %struct.cells* %160, i64 0, i32\l... 1\l  %166 = load i32, i32* %165, align 4, !tbaa !14\l  %167 = icmp eq i32 %164, %166\l  %168 = getelementptr inbounds %struct.cells, %struct.cells* %160, i64 0, i32\l... 2\l  %169 = load %struct.cells*, %struct.cells** %168, align 8, !tbaa !10\l  %170 = getelementptr inbounds %struct.cells, %struct.cells* %169, i64 0, i32\l... 0\l  %171 = load i32, i32* %170, align 8, !tbaa !13\l  %172 = getelementptr inbounds %struct.cells, %struct.cells* %169, i64 0, i32\l... 1\l  %173 = load i32, i32* %172, align 4, !tbaa !14\l  %174 = icmp eq i32 %171, %173\l  %175 = getelementptr inbounds %struct.cells, %struct.cells* %169, i64 0, i32\l... 2\l  %176 = load %struct.cells*, %struct.cells** %175, align 8, !tbaa !10\l  %177 = getelementptr inbounds %struct.cells, %struct.cells* %176, i64 0, i32\l... 0\l  %178 = load i32, i32* %177, align 8, !tbaa !13\l  %179 = getelementptr inbounds %struct.cells, %struct.cells* %176, i64 0, i32\l... 1\l  %180 = load i32, i32* %179, align 4, !tbaa !14\l  %181 = icmp eq i32 %178, %180\l  %182 = getelementptr inbounds %struct.cells, %struct.cells* %176, i64 0, i32\l... 2\l  %183 = load %struct.cells*, %struct.cells** %182, align 8, !tbaa !10\l  %184 = getelementptr inbounds %struct.cells, %struct.cells* %183, i64 0, i32\l... 0\l  %185 = load i32, i32* %184, align 8, !tbaa !13\l  %186 = getelementptr inbounds %struct.cells, %struct.cells* %183, i64 0, i32\l... 1\l  %187 = load i32, i32* %186, align 4, !tbaa !14\l  %188 = icmp eq i32 %185, %187\l  %189 = select i1 %188, i1 %181, i1 false\l  %190 = select i1 %189, i1 %174, i1 false\l  %191 = select i1 %190, i1 %167, i1 false\l  %192 = select i1 %191, i32 %161, i32 1\l  %193 = getelementptr inbounds %struct.cells, %struct.cells* %183, i64 0, i32\l... 2\l  %194 = load %struct.cells*, %struct.cells** %193, align 8, !tbaa !10\l  %195 = add i32 %162, 4\l  %196 = icmp eq i32 %195, %30\l  br i1 %196, label %197, label %159, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x1bb5510:s0 -> Node0x1bb5560;
	Node0x1bb5510:s1 -> Node0x1bb5510;
	Node0x1bb5560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%197:\l197:                                              \l  %198 = phi i32 [ undef, %25 ], [ %192, %159 ]\l  %199 = phi %struct.cells* [ %1, %25 ], [ %194, %159 ]\l  %200 = phi i32 [ 0, %25 ], [ %192, %159 ]\l  %201 = icmp eq i32 %27, 0\l  br i1 %201, label %216, label %202\l|{<s0>T|<s1>F}}"];
	Node0x1bb5560:s0 -> Node0x1bb5600;
	Node0x1bb5560:s1 -> Node0x1bb55b0;
	Node0x1bb55b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%202:\l202:                                              \l  %203 = phi %struct.cells* [ %213, %202 ], [ %199, %197 ]\l  %204 = phi i32 [ %211, %202 ], [ %200, %197 ]\l  %205 = phi i32 [ %214, %202 ], [ 0, %197 ]\l  %206 = getelementptr inbounds %struct.cells, %struct.cells* %203, i64 0, i32\l... 0\l  %207 = load i32, i32* %206, align 8, !tbaa !13\l  %208 = getelementptr inbounds %struct.cells, %struct.cells* %203, i64 0, i32\l... 1\l  %209 = load i32, i32* %208, align 4, !tbaa !14\l  %210 = icmp eq i32 %207, %209\l  %211 = select i1 %210, i32 %204, i32 1\l  %212 = getelementptr inbounds %struct.cells, %struct.cells* %203, i64 0, i32\l... 2\l  %213 = load %struct.cells*, %struct.cells** %212, align 8, !tbaa !10\l  %214 = add i32 %205, 1\l  %215 = icmp eq i32 %214, %27\l  br i1 %215, label %216, label %202, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x1bb55b0:s0 -> Node0x1bb5600;
	Node0x1bb55b0:s1 -> Node0x1bb55b0;
	Node0x1bb5600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%216:\l216:                                              \l  %217 = phi i32 [ 0, %22 ], [ %198, %197 ], [ %211, %202 ]\l  ret i32 %217\l}"];
}

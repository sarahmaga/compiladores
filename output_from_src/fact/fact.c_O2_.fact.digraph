digraph "CFG for 'fact' function" {
	label="CFG for 'fact' function";

	Node0x1081510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%1:\l  %2 = icmp sgt i32 %0, 1\l  br i1 %2, label %3, label %77\l|{<s0>T|<s1>F}}"];
	Node0x1081510:s0 -> Node0x1086fc0;
	Node0x1081510:s1 -> Node0x1087290;
	Node0x1086fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l3:                                                \l  %4 = add i32 %0, 1\l  %5 = call i32 @llvm.umin.i32(i32 %0, i32 2)\l  %6 = sub i32 %4, %5\l  %7 = icmp ult i32 %6, 8\l  br i1 %7, label %68, label %8\l|{<s0>T|<s1>F}}"];
	Node0x1086fc0:s0 -> Node0x10871f0;
	Node0x1086fc0:s1 -> Node0x1087010;
	Node0x1087010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%8:\l8:                                                \l  %9 = and i32 %6, -8\l  %10 = sub i32 %0, %9\l  %11 = insertelement \<4 x i32\> poison, i32 %0, i64 0\l  %12 = shufflevector \<4 x i32\> %11, \<4 x i32\> poison, \<4 x i32\>\l... zeroinitializer\l  %13 = add \<4 x i32\> %12, \<i32 0, i32 -1, i32 -2, i32 -3\>\l  %14 = add i32 %9, -8\l  %15 = lshr exact i32 %14, 3\l  %16 = add nuw nsw i32 %15, 1\l  %17 = and i32 %16, 3\l  %18 = icmp ult i32 %14, 24\l  br i1 %18, label %44, label %19\l|{<s0>T|<s1>F}}"];
	Node0x1087010:s0 -> Node0x1087100;
	Node0x1087010:s1 -> Node0x1087060;
	Node0x1087060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%19:\l19:                                               \l  %20 = and i32 %16, 1073741820\l  br label %21\l}"];
	Node0x1087060 -> Node0x10870b0;
	Node0x10870b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%21:\l21:                                               \l  %22 = phi \<4 x i32\> [ \<i32 1, i32 1, i32 1, i32 1\>, %19 ], [ %39, %21 ]\l  %23 = phi \<4 x i32\> [ \<i32 1, i32 1, i32 1, i32 1\>, %19 ], [ %40, %21 ]\l  %24 = phi \<4 x i32\> [ %13, %19 ], [ %41, %21 ]\l  %25 = phi i32 [ 0, %19 ], [ %42, %21 ]\l  %26 = add \<4 x i32\> %24, \<i32 -4, i32 -4, i32 -4, i32 -4\>\l  %27 = mul \<4 x i32\> %22, %24\l  %28 = mul \<4 x i32\> %23, %26\l  %29 = add \<4 x i32\> %24, \<i32 -8, i32 -8, i32 -8, i32 -8\>\l  %30 = add \<4 x i32\> %24, \<i32 -12, i32 -12, i32 -12, i32 -12\>\l  %31 = mul \<4 x i32\> %27, %29\l  %32 = mul \<4 x i32\> %28, %30\l  %33 = add \<4 x i32\> %24, \<i32 -16, i32 -16, i32 -16, i32 -16\>\l  %34 = add \<4 x i32\> %24, \<i32 -20, i32 -20, i32 -20, i32 -20\>\l  %35 = mul \<4 x i32\> %31, %33\l  %36 = mul \<4 x i32\> %32, %34\l  %37 = add \<4 x i32\> %24, \<i32 -24, i32 -24, i32 -24, i32 -24\>\l  %38 = add \<4 x i32\> %24, \<i32 -28, i32 -28, i32 -28, i32 -28\>\l  %39 = mul \<4 x i32\> %35, %37\l  %40 = mul \<4 x i32\> %36, %38\l  %41 = add \<4 x i32\> %24, \<i32 -32, i32 -32, i32 -32, i32 -32\>\l  %42 = add i32 %25, 4\l  %43 = icmp eq i32 %42, %20\l  br i1 %43, label %44, label %21, !llvm.loop !5\l|{<s0>T|<s1>F}}"];
	Node0x10870b0:s0 -> Node0x1087100;
	Node0x10870b0:s1 -> Node0x10870b0;
	Node0x1087100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%44:\l44:                                               \l  %45 = phi \<4 x i32\> [ undef, %8 ], [ %39, %21 ]\l  %46 = phi \<4 x i32\> [ undef, %8 ], [ %40, %21 ]\l  %47 = phi \<4 x i32\> [ \<i32 1, i32 1, i32 1, i32 1\>, %8 ], [ %39, %21 ]\l  %48 = phi \<4 x i32\> [ \<i32 1, i32 1, i32 1, i32 1\>, %8 ], [ %40, %21 ]\l  %49 = phi \<4 x i32\> [ %13, %8 ], [ %41, %21 ]\l  %50 = icmp eq i32 %17, 0\l  br i1 %50, label %62, label %51\l|{<s0>T|<s1>F}}"];
	Node0x1087100:s0 -> Node0x10871a0;
	Node0x1087100:s1 -> Node0x1087150;
	Node0x1087150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%51:\l51:                                               \l  %52 = phi \<4 x i32\> [ %57, %51 ], [ %47, %44 ]\l  %53 = phi \<4 x i32\> [ %58, %51 ], [ %48, %44 ]\l  %54 = phi \<4 x i32\> [ %59, %51 ], [ %49, %44 ]\l  %55 = phi i32 [ %60, %51 ], [ 0, %44 ]\l  %56 = add \<4 x i32\> %54, \<i32 -4, i32 -4, i32 -4, i32 -4\>\l  %57 = mul \<4 x i32\> %52, %54\l  %58 = mul \<4 x i32\> %53, %56\l  %59 = add \<4 x i32\> %54, \<i32 -8, i32 -8, i32 -8, i32 -8\>\l  %60 = add i32 %55, 1\l  %61 = icmp eq i32 %60, %17\l  br i1 %61, label %62, label %51, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x1087150:s0 -> Node0x10871a0;
	Node0x1087150:s1 -> Node0x1087150;
	Node0x10871a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%62:\l62:                                               \l  %63 = phi \<4 x i32\> [ %45, %44 ], [ %57, %51 ]\l  %64 = phi \<4 x i32\> [ %46, %44 ], [ %58, %51 ]\l  %65 = mul \<4 x i32\> %64, %63\l  %66 = call i32 @llvm.vector.reduce.mul.v4i32(\<4 x i32\> %65)\l  %67 = icmp eq i32 %6, %9\l  br i1 %67, label %77, label %68\l|{<s0>T|<s1>F}}"];
	Node0x10871a0:s0 -> Node0x1087290;
	Node0x10871a0:s1 -> Node0x10871f0;
	Node0x10871f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%68:\l68:                                               \l  %69 = phi i32 [ 1, %3 ], [ %66, %62 ]\l  %70 = phi i32 [ %0, %3 ], [ %10, %62 ]\l  br label %71\l}"];
	Node0x10871f0 -> Node0x1087240;
	Node0x1087240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i32 [ %74, %71 ], [ %69, %68 ]\l  %73 = phi i32 [ %75, %71 ], [ %70, %68 ]\l  %74 = mul nsw i32 %72, %73\l  %75 = add nsw i32 %73, -1\l  %76 = icmp ugt i32 %73, 2\l  br i1 %76, label %71, label %77, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x1087240:s0 -> Node0x1087240;
	Node0x1087240:s1 -> Node0x1087290;
	Node0x1087290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%77:\l77:                                               \l  %78 = phi i32 [ 1, %1 ], [ %66, %62 ], [ %74, %71 ]\l  ret i32 %78\l}"];
}

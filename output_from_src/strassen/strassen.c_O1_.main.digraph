digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x100e1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%2:\l  %3 = getelementptr inbounds i8*, i8** %1, i64 1\l  %4 = load i8*, i8** %3, align 8, !tbaa !5\l  %5 = call i64 @strtol(i8* nocapture noundef nonnull %4, i8** noundef null,\l... i32 noundef 10) #12\l  %6 = trunc i64 %5 to i32\l  %7 = call i32 @llvm.ctpop.i32(i32 %6), !range !9\l  %8 = icmp ult i32 %7, 2\l  %9 = and i32 %6, 15\l  %10 = icmp eq i32 %9, 0\l  %11 = and i1 %8, %10\l  br i1 %11, label %14, label %12\l|{<s0>T|<s1>F}}"];
	Node0x100e1b0:s0 -> Node0x100e250;
	Node0x100e1b0:s1 -> Node0x100e200;
	Node0x100e200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%12:\l12:                                               \l  %13 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3, i64 0, i64 0), i32\l... noundef %6, i32 noundef 16)\l  call void @exit(i32 noundef 1) #13\l  unreachable\l}"];
	Node0x100e250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%14:\l14:                                               \l  %15 = shl i64 %5, 3\l  %16 = mul i64 %15, %5\l  %17 = and i64 %16, 34359738360\l  %18 = call noalias i8* @malloc(i64 noundef %17) #12\l  %19 = bitcast i8* %18 to double*\l  %20 = call noalias i8* @malloc(i64 noundef %17) #12\l  %21 = bitcast i8* %20 to double*\l  %22 = call noalias i8* @malloc(i64 noundef %17) #12\l  %23 = icmp sgt i32 %6, 0\l  br i1 %23, label %24, label %63\l|{<s0>T|<s1>F}}"];
	Node0x100e250:s0 -> Node0x100e2a0;
	Node0x100e250:s1 -> Node0x100e570;
	Node0x100e2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%24:\l24:                                               \l  %25 = shl i64 %5, 32\l  %26 = ashr exact i64 %25, 32\l  %27 = and i64 %5, 4294967295\l  br label %28\l}"];
	Node0x100e2a0 -> Node0x100e2f0;
	Node0x100e2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%28:\l28:                                               \l  %29 = phi i64 [ 0, %24 ], [ %41, %40 ]\l  %30 = mul nsw i64 %29, %26\l  br label %31\l}"];
	Node0x100e2f0 -> Node0x100e340;
	Node0x100e340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i64 [ 0, %28 ], [ %38, %31 ]\l  %33 = call i32 @rand() #12\l  %34 = sitofp i32 %33 to double\l  %35 = fdiv double %34, 0x41DFFFFFFFC00000\l  %36 = add nsw i64 %32, %30\l  %37 = getelementptr inbounds double, double* %19, i64 %36\l  store double %35, double* %37, align 8, !tbaa !10\l  %38 = add nuw nsw i64 %32, 1\l  %39 = icmp eq i64 %38, %27\l  br i1 %39, label %40, label %31, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x100e340:s0 -> Node0x100e390;
	Node0x100e340:s1 -> Node0x100e340;
	Node0x100e390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%40:\l40:                                               \l  %41 = add nuw nsw i64 %29, 1\l  %42 = icmp eq i64 %41, %27\l  br i1 %42, label %43, label %28, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x100e390:s0 -> Node0x100e3e0;
	Node0x100e390:s1 -> Node0x100e2f0;
	Node0x100e3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%43:\l43:                                               \l  br i1 %23, label %44, label %63\l|{<s0>T|<s1>F}}"];
	Node0x100e3e0:s0 -> Node0x100e430;
	Node0x100e3e0:s1 -> Node0x100e570;
	Node0x100e430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%44:\l44:                                               \l  %45 = shl i64 %5, 32\l  %46 = ashr exact i64 %45, 32\l  %47 = and i64 %5, 4294967295\l  br label %48\l}"];
	Node0x100e430 -> Node0x100e480;
	Node0x100e480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%48:\l48:                                               \l  %49 = phi i64 [ 0, %44 ], [ %61, %60 ]\l  %50 = mul nsw i64 %49, %46\l  br label %51\l}"];
	Node0x100e480 -> Node0x100e4d0;
	Node0x100e4d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%51:\l51:                                               \l  %52 = phi i64 [ 0, %48 ], [ %58, %51 ]\l  %53 = call i32 @rand() #12\l  %54 = sitofp i32 %53 to double\l  %55 = fdiv double %54, 0x41DFFFFFFFC00000\l  %56 = add nsw i64 %52, %50\l  %57 = getelementptr inbounds double, double* %21, i64 %56\l  store double %55, double* %57, align 8, !tbaa !10\l  %58 = add nuw nsw i64 %52, 1\l  %59 = icmp eq i64 %58, %47\l  br i1 %59, label %60, label %51, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x100e4d0:s0 -> Node0x100e520;
	Node0x100e4d0:s1 -> Node0x100e4d0;
	Node0x100e520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%60:\l60:                                               \l  %61 = add nuw nsw i64 %49, 1\l  %62 = icmp eq i64 %61, %47\l  br i1 %62, label %63, label %48, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x100e520:s0 -> Node0x100e570;
	Node0x100e520:s1 -> Node0x100e480;
	Node0x100e570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%63:\l63:                                               \l  %64 = bitcast i8* %22 to double*\l  %65 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1)\l... getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32\l... noundef %6) #12\l  call void @OptimizedStrassenMultiply(double* noundef %21, double* noundef\l... %64, double* noundef %19, i32 noundef %6, i32 noundef %6, i32 noundef %6, i32\l... noundef %6, i32 noundef 1) #12\l  %66 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds\l... ([12 x i8], [12 x i8]* @str.4, i64 0, i64 0)) #12\l  call void @free(i8* noundef %18) #12\l  call void @free(i8* noundef %20) #12\l  call void @free(i8* noundef %22) #12\l  ret i32 0\l}"];
}
